{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u03a3\u03c7\u03b5\u03c4\u03b9\u03ba\u03ac \u03bc\u03b5 \u03c4\u03bf \u03bc\u03ac\u03b8\u03b7\u03bc\u03b1","text":"<p>\u0395\u03b1\u03c1\u03b9\u03bd\u03cc \u03b5\u03be\u03ac\u03bc\u03b7\u03bd\u03bf 2024-2025</p> <p>\u03a4\u03bf \u03bc\u03ac\u03b8\u03b7\u03bc\u03b1 \u0391\u03a1\u03a7\u0395\u03a3 \u0393\u039b\u03a9\u03a3\u03a3\u03a9\u039d \u03a0\u03a1\u039f\u0393\u03a1\u0391\u039c\u039c\u0391\u03a4\u0399\u03a3\u039c\u039f\u03a5 \u03b4\u03b9\u03b4\u03ac\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03c4\u03bc\u03ae\u03bc\u03b1 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03a4\u03b7\u03bb\u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03b9\u03ce\u03bd \u03c4\u03bf\u03c5 \u03a0\u03b1\u03bd\u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03af\u03bf\u03c5 \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd \u03c3\u03c4\u03bf 2<sup>o</sup> \u03ad\u03c4\u03bf\u03c2 \u03c3\u03c4\u03bf \u03b2' \u03b5\u03be\u03ac\u03bc\u03b7\u03bd\u03bf.</p> <p>\u0394\u03b9\u03b4\u03ac\u03c3\u03ba\u03c9\u03bd: \u03a7\u03c1\u03ae\u03c3\u03c4\u03bf\u03c2 \u0393\u03ba\u03cc\u03b3\u03ba\u03bf\u03c2</p> <p>\u03a3\u03cd\u03bd\u03b4\u03b5\u03c3\u03bc\u03bf\u03c2 \u03c3\u03c4\u03bf ecourse \u03c4\u03bf\u03c5  \u03a0\u03b1\u03bd\u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03af\u03bf\u03c5 \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd: https://ecourse.uoi.gr/course/view.php?id=1945</p> <p>\u03a6\u03cc\u03c1\u03bf\u03c5\u03bc \u03c3\u03c5\u03b6\u03b7\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03b3\u03b9\u03b1 \u03c4\u03bf \u03bc\u03ac\u03b8\u03b7\u03bc\u03b1 \u03c3\u03c4\u03bf ed discussion (\u03b7 \u03c0\u03c1\u03cc\u03ba\u03bb\u03b7\u03c3\u03b7 \u03c3\u03c5\u03bc\u03bc\u03b5\u03c4\u03bf\u03c7\u03ae\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf https://ecourse.uoi.gr/mod/forum/discuss.php?d=77780).</p> <p>\u03a3\u03c5\u03bd\u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2 \u03b2\u03b1\u03b8\u03bc\u03bf\u03bb\u03cc\u03b3\u03b7\u03c3\u03b7\u03c2</p> <p>\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03b9\u03c2: \u03bc\u03b5 \u03c3\u03c5\u03bc\u03bc\u03b5\u03c4\u03bf\u03c7\u03ae 40% \u03c3\u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b9\u03ba\u03cc \u03b2\u03b1\u03b8\u03bc\u03cc (\u03b5\u03c0\u03af\u03b4\u03bf\u03c3\u03b7 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd 20/40 \u03ba\u03b1\u03b9 \u03c0\u03b1\u03c1\u03ac\u03b4\u03bf\u03c3\u03b7 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd 3 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 4 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b9\u03b1 \u03c3\u03c5\u03bc\u03bc\u03b5\u03c4\u03bf\u03c7\u03ae \u03c3\u03c4\u03b9\u03c2 \u03c4\u03b5\u03bb\u03b9\u03ba\u03ad\u03c2 \u03b5\u03be\u03b5\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2).</p> <p>\u03a4\u03b5\u03bb\u03b9\u03ba\u03ae \u03b5\u03be\u03ad\u03c4\u03b1\u03c3\u03b7: \u03bc\u03b5 \u03c3\u03c5\u03bc\u03bc\u03b5\u03c4\u03bf\u03c7\u03ae 60% \u03c3\u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b9\u03ba\u03cc \u03b2\u03b1\u03b8\u03bc\u03cc.</p>"},{"location":"#_2","title":"\u03a3\u03c5\u03b3\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1","text":"<ul> <li>\u0391\u03c1\u03c7\u03ad\u03c2 \u0393\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd 11\u03b7 \u03b5\u03ba\u03b4., Robert W. Sebesta </li> <li>\u03a3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03b5\u03c2 \u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd, Brooks Webber Adam</li> <li>\u03a0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03c4\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd, Michael L. Scott</li> </ul>"},{"location":"assertions/","title":"Assertions","text":""},{"location":"assertions/#assertions-c","title":"Assertions \u03c3\u03c4\u03b7 C","text":"<p>\u0394\u03b5\u03af\u03c4\u03b5 \u03c4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5 <code>assert()</code> \u03ba\u03b1\u03b9 <code>static_assert()</code> \u03c3\u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03ac\u03b3\u03c1\u03b1\u03c6\u03bf 15.2 \u03c4\u03bf\u03c5 \u03a4\u03b6\u03ac\u03bb\u03bb\u03b1\u03c2, \u0391., \u0393\u03ba\u03cc\u03b3\u03ba\u03bf\u03c2, \u03a7., &amp; \u03a4\u03c3\u03bf\u03cd\u03bb\u03bf\u03c2, \u0399. (2024). \u039c\u03b9\u03b1 \u03c3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03b7 \u03c0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7 \u03c3\u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 C [\u03a0\u03c1\u03bf\u03c0\u03c4\u03c5\u03c7\u03b9\u03b1\u03ba\u03cc \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03bf]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2.</p>"},{"location":"assertions/#assertions-python","title":"Assertions \u03c3\u03c4\u03b7\u03bd Python","text":"assert_example.py<pre><code>def divide(a, b):\n    assert b != 0, \"Denominator cannot be zero!\"\n    return a / b\n\nprint(divide(10, 2))  # 5.0\nprint(divide(10, 0))  # ZeroDivisionError: division by zero\n</code></pre> <p>\u0395\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf assert \u03bc\u03ad\u03c3\u03b1 \u03c3\u03c4\u03bf\u03bd \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1: <pre><code>$ python assert_example.py\n5.0\nTraceback (most recent call last):\n  File \".../assert_example.py\", line 6, in &lt;module&gt;\n    print(divide(10, 0))  # AssertionError: Denominator cannot be zero!\n  File \".../assert_example.py\", line 2, in divide\n    assert b != 0, \"Denominator cannot be zero!\"\nAssertionError: Denominator cannot be zero!\n</code></pre></p> <p>\u0391\u03c0\u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf assert \u03bc\u03ad\u03c3\u03b1 \u03c3\u03c4\u03bf\u03bd \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1, \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7/\u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ python -\u039f assert_example.py\n5.0\nTraceback (most recent call last):\n  File \".../assert_example.py\", line 6, in &lt;module&gt;\n    print(divide(10, 0))  # AssertionError: Denominator cannot be zero!\n  File \".../assert_example.py\", line 3, in divide\n    return a / b\nZeroDivisionError: division by zero\n</code></pre></p>"},{"location":"assignment2024_1_sol/","title":"\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae\u03c2 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 1 2023-2024","text":"<p>\u0395\u03ba\u03c6\u03ce\u03bd\u03b7\u03c3\u03b7</p> <ul> <li>1\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7</li> </ul> <p>\u039b\u03cd\u03c3\u03b7</p> <p>\u03a4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 \u03b1\u03c1\u03c7\u03b5\u03af\u03b1: <code>utils.py</code>, <code>erotima1.py</code> \u03ba\u03b1\u03b9 <code>erotima2.py</code> \u03cc\u03c0\u03c9\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf points.txt \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b2\u03c1\u03af\u03c3\u03ba\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03af\u03b4\u03b9\u03bf \u03c6\u03ac\u03ba\u03b5\u03bb\u03bf.</p> utils.py<pre><code>def distance(x1, y1, x2, y2):\n    return ((x1 - x2) ** 2 + (y1 - y2) ** 2) ** 0.5\n\n\ndef area(x1, y1, x2, y2, x3, y3):\n    a = distance(x1, y1, x2, y2)\n    b = distance(x2, y2, x3, y3)\n    c = distance(x3, y3, x1, y1)\n    s = (a + b + c) / 2\n    if s * (s - a) * (s - b) * (s - c) &lt;= 0:\n        raise ValueError(\n            f\"Invalid triangle with sides {a}, {b}, {c} and semiperimeter {s}, points {x1, y1}, {x2, y2}, {x3, y3}\"\n        )\n    return (s * (s - a) * (s - b) * (s - c)) ** 0.5\n\n\ndef mean(values):\n    return sum(values) / len(values)\n\n\ndef median(values):\n    values.sort()\n    n = len(values)\n    if n % 2 == 0:\n        return (values[n // 2 - 1] + values[n // 2]) / 2\n    else:\n        return values[n // 2]\n\n\ndef stdev(values):\n    m = mean(values)\n    return (sum((x - m) ** 2 for x in values) / len(values)) ** 0.5\n</code></pre> erotima1.py<pre><code>import itertools\nimport os\nimport random\nimport statistics as stats\n\nfrom utils import area, mean, median, stdev\n\n\ndef generate_points(n, seed=None):\n    if seed:\n        random.seed(seed)\n    points = []\n    for _ in range(n):\n        x = random.randint(-100, 100)\n        y = random.randint(-100, 100)\n        points.append((x, y))\n    return points\n\n\ndef save_points(points, filename):\n    with open(os.path.join(os.path.dirname(__file__), filename), \"w\") as f:\n        for x, y in points:\n            f.write(f\"{x} {y}\\n\")\n\n\n# \u039b\u03cd\u03c3\u03b7 \u0391: \u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b5\u03bc\u03c6\u03c9\u03bb\u03b5\u03c5\u03bc\u03ad\u03bd\u03c9\u03bd for\n# def get_areas(points):\n#     areas = []\n#     for i in range(len(points)):\n#         for j in range(i + 1, len(points)):\n#             for k in range(j + 1, len(points)):\n#                 p1 = points[i]\n#                 p2 = points[j]\n#                 p3 = points[k]\n#                 try:\n#                     areas.append(area(*p1, *p2, *p3))\n#                 except ValueError:\n#                     pass\n#     return areas\n\n\n# \u039b\u03cd\u03c3\u03b7 \u0392: \u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 itertools\ndef get_areas(points):\n    areas = []\n    for i, j, k in itertools.combinations(range(len(points)), 3):\n        p1 = points[i]\n        p2 = points[j]\n        p3 = points[k]\n        try:\n            areas.append(area(*p1, *p2, *p3))\n        except ValueError:\n            pass\n    return areas\n\n\nif __name__ == \"__main__\":\n    points = generate_points(100, seed=12345)\n    # save_points(points, \"points.txt\")\n    areas = get_areas(points)\n    print(f\"Valid triangles: {len(areas)}\")\n    print(f\"Mean   = {mean(areas):.2f}\")\n    print(f\"Median = {median(areas):.2f}\")\n    print(f\"Stdev  = {stdev(areas):.2f}\")\n\n    print(\"Using statistics module\")\n    print(f\"Mean   = {stats.mean(areas):.2f}\")\n    print(f\"Median = {stats.median(areas):.2f}\")\n    print(f\"Stdev  = {stats.stdev(areas):.2f}\")\n</code></pre> <pre><code>$ python erotima1.py\nValid triangles: 161673\nMean   = 3206.82\nMedian = 2392.50\nStdev  = 2843.24\nUsing statistics module\nMean   = 3206.82\nMedian = 2392.50\nStdev  = 2843.25\n</code></pre> erotima2.py<pre><code>import os\nimport unittest\n\nfrom erotima1 import get_areas\nfrom utils import mean, median, stdev\n\n\ndef load_points(filename):\n    points = []\n    with open(os.path.join(os.path.dirname(__file__), filename), \"r\") as f:\n        for line in f:\n            x, y = line.strip().split()\n            points.append((int(x), int(y)))\n    return points\n\n\nclass TestPoints(unittest.TestCase):\n    def test_100_points_from_file(self):\n        points = load_points(\"points.txt\")\n        areas = get_areas(points)\n        self.assertEqual(len(areas), 161673)\n        self.assertAlmostEqual(mean(areas), 3206.82, places=2)\n        self.assertAlmostEqual(median(areas), 2392.50, places=2)\n        self.assertAlmostEqual(stdev(areas), 2843.24, places=2)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> <pre><code>$ python erotima2.py\n.\n----------------------------------------------------------------------\nRan 1 test in 0.419s\n\nOK\n</code></pre>"},{"location":"assignment2024_2_sol/","title":"\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae\u03c2 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 2 2023-2024","text":"<p>\u0395\u03ba\u03c6\u03ce\u03bd\u03b7\u03c3\u03b7</p> <ul> <li>2\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7</li> </ul> <p>\u039b\u03cd\u03c3\u03b7</p> my_re_functions.py<pre><code>import re\nfrom datetime import datetime\n\na_pgn_game = \"\"\"\n[Event \"WCh 2023\"]\n[Site \"Astana KAZ\"]\n[Date \"2023.04.09\"]\n[Round \"1.1\"]\n[White \"Nepomniachtchi,I\"]\n[Black \"Ding Liren\"]\n[Result \"1/2-1/2\"]\n[WhiteElo \"2795\"]\n[BlackElo \"2788\"]\n[ECO \"C85\"]\n\n1.e4 e5 2.Nf3 Nc6 3.Bb5 a6 4.Ba4 Nf6 5.O-O Be7 6.Bxc6 dxc6 7.Re1 Nd7 8.d4 exd4\n9.Qxd4 O-O 10.Bf4 Nc5 11.Qe3 Bg4 12.Nd4 Qd7 13.Nc3 Rad8 14.Nf5 Ne6 15.Nxe7+ Qxe7\n16.Bg3 Bh5 17.f3 f6 18.h3 h6 19.Kh2 Bf7 20.Rad1 b6 21.a3 a5 22.Ne2 Rxd1 23.Rxd1 Rd8\n24.Rd3 c5 25.Qd2 c6 26.Rxd8+ Nxd8 27.Qf4 b5 28.Qb8 Kh7 29.Bd6 Qd7 30.Ng3 Ne6\n31.f4 h5 32.c3 c4 33.h4 Qd8 34.Qb7 Be8 35.Nf5 Qd7 36.Qb8 Qd8 37.Qxd8 Nxd8\n38.Nd4 Nb7 39.e5 Kg8 40.Kg3 Bd7 41.Bc7 Nc5 42.Bxa5 Kf7 43.Bb4 Nd3 44.e6+ Bxe6\n45.Nxc6 Bd7 46.Nd4 Nxb2 47.Kf3 Nd3 48.g3 Nc1 49.Ke3  1/2-1/2\n\"\"\"\n\n\ndef winner(a_pgn_game):\n    result = re.compile(r'\\[Result \"(.*)\"\\]').search(a_pgn_game).group(1)\n    if result == \"1/2-1/2\":\n        return \"\u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\"\n    if result == \"1-0\":\n        return \"\u039b\u0395\u03a5\u039a\u0391\"\n    if result == \"0-1\":\n        return \"\u039c\u0391\u03a5\u03a1\u0391\"\n\n\ndef date_of_game(a_pgn_game):\n    pattern = re.compile(r'\\[Date \"(.*)\"\\]')\n    match = pattern.search(a_pgn_game)\n    a_date = match.group(1)\n    if a_date is None:\n        return None\n    try:\n        dt = datetime.strptime(a_date, \"%Y.%m.%d\")\n        return dt.date()\n    except ValueError:\n        return None\n\n\ndef diff_elo(a_pgn_game):\n    w_elo = int(re.compile(r'\\[WhiteElo \"(\\d+)\"\\]').search(a_pgn_game).group(1))\n    b_elo = int(re.compile(r'\\[BlackElo \"(\\d+)\"\\]').search(a_pgn_game).group(1))\n    return abs(w_elo - b_elo)\n\n\ndef moves(a_pgn_game):\n    results = re.compile(r\"(\\d+)\\.\").findall(a_pgn_game)\n    return results[-1]\n\n\nif __name__ == \"__main__\":\n    print(f\"\u0394\u0399\u0391\u03a6\u039f\u03a1\u0391 \u0394\u03a5\u039d\u0391\u039c\u0399\u039a\u039f\u03a4\u0397\u03a4\u0391\u03a3: {diff_elo(a_pgn_game)}\")\n    print(f\"\u039d\u0399\u039a\u0397\u03a4\u0397\u03a3: {winner(a_pgn_game)}\")\n    dts = datetime.strftime(date_of_game(a_pgn_game), \"%d-%m-%Y\")\n    print(f\"\u0397\u039c\u0395\u03a1\u039f\u039c\u0397\u039d\u0399\u0391 \u0391\u0393\u03a9\u039d\u0391: {dts}\")\n    print(f\"\u03a0\u039b\u0397\u0398\u039f\u03a3 \u039a\u0399\u039d\u0397\u03a3\u0395\u03a9\u039d: {moves(a_pgn_game)}\")\n</code></pre> test_my_re_functions.py<pre><code>import datetime\nimport unittest\n\nfrom my_re_functions import a_pgn_game, date_of_game, diff_elo, moves, winner\n\n\nclass TestReFunctions(unittest.TestCase):\n    def test_diff_elo(self):\n        self.assertEqual(diff_elo(a_pgn_game), 7)\n\n    def test_date_of_game(self):\n        self.assertEqual(date_of_game(a_pgn_game), datetime.date(2023, 4, 9))\n\n    def test_winner(self):\n        self.assertEqual(winner(a_pgn_game), \"\u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\")\n\n    def test_moves(self):\n        self.assertEqual(moves(a_pgn_game), \"49\")\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> <pre><code>$ python test_my_re_functions.py\n....\n----------------------------------------------------------------------\nRan 4 tests in 0.002s\n\nOK\n</code></pre> erotima1.py<pre><code>import os\nimport sys\n\nimport my_re_functions as mrf\n\n\ndef main(pgn_fn):\n    games = []\n    with open(pgn_fn, \"r\", encoding=\"latin-1\") as f:\n        game = \"\"\n        for line in f:\n            line = line.strip()\n            if line:\n                game += line + \"\\n\"\n                if (\n                    line.endswith(\"1-0\")\n                    or line.endswith(\"0-1\")\n                    or line.endswith(\"1/2-1/2\")\n                ):\n                    games.append(game.strip())\n                    game = \"\"\n    return games\n\n\nif __name__ == \"__main__\":\n    # pgn_fn = \"WorldChamp2023.pgn\"\n    if len(sys.argv) != 2:\n        print(f\"Usage: {sys.argv[0]} &lt;filename.pgn&gt;\")\n        exit(-1)\n    pgn_fn = sys.argv[1]\n    games = main(os.path.join(os.path.dirname(__file__), pgn_fn))\n    flag = True\n    for game in games:\n        dt = mrf.date_of_game(game)\n        if dt is not None:\n            print(f\"\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: {dt}\")\n        print(f\"\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: {mrf.winner(game)}\")\n        print(f\"\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: {mrf.diff_elo(game)}\")\n        print(f\"\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: {mrf.moves(game)}\")\n        if flag and games != games[-1]:\n            c = input(\"\u0398\u03ad\u03bb\u03b5\u03b9\u03c2 \u03bd\u03b1 \u03c3\u03c5\u03bd\u03b5\u03c7\u03af\u03c3\u03b5\u03b9\u03c2; (\u03b5 \u03b3\u03b9\u03b1 \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03bf, \u03bf \u03b3\u03b9\u03b1 \u03cc\u03bb\u03b1, \u03b4 \u03b3\u03b9\u03b1 \u03b4\u03b9\u03b1\u03ba\u03bf\u03c0\u03ae)\")\n            if c == \"\u03b4\":\n                exit(-1)\n            if c == \"\u03bf\":\n                flag = False\n</code></pre> <pre><code>$ python erotima1.py WorldChamp2023.pgn\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-09\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 49\n\u0398\u03ad\u03bb\u03b5\u03b9\u03c2 \u03bd\u03b1 \u03c3\u03c5\u03bd\u03b5\u03c7\u03af\u03c3\u03b5\u03b9\u03c2; (\u03b5 \u03b3\u03b9\u03b1 \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03bf, \u03bf \u03b3\u03b9\u03b1 \u03cc\u03bb\u03b1, \u03b4 \u03b3\u03b9\u03b1 \u03b4\u03b9\u03b1\u03ba\u03bf\u03c0\u03ae)\u03b5\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-10\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u039c\u0391\u03a5\u03a1\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 29\n\u0398\u03ad\u03bb\u03b5\u03b9\u03c2 \u03bd\u03b1 \u03c3\u03c5\u03bd\u03b5\u03c7\u03af\u03c3\u03b5\u03b9\u03c2; (\u03b5 \u03b3\u03b9\u03b1 \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03bf, \u03bf \u03b3\u03b9\u03b1 \u03cc\u03bb\u03b1, \u03b4 \u03b3\u03b9\u03b1 \u03b4\u03b9\u03b1\u03ba\u03bf\u03c0\u03ae)\u03bf\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-12\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 30\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-13\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u039b\u0395\u03a5\u039a\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 47\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-15\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u039b\u0395\u03a5\u039a\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 48\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-16\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u039b\u0395\u03a5\u039a\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 44\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-18\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u039b\u0395\u03a5\u039a\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 37\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-20\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 45\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-21\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 82\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-23\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 45\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-24\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 39\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-26\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u039b\u0395\u03a5\u039a\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 38\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-27\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 40\n\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1: 2023-04-29\n\u039d\u03b9\u03ba\u03b7\u03c4\u03ae\u03c2: \u0399\u03a3\u039f\u03a0\u0391\u039b\u0399\u0391\n\u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2: 7\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03c9\u03bd: 90\n</code></pre> erotima2.py<pre><code>import os\n\nimport matplotlib.pyplot as plt\nimport my_re_functions as mrf\n\n\ndef get_games(pgn_fn):\n    games = []\n    with open(pgn_fn, \"r\", encoding=\"latin-1\") as f:\n        game = \"\"\n        for line in f:\n            line = line.strip()\n            if line:\n                game += line + \"\\n\"\n                if (\n                    line.endswith(\"1-0\")\n                    or line.endswith(\"0-1\")\n                    or line.endswith(\"1/2-1/2\")\n                ):\n                    games.append(game.strip())\n                    game = \"\"\n    return games\n\n\ndef main(pgn_fn):\n    day_names = [\n        \"\u0394\u0395\u03a5\u03a4\u0395\u03a1\u0391\",\n        \"\u03a4\u03a1\u0399\u03a4\u0397\",\n        \"\u03a4\u0395\u03a4\u0391\u03a1\u03a4\u0397\",\n        \"\u03a0\u0395\u039c\u03a0\u03a4\u0397\",\n        \"\u03a0\u0391\u03a1\u0391\u03a3\u039a\u0395\u03a5\u0397\",\n        \"\u03a3\u0391\u0392\u0392\u0391\u03a4\u039f\",\n        \"\u039a\u03a5\u03a1\u0399\u0391\u039a\u0397\",\n    ]\n    games_nr = [0] * 7\n    games = get_games(os.path.join(os.path.dirname(__file__), pgn_fn))\n    total_games = 0\n    for game in games:\n        dt = mrf.date_of_game(game)\n        if dt is not None:\n            games_nr[dt.weekday()] += 1\n            total_games += 1\n    print(list(zip(day_names, games_nr)))\n    print(f\"{total_games=}\")\n    plt.bar(day_names, games_nr, color='mediumseagreen')\n    plt.ylabel('\u0391\u03b3\u03ce\u03bd\u03b5\u03c2')\n    plt.show()\n\n\nif __name__ == \"__main__\":\n    pgn_fn = \"RetiKIA.pgn\"\n    main(pgn_fn)\n</code></pre> <p><pre><code>$ python erotima2.py\n[('\u0394\u0395\u03a5\u03a4\u0395\u03a1\u0391', 4284), ('\u03a4\u03a1\u0399\u03a4\u0397', 11196), ('\u03a4\u0395\u03a4\u0391\u03a1\u03a4\u0397', 4361), ('\u03a0\u0395\u039c\u03a0\u03a4\u0397', 4743), ('\u03a0\u0391\u03a1\u0391\u03a3\u039a\u0395\u03a5\u0397', 5220), ('\u03a3\u0391\u0392\u0392\u0391\u03a4\u039f', 7669), ('\u039a\u03a5\u03a1\u0399\u0391\u039a\u0397', 7153)]\ntotal_games=44626\n</code></pre> </p>"},{"location":"assignment2024_3_sol/","title":"\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae\u03c2 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 3 2023-2024","text":"<p>\u0395\u03ba\u03c6\u03ce\u03bd\u03b7\u03c3\u03b7</p> <ul> <li>3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7</li> </ul> <p>\u039b\u03cd\u03c3\u03b7</p> utils.py<pre><code>from math import sqrt\n\n\ndef distance_percentage(color1, color2):\n    r1, g1, b1 = color1\n    r2, g2, b2 = color2\n    d = sqrt((r2 - r1) ** 2 + (g2 - g1) ** 2 + (b2 - b1) ** 2)\n    p = d / sqrt((255) ** 2 + (255) ** 2 + (255) ** 2)\n    return p\n</code></pre> rgb_game.py<pre><code>import random\nimport tkinter as tk\nfrom tkinter.messagebox import showinfo\n\nfrom utils import distance_percentage\n\n# \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae \u03c4\u03c5\u03c7\u03b1\u03af\u03bf\u03c5 \u03c7\u03c1\u03ce\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf frame\nr = random.randint(0, 255)\ng = random.randint(0, 255)\nb = random.randint(0, 255)\na_color = f\"#{r:02x}{g:02x}{b:02x}\"\n\ntries = 0\nnearest_color = None\nmin_distance = None\n\n\ndef check_color():\n    global tries, nearest_color, min_distance\n    user_red = int(red_scale.get())\n    user_green = int(green_scale.get())\n    user_blue = int(blue_scale.get())\n    user_color = f\"#{user_red:02x}{user_green:02x}{user_blue:02x}\"\n    user_color_frame.config(bg=user_color)\n    user_color_label[\"text\"] = f\"{(user_red, user_green, user_blue)}\"\n    p = distance_percentage((r, g, b), (user_red, user_green, user_blue))\n    if nearest_color is None:\n        nearest_color = (user_red, user_green, user_blue)\n        min_distance = p\n    else:\n        if p &lt; min_distance:\n            nearest_color = (user_red, user_green, user_blue)\n            min_distance = p\n    tries += 1\n    if min_distance &lt; 0.1 and tries &lt;= 5:\n        showinfo(\n            \"\u0395\u03c0\u03b9\u03c4\u03c5\u03c7\u03af\u03b1\",\n            msg=\"\u03a4\u03bf \u03c7\u03c1\u03ce\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03bb\u03ad\u03be\u03b1\u03c4\u03b5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03ba\u03bf\u03bd\u03c4\u03ac (&lt; 10%) \u03c3\u03c4\u03bf \u03c7\u03c1\u03ce\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03b1\u03bd\u03b1\u03b6\u03b7\u03c4\u03bf\u03cd\u03c4\u03b1\u03bd!\",\n        )\n    msg = f\" \u03c0\u03c1\u03bf\u03c3\u03c0\u03ac\u03b8\u03b5\u03b9\u03b1 {tries}/5, \u03ba\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf \u03c3\u03ba\u03bf\u03c1 {min_distance*100:.4}% {nearest_color}\"\n    count_lbl.config(text=msg)\n    if tries == 5:\n        guess_color_label[\"text\"] = f\"{(r,g,b)}\"\n\n\nroot = tk.Tk()\nroot.title(\"\u03a3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc\u03c2 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ce\u03bd \u03c7\u03c1\u03c9\u03bc\u03ac\u03c4\u03c9\u03bd\")\ntop_frame = tk.Frame(root)\ntop_frame.pack()\nmiddle_frame = tk.Frame(root)\nmiddle_frame.pack()\nbottom_frame = tk.Frame(root)\nbottom_frame.pack()\n\nred_label = tk.Label(top_frame, text=\"\u039a\u03cc\u03ba\u03ba\u03b9\u03bd\u03bf\")\nred_label.grid(row=0, column=0)\nred_scale = tk.Scale(top_frame, from_=0, to=255, orient=tk.HORIZONTAL)\nred_scale.grid(row=0, column=1)\n\ngreen_label = tk.Label(top_frame, text=\"\u03a0\u03c1\u03ac\u03c3\u03b9\u03bd\u03bf\")\ngreen_label.grid(row=1, column=0)\ngreen_scale = tk.Scale(top_frame, from_=0, to=255, orient=tk.HORIZONTAL)\ngreen_scale.grid(row=1, column=1)\n\nblue_label = tk.Label(top_frame, text=\"\u039c\u03c0\u03bb\u03b5\")\nblue_label.grid(row=2, column=0)\nblue_scale = tk.Scale(top_frame, from_=0, to=255, orient=tk.HORIZONTAL)\nblue_scale.grid(row=2, column=1)\n\ntest_btn = tk.Button(middle_frame, text=\"\u0394\u03bf\u03ba\u03b9\u03bc\u03ae\")\ncount_lbl = tk.Label(middle_frame, text=\"\u03c0\u03c1\u03bf\u03c3\u03c0\u03ac\u03b8\u03b5\u03b9\u03b1 0/5, \u03ba\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf \u03c3\u03ba\u03bf\u03c1 = \u03ba\u03b1\u03bd\u03ad\u03bd\u03b1\")\ntest_btn.grid(row=0, column=0)\ncount_lbl.grid(row=0, column=1)\ntest_btn.config(command=check_color)\n\nguess_color_frame = tk.Frame(bottom_frame, width=385, height=460, background=a_color)\nguess_color_frame.grid(row=0, column=0)\nguess_color_label = tk.Label(bottom_frame, text=\"\u03a7\u03c1\u03ce\u03bc\u03b1 \u03c3\u03c4\u03cc\u03c7\u03bf\u03c2\")\nguess_color_label.grid(row=1, column=0)\nuser_color_frame = tk.Frame(bottom_frame, width=385, height=460, background=\"white\")\nuser_color_frame.grid(row=0, column=1)\nuser_color_label = tk.Label(bottom_frame, text=\"255, 255, 255\")\nuser_color_label.grid(row=1, column=1)\n\nroot.eval(\"tk::PlaceWindow . center\")\nroot.mainloop()\n</code></pre> <pre><code>$ python rgb_game.py\n</code></pre> <p></p>"},{"location":"assignment2024_4_sol/","title":"\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae\u03c2 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 4 2023-2024","text":"<p>\u0395\u03ba\u03c6\u03ce\u03bd\u03b7\u03c3\u03b7</p> <ul> <li>4\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7</li> </ul> <p>\u039b\u03cd\u03c3\u03b7</p> <p>\u039a\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03c3\u03b5 Python python_plain_timer.py<pre><code>import os\n\nfrom core import quicksort\nfrom math import sqrt\nfrom timeit import default_timer as timer\n\n\ndef main(input_file_name):\n    points = []\n    with open(input_file_name, \"r\") as fp:\n        while True:\n            line = fp.readline()\n            if not line:\n                break\n            a_point = tuple(float(x) for x in line.split())\n            distance = sqrt(a_point[0] ** 2 + a_point[1] ** 2 + a_point[2] ** 2)\n            points.append((distance,) + a_point)\n\n    start = timer()\n    # points = quicksort(points)\n    points.sort()\n    time_passed = timer() - start\n    print(f\"Elapsed time for sorting alone: {time_passed:.6f}\")\n\n    output_file_name = f\"{input_file_name[:-4]}-sorted-python-plain.txt\"\n    output_file_name = os.path.join(os.path.dirname(__file__), output_file_name)\n    with open(output_file_name, \"w\") as fp:\n        for a_point in points:\n            fp.write(f\"{a_point[1]} {a_point[2]} {a_point[3]}\\n\")\n\n\nif __name__ == \"__main__\":\n    inputs = [\"input1000.txt\", \"input100000.txt\", \"input1000000.txt\"]\n    for input in inputs:\n        input = os.path.join(os.path.dirname(__file__), input)\n        start = timer()\n        main(input)\n        time_passed = timer() - start\n        print(f\"{input} - elapsed time {time_passed:.6f}\")\n</code></pre></p> <p>\u039a\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03c3\u03b5 Haskell main.hs<pre><code>import System.IO\nimport Data.List ( sort )\n\nmain :: IO()\nmain = do\n--    let file_name = \"input1000\"\n--    let file_name = \"input10000\"\n--    let file_name = \"input100000\"\n   let file_name = \"input1000000\"\n   content &lt;- readFile (file_name ++ \".txt\")\n   let points = lines content\n       list_of_string_triples = map words points\n       tmp = [(read (x!!0) :: Double, read (x!!1) :: Double, read (x!!2) :: Double) | x &lt;- list_of_string_triples]\n       list_of_double_triples =  [(distance x, x) | x &lt;- tmp]\n    --    list_of_double_triples_sorted = sort list_of_double_triples\n       list_of_double_triples_sorted = quicksort list_of_double_triples\n       list_of_double_triples_sorted2 = [snd x | x &lt;- list_of_double_triples_sorted]\n       list_of_double_triples_sorted3 = [show (get1st x) ++ \" \" ++ show (get2nd x) ++ \" \" ++ show (get3rd x) | x &lt;- list_of_double_triples_sorted2]\n--    print  list_of_double_triples_sorted3\n   writeFile (file_name ++ \"-sorted-haskell.txt\") (unlines list_of_double_triples_sorted3)\n\nget1st (a,_,_) = a\n\nget2nd (_,a,_) = a\n\nget3rd (_,_,a) = a\n\nslice i j s = drop i (take j s)\n\ndistance (x,y,z) =\n    sqrt (x**2 + y**2 + z**2)\n\nquicksort :: (Ord a) =&gt; [a] -&gt; [a]\nquicksort [] = []\nquicksort (x:xs) =\n  let smallerSorted = quicksort [a | a &lt;- xs, a &lt;= x]\n      biggerSorted = quicksort [a | a &lt;- xs, a &gt; x]\n  in  smallerSorted ++ [x] ++ biggerSorted\n</code></pre></p>"},{"location":"assignment2025_1_sol/","title":"\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae\u03c2 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 1 2024-2025","text":""},{"location":"assignment2025_1_sol/#1","title":"\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 1","text":"erotima1.py<pre><code>import random\nimport re\n\nrandom.seed(2025)\n\n\ndef generate_random_text(n):\n    greek_lowercase = \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\"\n    greek_uppercase = greek_lowercase.lower()\n    digits = \"0123456789\"\n    all_chars = greek_lowercase + greek_uppercase + digits\n    random_text = \"\".join(random.choice(all_chars) for _ in range(n))\n    return random_text\n\n\ndef inject_multiplications(txt, n):\n    assert len(txt) &gt;= 20, \"the text's length must be at least 20 characters\"\n    for _ in range(n):\n        x = random.randint(0, 99)\n        y = random.randint(0, 99)\n        to_be_injected = f\"\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395({x},{y})\"\n        pos = random.randint(0, len(txt) - len(to_be_injected))\n        # print(f\"{to_be_injected} \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 {pos}\")\n        txt = txt[:pos] + to_be_injected + txt[pos + len(to_be_injected) :]\n    return txt\n\n\ndef compute(txt):\n    results = re.findall(r\"\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395\\((\\d{1,2}),(\\d{1,2})\\)\", txt)\n    total = 0\n    for x in results:\n        total += int(x[0]) * int(x[1])\n    return total\n\n\ndef scenario1():\n    txt = generate_random_text(100)\n    print(txt)\n\n    print(\"#\" * 80)\n    txt2 = inject_multiplications(txt, 3)\n    print(txt2)\n\n    result = compute(txt2)\n    print(\"\u0391\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 = \", result)\n\n\ndef scenario2():\n    txt = generate_random_text(50_000)\n\n    txt2 = inject_multiplications(txt, 500)\n    with open(\"test_multiplications1.txt\", \"w\") as f:\n        f.write(txt2)\n\n    result = compute(txt2)\n    print(\"\u0391\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 = \", result)\n\n\nif __name__ == \"__main__\":\n    scenario1()\n    # scenario2()\n</code></pre> <pre><code>$ python erotima1.py\n\u03bc\u0396\u03c35\u03b7\u039c\u03ba\u0391\u03a9\u03b1\u03bd\u039f\u0395\u03b1\u03b2\u0397\u0393\u03981\u039e\u03b1\u0397\u03b3\u0394\u03c0\u0392\u03bc\u03b9\u039519\u039d1\u039d\u0392\u03c7\u039f22\u03c1\u03b2\u03b6\u03a8\u03ba\u0392\u03bf\u0398\u03bb\u039d\u039e\u0398\u03a0\u03bf\u0393\u03982\u0399\u03bc\u03a9\u0396\u03be\u03b60\u03a3\u03b54\u03bd\u039c4\u03c8\u03a6\u03ba\u03b5\u03bb33\u03b6\u03b2\u03c6\u03950\u03c9\u03bd\u03b4\u03c39\u03be\u03920\u03a76\u03c05\u03a0\u03a8\u039f\u03bb\u03ba\u03bf\u03a5\n################################################################################\n\u03bc\u0396\u03c35\u03b7\u039c\u03ba\u0391\u03a9\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395(37,46)19\u039d1\u039d\u0392\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395(71,18)(20,35)0\u03a3\u03b54\u03bd\u039c4\u03c8\u03a6\u03ba\u03b5\u03bb33\u03b6\u03b2\u03c6\u03950\u03c9\u03bd\u03b4\u03c39\u03be\u03920\u03a76\u03c05\u03a0\u03a8\u039f\u03bb\u03ba\u03bf\u03a5\n\u0391\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 =  2980\n</code></pre>"},{"location":"assignment2025_1_sol/#2","title":"\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 2","text":"erotima2.py<pre><code>from erotima1 import compute\nimport unittest\n\n\nclass TestErotima1(unittest.TestCase):\n    def test1(self):\n        test_cases = [\n            (\"\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\u03a9\", 0),\n            (\"\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395(10,10)\", 100),\n            (\"\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395(10,10)\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395(1,2)\", 102),\n            (\"\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395(10\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395(1,2)\u03a7\u03a7\u03a7\u03a7\", 2),\n            (\n                \"\u03bc\u0396\u03c35\u03b7\u039c\u03ba\u0391\u03a9\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395(37,46)19\u039d1\u039d\u0392\u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u0395(71,18)(20,35)0\u03a3\u03b54\u03bd\u039c4\u03c8\u03a6\u03ba\u03b5\u03bb33\u03b6\u03b2\u03c6\u03950\u03c9\u03bd\u03b4\u03c39\u03be\u03920\u03a76\u03c05\u03a0\u03a8\u039f\u03bb\u03ba\u03bf\u03a5\",\n                2980,\n            ),\n        ]\n        for txt, result in test_cases:\n            self.assertEqual(compute(txt), result)\n\n    def test2(self):\n        with open(\"test_multiplications1.txt\", \"r\") as f:\n            txt = f.read()\n            self.assertEqual(compute(txt), 1035105)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> <pre><code>$ python erotima2.py\n..\n----------------------------------------------------------------------\nRan 2 tests in 0.001s\n\nOK\n</code></pre>"},{"location":"assignment2025_1_sol/#3","title":"\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 3","text":"erotima3.py<pre><code>from erotima1 import generate_random_text, inject_multiplications, compute\nimport time\nimport platform\n\n\ndef systeminfo():\n    my_system = platform.uname()\n    print(f\"System: {my_system.system}\")\n    print(f\"Node Name: {my_system.node}\")\n    print(f\"Release: {my_system.release}\")\n    print(f\"Version: {my_system.version}\")\n    print(f\"Machine: {my_system.machine}\")\n    print(f\"Processor: {my_system.processor}\")\n\n\nif __name__ == \"__main__\":\n    systeminfo()\n    n = 1_000_000\n    m = 100_000\n    start_time = time.time()\n    txt = generate_random_text(n)\n    end_time = time.time()\n    print(f\"\u03a7\u03a1\u039f\u039d\u039f\u03a3 \u0394\u0397\u039c\u0399\u039f\u03a5\u03a1\u0393\u0399\u0391\u03a3 \u0391\u03a1\u03a7\u0399\u039a\u039f\u03a5 \u039a\u0395\u0399\u039c\u0395\u039d\u039f\u03a5 {n} \u03a7\u0391\u03a1\u0391\u039a\u03a4\u0397\u03a1\u03a9\u039d: {end_time - start_time:.2f} \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1\")\n\n    start_time = time.time()\n    txt = inject_multiplications(txt, m)\n    end_time = time.time()\n    print(\n        f\"\u03a7\u03a1\u039f\u039d\u039f\u03a3 \u0395\u0399\u03a3\u0391\u0393\u03a9\u0393\u0397\u03a3 {m} \u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u039c\u03a9\u039d: {end_time - start_time:.2f} \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1\"\n    )\n\n    start_time = time.time()\n    total = compute(txt)\n    end_time = time.time()\n    print(f\"\u03a7\u03a1\u039f\u039d\u039f\u03a3 \u03a5\u03a0\u039f\u039b\u039f\u0393\u0399\u03a3\u039c\u039f\u03a5 \u0391\u0398\u03a1\u039f\u0399\u03a3\u039c\u0391\u03a4\u039f\u03a3 \u0393\u0399\u039d\u039f\u039c\u0395\u039d\u03a9\u039d: {end_time - start_time:.2f} \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1\")\n\n    print(f\"\u03a3\u03a5\u039d\u039f\u039b\u0399\u039a\u039f \u0391\u0398\u03a1\u039f\u0399\u03a3\u039c\u0391 \u0393\u0399\u039d\u039f\u039c\u0395\u039d\u03a9\u039d = {total:,}\")\n</code></pre> <pre><code>$ python erotima3.py\nSystem: Darwin\n\u03a7\u03a1\u039f\u039d\u039f\u03a3 \u0394\u0397\u039c\u0399\u039f\u03a5\u03a1\u0393\u0399\u0391\u03a3 \u0391\u03a1\u03a7\u0399\u039a\u039f\u03a5 \u039a\u0395\u0399\u039c\u0395\u039d\u039f\u03a5 1000000 \u03a7\u0391\u03a1\u0391\u039a\u03a4\u0397\u03a1\u03a9\u039d: 0.25 \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1\n\u03a7\u03a1\u039f\u039d\u039f\u03a3 \u0395\u0399\u03a3\u0391\u0393\u03a9\u0393\u0397\u03a3 100000 \u03a0\u039f\u039b\u039b\u0391\u03a0\u039b\u0391\u03a3\u0399\u0391\u03a3\u039c\u03a9\u039d: 26.27 \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1\n\u03a7\u03a1\u039f\u039d\u039f\u03a3 \u03a5\u03a0\u039f\u039b\u039f\u0393\u0399\u03a3\u039c\u039f\u03a5 \u0391\u0398\u03a1\u039f\u0399\u03a3\u039c\u0391\u03a4\u039f\u03a3 \u0393\u0399\u039d\u039f\u039c\u0395\u039d\u03a9\u039d: 0.01 \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03cc\u03bb\u03b5\u03c0\u03c4\u03b1\n\u03a3\u03a5\u039d\u039f\u039b\u0399\u039a\u039f \u0391\u0398\u03a1\u039f\u0399\u03a3\u039c\u0391 \u0393\u0399\u039d\u039f\u039c\u0395\u039d\u03a9\u039d = 61,453,426\n</code></pre>"},{"location":"assignment2025_2_sol/","title":"\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae\u03c2 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 2 2024-2025","text":""},{"location":"assignment2025_3_sol/","title":"\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae\u03c2 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 3 2024-2025","text":""},{"location":"assignment2025_4_sol/","title":"\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae\u03c2 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 4 2024-2025","text":""},{"location":"c_compilation/","title":"\u0392\u03ae\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c3\u03c4\u03b7 C","text":""},{"location":"c_compilation/#_1","title":"\u0395\u03c0\u03b9\u03bc\u03ad\u03c1\u03bf\u03c5\u03c2 \u03b2\u03ae\u03bc\u03b1\u03c4\u03b1","text":"<ol> <li>\u03a0\u03c1\u03bf\u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 (preprocessing) </li> <li>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 (compilation)</li> <li>\u03a3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03bc\u03b5\u03c4\u03ac\u03c6\u03c1\u03b1\u03c3\u03b7 (assembling)</li> <li>\u03a3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 (linking)</li> </ol> <p>\u0393\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c0\u03c1\u03bf\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae \u03b4\u03b5\u03af\u03c4\u03b5 \u03c4\u03bf \u039a\u03b5\u03c6\u03ac\u03bb\u03b1\u03b9\u03bf 12 \u03b1\u03c0\u03cc \u03c4\u03bf \u03a4\u03b6\u03ac\u03bb\u03bb\u03b1\u03c2, \u0391., \u0393\u03ba\u03cc\u03b3\u03ba\u03bf\u03c2, \u03a7., &amp; \u03a4\u03c3\u03bf\u03cd\u03bb\u03bf\u03c2, \u0399. (2024). \u039c\u03b9\u03b1 \u03c3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03b7 \u03c0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7 \u03c3\u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 C [\u03a0\u03c1\u03bf\u03c0\u03c4\u03c5\u03c7\u03b9\u03b1\u03ba\u03cc \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03bf]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2.</p> hello.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(void){\n    printf(\"Hello World\\n\");\n    return 0;\n}\n</code></pre> <p>\u0395\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03b3\u03b9\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03c9\u03bd \u03b1\u03c1\u03c7\u03b5\u03af\u03c9\u03bd <pre><code>$ gcc -o hello.i hello.c -E\n$ gcc -o hello.s hello.i -S\n$ as -o hello.o hello.s\n$ gcc -o hello hello.o\n$ ./hello\nHello World\n</code></pre></p> <p>\u03ae \u03bc\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03cc\u03bd\u03bf \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae (\u03ba\u03b1\u03b9 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03c9\u03bd \u03b1\u03c1\u03c7\u03b5\u03af\u03c9\u03bd \u03bc\u03b5 \u03c4\u03b7\u03bd \u03b5\u03c4\u03b9\u03ba\u03ad\u03c4\u03b1 <code>-save-temps</code>)</p> <pre><code>$ gcc -o hello hello.c -save-temps\n$ ./hello\nHello World\n</code></pre> <p>\u03ae \u03bc\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03cc\u03bd\u03bf \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae (\u03c7\u03c9\u03c1\u03af\u03c2 \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03c9\u03bd \u03b1\u03c1\u03c7\u03b5\u03af\u03c9\u03bd) <pre><code>$ gcc -o hello hello.c\n$ ./hello\nHello World\n</code></pre></p> <p>\u0394\u03b5\u03af\u03c4\u03b5 \u03ba\u03b1\u03b9 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03ac\u03b3\u03c1\u03b1\u03c6\u03bf <code>2.8 \u039a\u03cd\u03ba\u03bb\u03bf\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2, \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2</code> \u03b1\u03c0\u03cc \u03c4\u03bf \u03a4\u03b6\u03ac\u03bb\u03bb\u03b1\u03c2, \u0391., \u0393\u03ba\u03cc\u03b3\u03ba\u03bf\u03c2, \u03a7., &amp; \u03a4\u03c3\u03bf\u03cd\u03bb\u03bf\u03c2, \u0399. (2024). \u039c\u03b9\u03b1 \u03c3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03b7 \u03c0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7 \u03c3\u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 C [\u03a0\u03c1\u03bf\u03c0\u03c4\u03c5\u03c7\u03b9\u03b1\u03ba\u03cc \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03bf]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2.</p>"},{"location":"c_shortcircuit/","title":"\u0395\u03c3\u03c0\u03b5\u03c5\u03c3\u03bc\u03ad\u03bd\u03b7 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ce\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd \u03c3\u03c4\u03b7 C","text":"<p>\u03a5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c0\u03b5\u03c1\u03af\u03c0\u03c4\u03c9\u03c3\u03b7 \u03bc\u03b9\u03b1 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03b7 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 \u03bd\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b9\u03bc\u03b7\u03b8\u03b5\u03af \u03c7\u03c9\u03c1\u03af\u03c2 \u03bd\u03b1 \u03b5\u03be\u03b5\u03c4\u03b1\u03c3\u03c4\u03bf\u03cd\u03bd \u03cc\u03bb\u03bf\u03b9 \u03bf\u03b9 \u03cc\u03c1\u03bf\u03b9 \u03c4\u03b7\u03c2. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b1\u03bd \u03c0\u03bf\u03bb\u03bb\u03ad\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b4\u03ad\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae <code>&amp;&amp;</code> \u03c4\u03cc\u03c4\u03b5 \u03b1\u03bd \u03be\u03b5\u03ba\u03b9\u03bd\u03ce\u03bd\u03c4\u03b1\u03c2 \u03b1\u03c0\u03cc \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03ac \u03b5\u03bd\u03c4\u03bf\u03c0\u03b9\u03c3\u03c4\u03b5\u03af \u03bc\u03b9\u03b1 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c8\u03b5\u03c5\u03b4\u03ae\u03c2, \u03b4\u03b5\u03bd \u03c7\u03c1\u03b5\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b9\u03bc\u03b7\u03b8\u03bf\u03cd\u03bd \u03bf\u03b9 \u03c5\u03c0\u03cc\u03bb\u03bf\u03b9\u03c0\u03b5\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b8\u03ce\u03c2 \u03b3\u03bd\u03c9\u03c1\u03af\u03b6\u03bf\u03c5\u03bc\u03b5 \u03cc\u03c4\u03b9 \u03b7 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03b7 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 \u03b8\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c8\u03b5\u03c5\u03b4\u03ae\u03c2. \u039f\u03bc\u03bf\u03af\u03c9\u03c2, \u03b1\u03bd \u03bc\u03b9\u03b1 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03b7 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03bb\u03bf\u03b3\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03c3\u03c5\u03bd\u03b4\u03ad\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03bf <code>||</code> \u03c4\u03cc\u03c4\u03b5 \u03b1\u03bd \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03b7\u03c2 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7\u03c2 \u03b5\u03bd\u03c4\u03bf\u03c0\u03b9\u03c3\u03c4\u03b5\u03af \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03b8\u03ae\u03ba\u03b7 \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bb\u03b7\u03b8\u03ae\u03c2, \u03c4\u03cc\u03c4\u03b5 \u03bf\u03b9 \u03c3\u03c5\u03bd\u03b8\u03ae\u03ba\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03c0\u03bf\u03bc\u03ad\u03bd\u03bf\u03c5\u03bd \u03b4\u03b5\u03bd \u03b1\u03c0\u03bf\u03c4\u03b9\u03bc\u03ce\u03bd\u03c4\u03b1\u03b9 \u03ba\u03b1\u03b8\u03ce\u03c2 \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5\u03c2 \u03b4\u03b5\u03bd \u03c0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b7\u03c1\u03b5\u03ac\u03c3\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b1\u03bb\u03b7\u03b8\u03ae \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03b7\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae\u03c2 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03b5 \u03ba\u03ac\u03b8\u03b5 \u03c0\u03b5\u03c1\u03af\u03c0\u03c4\u03c9\u03c3\u03b7 \u03b1\u03bb\u03b7\u03b8\u03ae\u03c2. \u039f \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03b1\u03c5\u03c4\u03cc\u03c2 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03c9\u03bd \u03bb\u03bf\u03b3\u03b9\u03ba\u03ce\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd \u03c3\u03c4\u03b7 C \u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03b9 \u03c9\u03c2 short circuit (\u03b2\u03c1\u03b1\u03c7\u03c5\u03ba\u03cd\u03ba\u03bb\u03c9\u03bc\u03b1) \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c1\u03b9\u03ba\u03ad\u03c2 \u03c6\u03bf\u03c1\u03ad\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03bc\u03b7 \u03b5\u03c0\u03b9\u03b8\u03c5\u03bc\u03b7\u03c4\u03ac \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03b1. \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b4\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1, \u03cc\u03c0\u03bf\u03c5 \u03c0\u03b1\u03c1\u03ac \u03c4\u03bf \u03cc\u03c4\u03b9 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c3\u03c4\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae 6 \u03c0\u03c1\u03ac\u03be\u03b7 \u03b4\u03b9\u03b1\u03af\u03c1\u03b5\u03c3\u03b7\u03c2 \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03bf\u03c5 \u03bc\u03b5 \u03bc\u03b7\u03b4\u03ad\u03bd, \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03bf\u03cd\u03c3\u03b5 \u03c3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2, \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03bf\u03bb\u03bf\u03ba\u03bb\u03b7\u03c1\u03ce\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03ae \u03c4\u03bf\u03c5 \u03ba\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ac \u03ba\u03b1\u03b8\u03ce\u03c2 \u03b7 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03b7\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae\u03c2 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7\u03c2 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c7\u03c9\u03c1\u03af\u03c2 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b9\u03bc\u03ac\u03c4\u03b1\u03b9 \u03c0\u03bf\u03c4\u03ad \u03b7 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 <code>(10/x) &gt; 1</code> \u03bc\u03b9\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03b7 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 <code>x == 0</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bb\u03b7\u03b8\u03ae\u03c2.</p> short_circuit1.c<pre><code>#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\nint main(void) {\n  int x = 0;\n  bool f = (x == 0 || (10 / x) &gt; 1);\n  printf(\"The logic expression's value is %d\\n\", f);\n  return 0;\n}\n</code></pre> <p>\u0397 \u03ad\u03be\u03bf\u03b4\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9: <pre><code>The logic expression's value is 1\n</code></pre></p> <p>\u0388\u03bd\u03b1 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 short_circuit2.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n#include &lt;unistd.h&gt;\n\nvoid print(char* msg) {\n  time_t now;\n  struct tm* local;\n  char buffer[80];\n  time(&amp;now);\n  local = localtime(&amp;now);\n  strftime(buffer, sizeof(buffer), \"%Y-%m-%d %H:%M:%S\", local);\n  printf(\"%s printed at %s\\n\", msg, buffer);\n}\n\nint fun1() {\n  print(\"fun1 started\");\n  sleep(5);\n  print(\"fun1 finished\");\n  return 0;\n}\n\nint fun2() {\n  print(\"fun2 started\");\n  sleep(5);\n  print(\"fun2 finished\");\n  return 0;\n}\n\nint main() {\n  print(\"scenario 1\");\n  int b1 = fun1();\n  int b2 = fun2();\n  if (b1 &amp;&amp; b2) {\n    print(\"hello\");\n  }\n\n  print(\"\\nscenario 2 (short circuit activated!)\");\n  if (fun1() &amp;&amp; fun2()) {\n    print(\"hello\");\n  }\n}\n</code></pre></p> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03be\u03cc\u03b4\u03bf\u03c5 \u03c4\u03b7\u03c2 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9: <pre><code>scenario 1 printed at 2025-02-17 18:09:55\nfun1 started printed at 2025-02-17 18:09:55\nfun1 finished printed at 2025-02-17 18:10:00\nfun2 started printed at 2025-02-17 18:10:00\nfun2 finished printed at 2025-02-17 18:10:05\n\nscenario 2 (short circuit activated!) printed at 2025-02-17 18:10:05\nfun1 started printed at 2025-02-17 18:10:05\nfun1 finished printed at 2025-02-17 18:10:10\n</code></pre></p>"},{"location":"defensive/","title":"\u0391\u03bc\u03c5\u03bd\u03c4\u03b9\u03ba\u03cc\u03c2 \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2","text":""},{"location":"defensive/#_2","title":"\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1","text":"<p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 1: \u0396\u03b7\u03c4\u03b5\u03af\u03c4\u03b1\u03b9 \u03b7 \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03b8\u03b5\u03c4\u03b9\u03ba\u03bf\u03cd \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf\u03c5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd.</p> <p>\u0391' \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2</p> <p>defensive1.py<pre><code>while True:\n    x = input(\"\u0394\u03ce\u03c3\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: \")\n    # isdigit() returns True if the string is a digit string, False otherwise.\n    # A string is a digit string if all characters in the string are digits and\n    # there is at least one character in the string.\n    if not x.isdigit():\n        print(\"\u039b\u03ac\u03b8\u03bf\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03c2\")\n    else:\n        if int(x) &lt;= 0:\n            print(\"\u039b\u03ac\u03b8\u03bf\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03c2\")\n        else:\n            break\n\nprint(x)\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python defensive1.py\n\u0394\u03ce\u03c3\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: -4\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03c2\n\u0394\u03ce\u03c3\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: \u03b1\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03c2\n\u0394\u03ce\u03c3\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: 0\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03c2\n\u0394\u03ce\u03c3\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: 17\n17\n</code></pre></p> <p>\u0392' \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2</p> <p>defensive2.py<pre><code>while True:\n    x = input(\"\u0394\u03ce\u03c3\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: \")\n    try:\n        if int(x) &lt;= 0:\n            print('\u039b\u03ac\u03b8\u03bf\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03c2, \u03b4\u03bf\u03ba\u03b9\u03bc\u03ac\u03c3\u03c4\u03b5 \u03be\u03b1\u03bd\u03ac')\n        else:\n            break\n    except ValueError:\n        print('\u039b\u03ac\u03b8\u03bf\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03c2, \u03b4\u03bf\u03ba\u03b9\u03bc\u03ac\u03c3\u03c4\u03b5 \u03be\u03b1\u03bd\u03ac')\n\nprint(x)\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python defensive2.py\n\u0394\u03ce\u03c3\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: 4+\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03c2, \u03b4\u03bf\u03ba\u03b9\u03bc\u03ac\u03c3\u03c4\u03b5 \u03be\u03b1\u03bd\u03ac\n\u0394\u03ce\u03c3\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: \u03c0\u03ad\u03bd\u03c4\u03b5\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03c2, \u03b4\u03bf\u03ba\u03b9\u03bc\u03ac\u03c3\u03c4\u03b5 \u03be\u03b1\u03bd\u03ac\n\u0394\u03ce\u03c3\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: 42\n42\n</code></pre></p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 3: \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03bc\u03b7 \u03ba\u03b5\u03bd\u03ae\u03c2 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac\u03c2</p> <p>defensive1.py<pre><code>s = input(\"\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03b7 \u03ba\u03b5\u03bd\u03ae \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac: \")\nwhile s.strip() == '':\n    s = input(\"\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03b7 \u03ba\u03b5\u03bd\u03ae \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac: \")\n\nprint(s)\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python defensive3.py\n\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03b7 \u03ba\u03b5\u03bd\u03ae \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac: \n\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03b7 \u03ba\u03b5\u03bd\u03ae \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac:    \n\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03b7 \u03ba\u03b5\u03bd\u03ae \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac: \n\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03b7 \u03ba\u03b5\u03bd\u03ae \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac: \u03c4\u03b5\u03c3\u03c4\n\u03c4\u03b5\u03c3\u03c4\n</code></pre></p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 4: \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03bc\u03cc\u03bd\u03bf \u03ba\u03ac\u03c0\u03bf\u03b9\u03b1\u03c2 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 0, 1, 2, 3</p> <p>defensive4.py<pre><code>while True:\n    x = input(\"\u0394\u03ce\u03c3\u03b5 \u03c4\u03b9\u03bc\u03ae \u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 0,1,2,3: \")\n    if x.isdigit():\n        if 0 &lt;= int(x) &lt;= 3:\n            break\n    print(\"\u039b\u03ac\u03b8\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ae\")\n\nprint(x)\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python defensive4.py\n\u0394\u03ce\u03c3\u03b5 \u03c4\u03b9\u03bc\u03ae \u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 0,1,2,3: -1\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ae\n\u0394\u03ce\u03c3\u03b5 \u03c4\u03b9\u03bc\u03ae \u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 0,1,2,3: 5\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ae\n\u0394\u03ce\u03c3\u03b5 \u03c4\u03b9\u03bc\u03ae \u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 0,1,2,3: \u03b1\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ae\n\u0394\u03ce\u03c3\u03b5 \u03c4\u03b9\u03bc\u03ae \u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 0,1,2,3: 3\n3\n</code></pre></p>"},{"location":"fp_influences/","title":"\u0395\u03c0\u03b9\u03c1\u03c1\u03bf\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03b5 \u03ba\u03c5\u03c1\u03af\u03c9\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2","text":"<ul> <li>\u039b\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 (\u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2)</li> <li>\u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c5\u03c8\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7\u03c2 \u03c4\u03ac\u03be\u03b7\u03c2 (higher order functions)</li> <li>\u03a0\u03b5\u03c1\u03b9\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 (list comprehensions)</li> <li>\u039c\u03b5\u03c1\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 (partial functions)</li> <li>\u039f\u03ba\u03bd\u03b7\u03c1\u03ae \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 (lazy evaluation)</li> <li>\u039a\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 (closures)</li> </ul>"},{"location":"fp_influences/#c-java-python","title":"\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c0\u03bb\u03ce\u03bd \u03bb\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03c3\u03b5 C++, Java, Python","text":"simple_lambda.cpp<pre><code>#include &lt;functional&gt;\n#include &lt;iostream&gt;\n\nint main() {\n  auto f = [](double x, double y) {\n    return x * y;\n  }; // \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b1\u03bd\u03ac\u03b8\u03b5\u03c3\u03ae \u03c4\u03b7\u03c2 \u03c3\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\n  std::cout &lt;&lt; f(2, 21) &lt;&lt; std::endl; // \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2\n\n  std::cout &lt;&lt; [](double x, double y) { return x * y; }(3, 21)\n            &lt;&lt; std::endl; // \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03ac\u03bc\u03b5\u03c3\u03b7 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2\n  return 0;\n}\n</code></pre> <pre><code>$ g++ simple_lambda.cpp -o simple_lambda\n$ ./simple_lambda\n42\n63\n</code></pre> SimpleLambda.java<pre><code>package simple_lambda;\n// 1 abstract function\ninterface MyFunctionalInterface {\n    int fun(int x, int y);\n}\n\nclass SimpleLambda {\n\n    public static void main(String[] args) {\n        MyFunctionalInterface f = (int x, int y) -&gt; x * y;\n        System.out.println(f.fun(2, 21));\n    }\n}\n</code></pre> <pre><code>$ javac SimpleLambda.java \n$ java SimpleLambda\n42\n</code></pre> simple_lambda.py<pre><code>f = lambda x, y: x * y  # \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b1\u03bd\u03ac\u03b8\u03b5\u03c3\u03ae \u03c4\u03b7\u03c2 \u03c3\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\nprint(f(2, 21))  # \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2\n\nprint((lambda x, y: x * y)(3, 21))  # \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03ac\u03bc\u03b5\u03c3\u03b7 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2\n</code></pre> <pre><code>$ python simple_lambda.py\n42\n63\n</code></pre> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 lambdas \u03c3\u03b5 Python</p>"},{"location":"fp_influences/#c-java-python_1","title":"\u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c5\u03c8\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7\u03c2 \u03c4\u03ac\u03be\u03b7\u03c2 \u03c3\u03b5 C++, Java, Python","text":"<p>\u03a4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03bc\u03b5 \u03b2\u03ac\u03c3\u03b7 \u03c4\u03bf \u03bc\u03ae\u03ba\u03bf\u03c2 \u03c4\u03bf\u03c5\u03c2 (\u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7)</p> sort_with_lambda.cpp<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main() {\n  vector&lt;string&gt; cities{\"arta\", \"ioannina\", \"preveza\", \"igoumenitsa\"};\n  sort(cities.begin(), cities.end(),\n       [](auto a, auto b) { return a.length() &lt; b.length(); });\n  for (auto city : cities) {\n    cout &lt;&lt; city &lt;&lt; endl;\n  }\n}\n</code></pre> <pre><code>$ g++ sort_with_lambda.cpp -o sort_with_lambda\n$ ./sort_with_lambda\narta\npreveza\nioannina\nigoumenitsa\n</code></pre> SortWithLambda.java<pre><code>package sort_with_java;\n\nimport java.util.*;\n\npublic class SortWithLambda {\n    public static void main(String[] args) {\n        List&lt;String&gt; cities = new ArrayList&lt;&gt;(List.of(\"arta\", \"ioannina\", \"preveza\", \"igoumenitsa\"));\n        cities.sort((a, b) -&gt; a.length() - b.length());\n        for (String city : cities) {\n            System.out.println(city);\n        }\n    }\n}\n</code></pre> <pre><code>$ javac SortWithLambda.java\n$ java SortWithLambda\narta\npreveza\nioannina\nigoumenitsa\n</code></pre> sort_with_lambda.py<pre><code>cities = [\"arta\", \"ioannina\", \"preveza\", \"igoumenitsa\"]\ncities.sort(key=lambda a: len(a))\n\nfor city in cities:\n    print(city)\n</code></pre> <pre><code>$ python sort_with_lambda.py\narta\npreveza\nioannina\nigoumenitsa\n</code></pre>"},{"location":"fp_influences/#list-comprehensions-python","title":"\u03a0\u03b5\u03c1\u03b9\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 (list comprehensions) \u03c3\u03c4\u03b7\u03bd Python","text":"<p>\u039f\u03b9 \u03c0\u03b5\u03c1\u03b9\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b9\u03b4\u03ad\u03b1 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03c9\u03c4\u03bf\u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b7\u03ba\u03b5 \u03c3\u03c4\u03b7\u03bd Haskell \u03b1\u03bb\u03bb\u03ac \u03c0\u03bb\u03ad\u03bf\u03bd \u03ba\u03b1\u03b9 \u03ac\u03bb\u03bb\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03bf\u03b9 Scala, F# \u03ba\u03b1\u03b9 Python \u03ad\u03c7\u03bf\u03c5\u03bd \u03b5\u03bd\u03c3\u03c9\u03bc\u03b1\u03c4\u03ce\u03c3\u03b5\u03b9 \u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2.</p> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c0\u03b5\u03c1\u03b9\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd \u03c3\u03c4\u03b7\u03bd Python</p>"},{"location":"fp_influences/#python","title":"\u039c\u03b5\u03c1\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c4\u03b7\u03bd Python","text":"partial_function_example1.py<pre><code>import functools\nfrom operator import add\n\nadd5 = functools.partial(add, 5)\n\nprint(add5(15))\n</code></pre> <pre><code>$ python partial_function_example1\n20\n</code></pre> partial_function_example2.py<pre><code>import functools\n\n\ndef my_func4(a, b, c, d):\n    return a + b + c + d\n\n\nmy_func3 = functools.partial(my_func4, 1)\nmy_func2 = functools.partial(my_func3, 2)\nmy_func1 = functools.partial(my_func2, 3)\n\nprint(my_func4(1, 2, 3, 4))\nprint(my_func3(2, 3, 4))\nprint(my_func2(3, 4))\nprint(my_func1(4))\n</code></pre> <pre><code>$ python partial_function_example2\n10\n10\n10\n10\n</code></pre>"},{"location":"fp_influences/#lazy-evaluation-python","title":"\u039f\u03ba\u03bd\u03b7\u03c1\u03ae \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 (lazy evaluation) \u03c3\u03c4\u03b7\u03bd Python","text":"<p>\u03a3\u03c4\u03b7\u03bd Python, range \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1 \u03c0\u03bf\u03c5 \u03b4\u03b5\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af (immutable) \u03ba\u03b1\u03b9 \u03b7 \u03bf\u03c0\u03bf\u03af\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b9\u03bc\u03ac\u03c4\u03b1\u03b9 \u03bf\u03ba\u03bd\u03b7\u03c1\u03ac. \u03a4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c4\u03b7\u03c2 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1\u03c2 \u03b4\u03b5\u03bd \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c0\u03b1\u03c1\u03ac \u03bc\u03cc\u03bd\u03bf \u03cc\u03c4\u03b1\u03bd \u03b1\u03c0\u03b1\u03b9\u03c4\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9.</p> ranges_are_lazy.py<pre><code>values = range(0, 1_000_000, 1000)\nprint(values)\n\nprint(values[5])\n</code></pre> <pre><code>$ python ranges_are_lazy.py\nrange(0, 1000000, 1000)\n5000\n</code></pre> generators_are_lazy.py<pre><code># \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \"\u03ac\u03c0\u03b5\u03b9\u03c1\u03b7\u03c2\" \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1\u03c2 Fibonacci \u03bc\u03b5 generator\ndef a_simple_generator():\n    a = b = 1\n    yield a\n    yield b\n    while True:\n        yield a + b\n        b += a\n        a = b - a\n\n\ngen = a_simple_generator()\n\nfor _ in range(20):\n    print(next(gen))\n</code></pre> <pre><code>$ python generators_are_lazy.py\n1\n1\n2\n3\n5\n8\n13\n21\n34\n55\n89\n144\n233\n377\n610\n987\n1597\n2584\n4181\n6765\n</code></pre> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 generators \u03c3\u03c4\u03b7\u03bd Python</p>"},{"location":"fp_influences/#python_1","title":"\u039a\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 \u03c3\u03c4\u03b7\u03bd Python","text":"closure1.py<pre><code>def outer_func():\n    message = \"Hi\"\n\n    def inner_function():\n        print(message)  # free variable\n\n    return inner_function()\n\n\nouter_func()\n</code></pre> <pre><code>$ python closure1.py\nHi\n</code></pre> closure2.py<pre><code>def outer_func():\n    message = \"Hi\"\n\n    def inner_function():\n        print(message)  # free variable\n\n    return inner_function  # \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03c3\u03b5 \u03c3\u03c7\u03ad\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03bf closure1.py, \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf \u03cc\u03bd\u03bf\u03bc\u03b1 \u03c4\u03b7\u03c2 \u03b5\u03bc\u03c6\u03c9\u03bb\u03b5\u03c5\u03bc\u03ad\u03bd\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2\n\n\nmy_func = outer_func()\nmy_func()\n</code></pre> <pre><code>$ python closure2.py\nHi\n</code></pre> closure3.py<pre><code>def outer_func(msg):\n    message = msg\n\n    def inner_function():\n        print(message)  # free variable\n\n    return inner_function\n\n\nhi_func = outer_func(\"Hi\")\nhello_func = outer_func(\"hello\")\n\nhi_func()\nhello_func()\n</code></pre> <pre><code>$ python closure3.py\nHi\nHello\n</code></pre> closure4.py<pre><code>import logging\n\nlogging.basicConfig(level=logging.INFO)\n\n\ndef logger(func):\n    def log_func(*args):\n        logging.info(f'Running \"{func.__name__}\" with arguments {args}')\n        print(func(*args))\n\n    return log_func\n\n\ndef add(x, y):\n    return x + y\n\n\ndef sub(x, y):\n    return x - y\n\n\nadd_logger = logger(add)\nsub_logger = logger(sub)\n\nadd_logger(3, 3)\nsub_logger(3, 3)\n</code></pre> <pre><code>$ python closure4.py\nINFO:root:Running \"add\" with arguments (3, 3)\n6\nINFO:root:Running \"sub\" with arguments (3, 3)\n0\n</code></pre>"},{"location":"lab-haskell/","title":"Lab haskell","text":"<p>H Haskell \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b1\u03bc\u03b9\u03b3\u03ce\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd (pure functional programming language) \u03bf\u03ba\u03bd\u03b7\u03c1\u03ae\u03c2 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 (lazy evaluation). \u0397 Haskell \u03b4\u03b9\u03b1\u03b8\u03ad\u03c4\u03b5\u03b9 \u03b9\u03c3\u03c7\u03c5\u03c1\u03cc \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03cc \u03c3\u03cd\u03c3\u03c4\u03b7\u03bc\u03b1 \u03c4\u03cd\u03c0\u03c9\u03bd (strong static type system) \u03c0\u03bf\u03c5 \u03b1\u03bd\u03c4\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c4\u03bf\u03c5\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03c0\u03b1\u03b9\u03c4\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03b9\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2.</p> <p>\u03a4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c0\u03bf\u03c5 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03bf\u03cd\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf \"7 Languages in 7 Weeks, by Bruce A. Tate - A Pragmatic Guide to Learning Programming Languages\" \u03ba\u03b1\u03b9 \u03b1\u03c0\u03cc \u03ac\u03bb\u03bb\u03b5\u03c2 \u03c0\u03b7\u03b3\u03ad\u03c2.</p>"},{"location":"lab-haskell/#haskell","title":"\u0395\u03b3\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03b7\u03c2 Haskell","text":"<p>H Haskell (\u03b7 Glasgow Haskell) \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03b3\u03ba\u03b1\u03c4\u03b1\u03c3\u03c4\u03b1\u03b8\u03b5\u03af \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03bf GHCup, \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03b9\u03c2 \u03bf\u03b4\u03b7\u03b3\u03af\u03b5\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf https://www.haskell.org/downloads/. </p> <p>\u0395\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ac, \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b5\u03b3\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03b7\u03c2 Haskell \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03bb\u03b5\u03af\u03bf stack, \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03b9\u03c2 \u03bf\u03b4\u03b7\u03b3\u03af\u03b5\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf https://docs.haskellstack.org/en/stable/.</p>"},{"location":"lab-haskell/#haskell_1","title":"\u039f \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03c5\u03c4\u03ae\u03c2 \u03c4\u03b7\u03c2 Haskell","text":"<p>\u0395\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c4\u03bf\u03c5 \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03c5\u03c4\u03ae ghci \u03c4\u03b7\u03c2 Haskell.</p> <p><pre><code>$ ghci\nGHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help\nghci&gt; \"Hello World\"\n\"Hello World\"\nghci&gt; :quit\nLeaving GHCi.\n$\n</code></pre> \u0391\u03bd \u03ad\u03c7\u03b5\u03b9 \u03b5\u03b3\u03ba\u03b1\u03c4\u03b1\u03c3\u03c4\u03b1\u03b8\u03b5\u03af \u03b7 Haskell \u03bc\u03b5 \u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03bb\u03b5\u03af\u03bf stack \u03c4\u03cc\u03c4\u03b5 \u03b7 \u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 ghci \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03b5\u03be\u03ae\u03c2:</p> <pre><code>$ stack ghci\ntests&gt; initial-build-steps (lib)\nConfiguring GHCi with the following packages: tests.\nGHCi, version 9.2.8: https://www.haskell.org/ghc/  :? for help\nLoaded GHCi configuration from /Users/chgogos/.cache/stack/ghci-script/2a3bbd58/ghci-script\nghci&gt; 2 ^100\n1267650600228229401496703205376\nghci&gt; :q\nLeaving GHCi.\n$\n</code></pre>"},{"location":"lab-haskell/#_1","title":"\u0395\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03b2\u03b1\u03c3\u03b9\u03ba\u03bf\u03af \u03c4\u03cd\u03c0\u03bf\u03b9","text":"<p>\u0391\u03c1\u03b9\u03b8\u03bc\u03bf\u03af</p> <pre><code>ghci&gt; 1 + 2\n3\nghci&gt; (+) 1 2\n3\nghci&gt; 1 + 2 * 3\n7\nghci&gt; 1 + 2 * 3.0\n7.0\nghci&gt; 2 ^ 10\n1024\nghci&gt; div 10 3\n3\nghci&gt; 10 `div` 3 -- div \u03c9\u03c2 infix \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 \u03bc\u03b5 backticks `\n3\nghci&gt; mod 10 3\n1\nghci&gt; 10 `mod` 3 -- mod \u03c9\u03c2 infix \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 \u03bc\u03b5 backticks `\n1\nghci&gt; gcd 24 56\n8 \n</code></pre> <p>\u039b\u03b5\u03ba\u03c4\u03b9\u03ba\u03ac</p> <pre><code>ghci&gt; \"hi\"\n\"hi\"\nghci&gt; \"hello \" ++ \"world\"\n\"hello world\"\n-- \u03b4\u03b5\u03b9\u03ba\u03c4\u03bf\u03b4\u03cc\u03c4\u03b7\u03c3\u03b7 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03bc\u03b5 \u03c4\u03bf !!\nghci&gt; \"hello\" !! 1\n'e'\n</code></pre> <p>\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2</p> <p>\u0388\u03bd\u03b1 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03cc \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03c9\u03bd.</p> <pre><code>ghci&gt; 'a'\n'a'\nghci&gt; ['a', 'b']\n\"ab\"\n</code></pre> <p>\u039b\u03bf\u03b3\u03b9\u03ba\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2</p> <pre><code>ghci&gt; 1 == 2-1\nTrue\nghci&gt; 1 /= 1\nFalse\nghci&gt; \"Arta\" == ['A','r','t','a']\nTrue\n</code></pre>"},{"location":"lab-haskell/#_2","title":"\u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2","text":"<p>\u039f\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c4\u03b7\u03bd Haskell \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03b4\u03cd\u03bf \u03c4\u03bc\u03ae\u03bc\u03b1\u03c4\u03b1. \u0388\u03bd\u03b1 \u03c0\u03c1\u03bf\u03b1\u03b9\u03c1\u03b5\u03c4\u03b9\u03ba\u03cc \u03c4\u03bc\u03ae\u03bc\u03b1 \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03c4\u03cd\u03c0\u03bf\u03c5 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2. \u0388\u03bd\u03b1 \u03c4\u03bc\u03ae\u03bc\u03b1 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2. \u0397 Haskell \u03ad\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03b9\u03c3\u03c7\u03c5\u03c1\u03cc \u03c3\u03cd\u03c3\u03c4\u03b7\u03bc\u03b1 \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b1\u03c3\u03bc\u03bf\u03cd \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03b5\u03bd\u03c4\u03bf\u03c0\u03b9\u03c3\u03bc\u03cc \u03c4\u03c9\u03bd \u03c4\u03cd\u03c0\u03c9\u03bd \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2.</p> <p>\u03a0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 (binding) \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 <code>x</code> \u03c3\u03b5 \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1.</p> <pre><code>ghci&gt; let x = 42\nghci&gt; x\n42\n</code></pre> <p>\u03a0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 <code>double</code> \u03c3\u03b5 \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1.</p> <pre><code>ghci&gt; let double x = 2 * x\nghci&gt; double 21\n42\n</code></pre> <p>\u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c3\u03b5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf.</p> \u0391\u03c1\u03c7\u03b5\u03af\u03bf day1.hs \u03bc\u03b5 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd: double, fact, factpm, factg, fibpm, fibt, fibc, size, prod, allEven day1.hs<pre><code>-- \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 double \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03cc \u03c4\u03b7\u03c2 \u03b4\u03b9\u03c0\u03bb\u03b1\u03c3\u03b9\u03b1\u03c3\u03bc\u03ad\u03bd\u03b7\ndouble :: Num a =&gt; a -&gt; a\ndouble x = x + x\n\n-------------------------------------------------\n\n-- factorial (3 \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9)\n-- \u03bc\u03b5 conditional\nfactc :: Integer -&gt; Integer\nfactc x = if x == 0 then 1 else factc (x -1) * x\n\n-- \u03bc\u03b5 guards\nfactg :: Integer -&gt; Integer\nfactg x\n  | x &gt; 1 = x * factg (x -1)\n  | otherwise = 1\n\n-- \u03bc\u03b5 pattern matching\nfactpm :: Integer -&gt; Integer\nfactpm 0 = 1\nfactpm x = x * factpm (x - 1)\n\n-------------------------------------------------\n\n-- \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1 fibonacci (3 \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9)\n-- \u03bc\u03b5 pattern matching\nfibpm :: Integer -&gt; Integer\nfibpm 0 = 1\nfibpm 1 = 1\nfibpm x = fibpm (x - 1) + fibpm (x - 2)\n\n-- \u03bc\u03b5 tuples\nfibTuple :: (Integer, Integer, Integer) -&gt; (Integer, Integer, Integer)\nfibTuple (x, y, 0) = (x, y, 0)\nfibTuple (x, y, index) = fibTuple (y, x + y, index - 1)\n\nfibResult :: (Integer, Integer, Integer) -&gt; Integer\nfibResult (x, y, z) = x\n\nfibt :: Integer -&gt; Integer\nfibt x = fibResult (fibTuple (0, 1, x))\n\n-- \u03bc\u03b5 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c3\u03b7 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd\nfibNextPair :: (Integer, Integer) -&gt; (Integer, Integer)\nfibNextPair (x, y) = (y, x + y)\n\nfibNthPair :: Integer -&gt; (Integer, Integer)\nfibNthPair 1 = (1, 1)\nfibNthPair n = fibNextPair (fibNthPair (n - 1))\n\nfibc :: Integer -&gt; Integer\nfibc = fst . fibNthPair\n\n-------------------------------------------------\n\n-- \u03bc\u03ae\u03ba\u03bf\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2\nsize :: Num p =&gt; [a] -&gt; p\nsize [] = 0\nsize (h : t) = 1 + size t\n\n-------------------------------------------------\n\n-- \u03b3\u03b9\u03bd\u03cc\u03bc\u03b5\u03bd\u03bf \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd \u03bb\u03af\u03c3\u03c4\u03b1\u03c2\nprod :: Num p =&gt; [p] -&gt; p\nprod [] = 1\nprod (h : t) = h * prod t\n\n-------------------------------------------------\n\n-- \u03b4\u03b9\u03b1\u03c4\u03ae\u03c1\u03b7\u03c3\u03b7 \u03bc\u03cc\u03bd\u03bf \u03c4\u03c9\u03bd \u03ac\u03c1\u03c4\u03b9\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2\nallEven :: [Integer] -&gt; [Integer]\nallEven [] = []\nallEven (h : t) = if even h then h : allEven t else allEven t\n</code></pre> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day1.hs\ndouble :: Integer -&gt; Integer\ndouble x = 2 * x\n</code></pre> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1, \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2.</p> <pre><code>$ ghci\nGHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help\nghci&gt; :load day1.hs\n[1 of 2] Compiling Main             ( day1.hs, interpreted )\nOk, one module loaded.\nghci&gt; double 10\n20\nghci&gt; :quit\nLeaving GHCi\n</code></pre> <p>\u03ae </p> <pre><code>$ ghci day1.hs\nGHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help\n[1 of 2] Compiling Main             ( day1.hs, interpreted )\nOk, one module loaded.\nghci&gt; double 10\n20\nghci&gt; :quit\nLeaving GHCi\n</code></pre>"},{"location":"lab-haskell/#recursion","title":"\u0391\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae (recursion)","text":"<p>\u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 fact \u03b1\u03c0\u03b5\u03c5\u03b8\u03b5\u03af\u03b1\u03c2 \u03c3\u03c4\u03bf ghci \u03bc\u03b5 \u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 if-then-else.</p> <pre><code>ghci&gt; let fact x = if x == 0 then 1 else fact (x - 1) * x\nghci&gt; fact 3\n6\n</code></pre> <p>\u03a4\u03b1\u03af\u03c1\u03b9\u03b1\u03c3\u03bc\u03b1 \u03c0\u03c1\u03bf\u03c4\u03cd\u03c0\u03c9\u03bd (pattern matching)</p> <p>\u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c4\u03b7\u03c2 multiline \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 <code>factpm</code> \u03b1\u03c0\u03b5\u03c5\u03b8\u03b5\u03af\u03b1\u03c2 \u03c3\u03c4\u03bf ghci, \u03c0\u03c1\u03bf\u03c3\u03bf\u03c7\u03ae \u03c3\u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bc\u03b2\u03cc\u03bb\u03c9\u03bd <code>:{</code> \u03ba\u03b1\u03b9 <code>:}</code>.</p> <pre><code>ghci&gt; :{\nghci| factpm :: Integer -&gt; Integer\nghci| factpm 0 = 1\nghci| factpm x = x * factpm (x - 1)\nghci| :}\nghci&gt; factpm 10\n3628800\n</code></pre> <p>\u03a6\u03c1\u03bf\u03c5\u03c1\u03bf\u03af (guards)</p> <p>\u039f\u03b9 \u03c6\u03c1\u03bf\u03c5\u03c1\u03bf\u03af \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b8\u03ae\u03ba\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03c9\u03bd \u03bf\u03c1\u03b9\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd \u03cc\u03c0\u03c9\u03c2 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1. \u038c\u03c4\u03b1\u03bd \u03b7 \u03c3\u03c5\u03bd\u03b8\u03ae\u03ba\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03c6\u03c1\u03bf\u03c5\u03c1\u03bf\u03cd \u03b9\u03ba\u03b1\u03bd\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b7 Haskell \u03ba\u03b1\u03bb\u03b5\u03af \u03c4\u03b7\u03bd \u03ba\u03b1\u03c4\u03ac\u03bb\u03bb\u03b7\u03bb\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7.</p> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day1.hs\nfactg :: Integer -&gt; Integer\nfactg x\n    | x &gt; 1 = x * factg (x-1)\n    | otherwise 1\n</code></pre> <pre><code>$ ghci day1.hs \nghci&gt; factg 5\n120\n</code></pre>"},{"location":"lab-haskell/#_3","title":"\u03a0\u03bb\u03b5\u03b9\u03ac\u03b4\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2","text":"<p>\u03a3\u03c4\u03b9\u03c2 \u03c0\u03bb\u03b5\u03b9\u03ac\u03b4\u03b5\u03c2 \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03bf\u03cd \u03c4\u03cd\u03c0\u03bf\u03c5 \u03b5\u03bd\u03ce \u03c3\u03c4\u03b9\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03cc\u03bb\u03b1 \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf\u03c5 \u03af\u03b4\u03b9\u03bf\u03c5 \u03c4\u03cd\u03c0\u03bf\u03c5. </p> <p>\u039c\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03ba\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c0\u03bb\u03b5\u03b9\u03ac\u03b4\u03b1. \u039c\u03b5 \u03c4\u03bf <code>:type</code> \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bc\u03b5 \u03bd\u03b1 \u03b4\u03bf\u03cd\u03bc\u03b5 \u03c4\u03bf\u03bd \u03c4\u03cd\u03c0\u03bf \u03bc\u03b9\u03b1\u03c2 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7\u03c2.</p> <pre><code>ghci&gt;:type [1,2,3]\n[1,2,3] :: Num a =&gt; [a]\nghci&gt; :type ('1', \"2\", 3, 4)\n('1', \"2\", 3, 4) :: (Num c, Num d) =&gt; (Char, String, c, d)\n</code></pre> <p>\u03a0\u03c1\u03ce\u03c4\u03bf (fst) \u03ba\u03b1\u03b9 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf (snd) \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03c0\u03bb\u03b5\u03b9\u03ac\u03b4\u03b1</p> <pre><code>ghci&gt; fst (1,2)\n1\nghci&gt; snd (1,2)\n2\n</code></pre> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b5\u03cd\u03c1\u03b5\u03c3\u03b7\u03c2 \u03cc\u03c1\u03c9\u03bd \u03c4\u03b7\u03c2 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1\u03c2 fibonacci.</p> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day1.hs\nfib :: Integer -&gt; Integer\nfib 0 = 1\nfib 1 = 1\nfib x = fib (x - 1) + fib (x - 2)\n</code></pre> <pre><code>ghci&gt; fib 10\n10946\n</code></pre> <p>\u03a5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b5\u03c1\u03b7\u03c2 \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 <code>fib</code> (\u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c0\u03bb\u03b5\u03b9\u03ac\u03b4\u03c9\u03bd).</p> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day1.hs\nfibTuple :: (Integer, Integer, Integer) -&gt; (Integer, Integer, Integer)\nfibTuple (x, y, 0) = (x, y, 0)\nfibTuple (x, y, index) = fibTuple (y, x + y, index - 1)\n\nfibResult :: (Integer, Integer, Integer) -&gt; Integer\nfibResult (x, y, z) = x\n\nfib :: Integer -&gt; Integer\nfib x = fibResult (fibTuple (0, 1, x))\n</code></pre> <pre><code>ghci&gt; fib 100\n354224848179261915075\n</code></pre> <p>head, tail, init, last \u03c3\u03b5 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2</p> <pre><code>ghci&gt; head [1,2,3,4]\n1\nghci&gt; tail [1,2,3,4]\n[2,3,4]\nghci&gt; let (h:t) = [1,2,3,4]\nghci&gt; h\n1\nghci&gt; t\n[2,3,4]\nghci&gt; init [1,2,3,4]\n[1,2,3]\nghci&gt; last [1,2,3,4]\n4\n</code></pre> <p>\u03a3\u03cd\u03bd\u03b8\u03b5\u03c3\u03b7 (composition)</p> <pre><code>ghci&gt; let second = head . tail\nghci&gt; second [1,2,3]\nsecond = 2\n</code></pre>"},{"location":"lab-haskell/#_4","title":"\u0394\u03b9\u03ac\u03c3\u03c7\u03b9\u03c3\u03b7 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd","text":"<p>\u039c\u03ad\u03b3\u03b5\u03b8\u03bf\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2</p> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day1.hs\nsize [] = 0\nsize (h:t) = 1 + size t\n</code></pre> <pre><code>ghci&gt; size [1,2,3,4]\n4\n</code></pre> <p>\u0393\u03b9\u03bd\u03cc\u03bc\u03b5\u03bd\u03bf \u03c4\u03b9\u03bc\u03ce\u03bd \u03bb\u03af\u03c3\u03c4\u03b1\u03c2</p> <pre><code>ghci&gt; product [1,2,3,4]\n24\n</code></pre> <p>\u03a3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc\u03c2 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd \u03bc\u03b5 \u03c4\u03bf zip</p> <pre><code>ghci&gt; zip [1,2,3,4] [5,6,7,8]\n[(1,5),(2,6),(3,7),(4,8)]\n</code></pre> <p>\u03a3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc\u03c2 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd \u03bc\u03b5 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03bf zipWith</p> <pre><code>ghci&gt; zipWith (*) [1,2,3,4] [5,6,7,8]\n[5,12,21,32]\n</code></pre>"},{"location":"lab-haskell/#_5","title":"\u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd","text":"<p>\u03a4\u03bf \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf <code>:</code> \u03bb\u03ad\u03b3\u03b5\u03c4\u03b1\u03b9 cons \u03ba\u03b1\u03b9 \u03b4\u03b9\u03b1\u03c7\u03c9\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03ba\u03b5\u03c6\u03b1\u03bb\u03ae \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03bf\u03c5\u03c1\u03ac \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2. </p> <pre><code>ghci&gt; 1:[2,3]\n[1,2,3]\n</code></pre> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03ac\u03c1\u03c4\u03b9\u03bf\u03c5\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2</p> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day1.hs\nallEven :: [Integer] -&gt; [Integer]\nallEven [] = []\nallEven (h:t) = if even h then h:allEven t else allEven t\n</code></pre> <pre><code>ghci&gt; allEven [1,2,3,4,5,6]\n[2,4,6]\n</code></pre> <p>\u03a0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ce\u03bd (ranges) </p> <pre><code>ghci&gt; [1..10]\n[1,2,3,4,5,6,7,8,10]\nghci&gt; [0,5..10]\n[0,5,10]\nghci&gt; [2,1.5..0]\n[2.0,1.5,1.0,0.5,0.0]\n</code></pre> <p>\u039c\u03b7 \u03c6\u03c1\u03b1\u03b3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ce\u03bd </p> <pre><code>ghci&gt; take 5 [1..]\n[1,2,3,4,5]\n</code></pre> <p>\u03a0\u03b5\u03c1\u03b9\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 (list comprehensions)</p> <pre><code>ghci&gt; [x * 2 | x &lt;- [1, 2, 3]]\n[2,4,6]\nghci&gt; [ (y, x) | (x, y) &lt;- [(1, 2), (2, 3), (3, 1)]]\n[(2,1),(3,2),(1,3)]\nghci&gt; [ (y, x) | (x, y) &lt;- [(1, 2), (2, 3), (3, 1)]]\n[(2,1),(3,2),(1,3)]\nghci&gt; let a = [1..10]\nghci&gt; let b = [0,5,20]\nghci&gt; [(x,y) | x &lt;- a, y&lt;-b]\n[(1,0),(1,5),(1,20),(2,0),(2,5),(2,20),(3,0),(3,5),(3,20),(4,0),(4,5),(4,20),(5,0),(5,5),(5,20),(6,0),(6,5),(6,20),(7,0),(7,5),(7,20),(8,0),(8,5),(8,20),(9,0),(9,5),(9,20),(10,0),(10,5),(10,20)]\nghci&gt; [(x,y) | x &lt;- a, y&lt;-b, x &lt; y]\n[(1,5),(1,20),(2,5),(2,20),(3,5),(3,20),(4,5),(4,20),(5,20),(6,20),(7,20),(8,20),(9,20),(10,20)]\n</code></pre>"},{"location":"lab-haskell/#_6","title":"\u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c5\u03c8\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7\u03c2 \u03c4\u03ac\u03be\u03b7\u03c2","text":"\u0391\u03c1\u03c7\u03b5\u03af\u03bf day2.hs \u03bc\u03b5 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd: squareAll, myRange day2.hs<pre><code>-- \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c3\u03b5 \u03cc\u03bb\u03b1 \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2\nsquareAll :: Num b =&gt; [b] -&gt; [b]\nsquareAll list = map square list\n  where\n    square x = x * x\n\n-------------------------------------------------\n\n-- \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03bc\u03b9\u03b1\u03c2 \u03ac\u03c0\u03b5\u03b9\u03c1\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2\nmyRange :: Num t =&gt; t -&gt; t -&gt; [t]\nmyRange start step = start : (myRange (start + step) step)\n</code></pre> <p>\u0391\u03bd\u03ce\u03bd\u03c5\u03bc\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2</p> <p>\u0397 \u03c3\u03cd\u03bd\u03c4\u03b1\u03be\u03b7 \u03c4\u03c9\u03bd \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd (\u03bb\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd) \u03c3\u03c4\u03b7 Haskell \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7:</p> <pre><code>(\\param1 .. paramn -&gt; function_body)\n</code></pre> <p>\u039c\u03b9\u03b1 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae\u03c2 \u03c4\u03bf\u03c5 \u03c4\u03b5\u03c4\u03c1\u03b1\u03b3\u03ce\u03bd\u03bf\u03c5 \u03c4\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5 \u03c4\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b7 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bc\u03b5 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 5.</p> <pre><code>ghci&gt; (\\ x -&gt; x * x) 5\n25\n</code></pre> <p>\u039c\u03b9\u03b1 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bc\u03b5 \u03b4\u03cd\u03bf \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2:</p> <pre><code>ghci&gt; (\\ x y-&gt; x * y) 5 7\n35\n</code></pre> <p>map</p> <pre><code>ghci&gt; map (\\x -&gt; x * x) [1, 2, 3]\n[1, 4, 9]\n</code></pre> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day2.hs\nsquareAll :: Num b =&gt; [b] -&gt; [b]\nsquareAll list = map square list\n    where square x = x * x\n</code></pre> <pre><code>ghci&gt; squareAll [1, 2, 3]\n[1,4,9]\n</code></pre> <p>H <code>(+1)</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bc\u03b5\u03c1\u03b9\u03ba\u03ac \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03c3\u03bc\u03ad\u03bd\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7. \u03a0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>+</code> \u03c3\u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03c0\u03c1\u03bf\u03c3\u03b4\u03b5\u03b8\u03b5\u03af \u03b7 \u03bc\u03b9\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03b4\u03cd\u03bf \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ae 1. \u0397 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03b7 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 \u03c3\u03b5 \u03ba\u03ac\u03b8\u03b5 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03b8\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2.</p> <pre><code>ghci&gt; map (+1) [1,2,3]\n[2,3,4]\n</code></pre> <p>filter</p> <pre><code>ghci&gt; filter odd [1, 2, 3, 4, 5]\n[1, 3, 5]\n</code></pre> <p>foldl</p> <pre><code>ghci&gt; foldl (\\x sum -&gt; sum + x) 0 [1, 2, 3, 4]\n10\n</code></pre> <pre><code>ghci&gt; foldl (+) 0 [1,2,3,4]\n10\n</code></pre> <pre><code>ghci&gt; foldl1 (+) [1,2,3,4]\n10\n</code></pre>"},{"location":"lab-haskell/#currying","title":"\u039c\u03b5\u03c1\u03b9\u03ba\u03ac \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 currying","text":"<p>\u03a3\u03c4\u03b7 Haskell \u03ba\u03ac\u03b8\u03b5 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bf\u03c5\u03c3\u03b9\u03b1\u03c3\u03c4\u03b9\u03ba\u03ac \u03ad\u03c7\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bc\u03cc\u03bd\u03bf \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf.</p> <pre><code>ghci&gt; let prod x y = x * y\nghci&gt; prod 3 4\n12\nghci&gt; (prod 3) 4\n12\nghci&gt; tripple = prod 3\nghci&gt; tripple 4\n12\n</code></pre>"},{"location":"lab-haskell/#_7","title":"\u039f\u03ba\u03bd\u03b7\u03c1\u03ae \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7","text":"<p>H Haskell \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03b5\u03b9 \u03ac\u03c0\u03b5\u03b9\u03c1\u03b5\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2.</p> <p>\u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03ac\u03c0\u03b5\u03b9\u03c1\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2.</p> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day2.hs\nmyRange :: Num t =&gt; t -&gt; t -&gt; [t]\nmyRange start step = start:(myRange (start + step) step)\n</code></pre> <pre><code>ghci&gt; take 5 (myRange 10 2)\n[10,12,14,16,18]\n</code></pre> <p>\u03a3\u03cd\u03bd\u03c4\u03b1\u03be\u03b7 \u03c4\u03b7\u03c2 Haskell \u03b3\u03b9\u03b1 \u03bc\u03b7 \u03c6\u03c1\u03b1\u03b3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ce\u03bd.</p> <pre><code>ghci&gt; take 10 [1..]\n[1,2,3,4,5,6,7,8,9,10]\nghci&gt; take 10 [1,3..]\n[1,3,5,7,9,11,13,15,17,19]\n</code></pre>"},{"location":"lab-haskell/#_8","title":"\u03a4\u03cd\u03c0\u03bf\u03b9","text":"<p>\u03a0\u03c1\u03c9\u03c4\u03bf\u03b3\u03b5\u03bd\u03b5\u03af\u03c2 \u03c4\u03cd\u03c0\u03bf\u03b9</p> <pre><code>ghci&gt; :type 'a'\n'a' :: Char\nghci&gt; :type True\nTrue :: Bool\n</code></pre> \u0391\u03c1\u03c7\u03b5\u03af\u03bf day3.hs \u03bc\u03b5 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd: Suit, Rank, Card, Hand, Tree day3.hs<pre><code>-- \u03c4\u03cd\u03c0\u03bf\u03c2 \u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03bf\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03bc\u03b5 \u03b4\u03cd\u03bf \u03c4\u03b9\u03bc\u03ad\u03c2\ndata Boolean = True | False deriving (Show)\n\n-------------------------------------------------\n\n-- \u03c4\u03cd\u03c0\u03bf\u03b9 \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b9\u03b1 \u03c0\u03b1\u03b9\u03c7\u03bd\u03af\u03b4\u03b9\u03b1 \u03bc\u03b5 \u03ba\u03ac\u03c1\u03c4\u03b5\u03c2\ndata Suit = Spades | Hearts deriving (Show)\n\ndata Rank = Ten | Jack | Queen | King | Ace deriving (Show)\n\ntype Card = (Rank, Suit)\n\ntype Hand = [Card]\n\nvalue :: Rank -&gt; Integer\nvalue Ten = 1\nvalue Jack = 2\nvalue Queen = 3\nvalue King = 4\nvalue Ace = 5\n\ncardValue :: Card -&gt; Integer\ncardValue (rank, suit) = value rank\n\n-------------------------------------------------\n\n-- \u03c0\u03bf\u03bb\u03c5\u03bc\u03bf\u03c1\u03c6\u03b9\u03ba\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\nbackwards :: [a] -&gt; [a]\nbackwards [] = []\nbackwards (h : t) = backwards t ++ [h]\n\n-------------------------------------------------\n\n-- \u03c0\u03bf\u03bb\u03c5\u03bc\u03bf\u03c1\u03c6\u03b9\u03ba\u03cc\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd\ndata Triplet a = Trio a a a deriving (Show)\n\n-------------------------------------------------\n\n-- \u0391\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03b9\u03ba\u03cc\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd\ndata Tree a = Children [Tree a] | Leaf a deriving (Show)\n\ndepth :: (Num p, Ord p) =&gt; Tree a -&gt; p\ndepth (Leaf _) = 1\ndepth (Children c) = 1 + maximum (map depth c)\n</code></pre> <p>\u03a4\u03cd\u03c0\u03bf\u03b9 \u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03bf\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7</p> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day3.hs\ndata Suit = Spades | Hearts deriving (Show)\ndata Rank = Ten | Jack | Queen | King | Ace deriving (Show)\ntype Card = (Rank, Suit)\ntype Hand = [Card]\n</code></pre> <p>\u0391\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03b9\u03ba\u03bf\u03af \u03c4\u03cd\u03c0\u03bf\u03b9</p> <pre><code>-- \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf day3.hs\ndata Tree a = Children [Tree a] | Leaf a deriving (Show)\n</code></pre> <pre><code>ghci&gt; let tree = Children[Leaf 1, Children [Leaf 2, Leaf 3]]\nghci&gt; tree\nChildren[Leaf 1, Children [Leaf 2, Leaf 3]]\n</code></pre>"},{"location":"lab-haskell/#_9","title":"\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1","text":"example1.hs<pre><code>fac :: (Eq p, Num p) =&gt; p -&gt; p\nfac 0 = 1\nfac n = n * fac (n-1)\n\nmain :: IO ()\nmain = print (fac 42)\n</code></pre> <p>\u0395\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03c5\u03c4\u03ae ghci <pre><code>$ ghci example1.hs\nGHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help\n[1 of 2] Compiling Main             ( example1.hs, interpreted )\nOk, one module loaded.\nghci&gt; main\n1405006117752879898543142606244511569936384000000000\n</code></pre></p> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03b1\u03c0\u03cc \u03c4\u03bf ghc, \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 <pre><code>$ ghc example1.hs\n[1 of 2] Compiling Main             ( example1.hs, example1.o )\n[2 of 2] Linking example1\n$ ./example1\n1405006117752879898543142606244511569936384000000000\n</code></pre></p> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03bf runghc <pre><code>$ runghc example1.hs\n1405006117752879898543142606244511569936384000000000\n</code></pre></p>"},{"location":"lab-haskell/#_10","title":"\u0391\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae \u03c3\u03b5 \u03b1\u03c1\u03c7\u03b5\u03af\u03b1","text":"<p>\u0391\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7 \u03b1\u03c0\u03cc \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 input_for_haskell.txt</p> fileReadFrom.hs<pre><code>main :: IO()\nmain = do\n   content &lt;- readFile \"input_for_haskell.txt\"\n   let linesOfFiles = lines content\n       x = map words linesOfFiles\n   print x\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghc fileReadFrom.hs\n[1 of 2] Compiling Main             ( fileReadFrom.hs, fileReadFrom.o )\n[2 of 2] Linking fileReadFrom\n$ ./fileReadFrom\n[[\"maria\",\"8\"],[\"petros\",\"9\"],[\"kostas\",\"5\"]]\n</code></pre></p> <p>\u0395\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \"output_from_haskell.txt\" fileWriteTo.hs<pre><code>main :: IO ()\nmain = do\n  let a_list = [\"Arta\", \"Informatics\", \"Telecommunications\"]\n  writeFile \"output_from_haskell.txt\" (unlines a_list)\n  print \"Write successed!\"\n</code></pre></p> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghc fileWriteTo.hs\n[1 of 2] Compiling Main             ( fileWriteTo.hs, fileWriteTo.o )\n[2 of 2] Linking fileWriteTo\n$ ./fileWriteTo\n\"Write successed!\"\n</code></pre></p> <p>\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf output_from_haskell.txt \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03c4\u03c1\u03ad\u03c7\u03bf\u03bd\u03c4\u03b1 \u03c6\u03ac\u03ba\u03b5\u03bb\u03bf.</p> <p>\u03a3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03cc!</p> <p>\u0394\u03b9\u03b1\u03c6\u03ac\u03bd\u03b5\u03b9\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03b2\u03af\u03bd\u03c4\u03b5\u03bf \u03bc\u03b1\u03b8\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd Graham Hutton, \u03c3\u03c5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ad\u03b1 \u03c4\u03bf\u03c5 \u03b2\u03b9\u03b2\u03bb\u03af\u03bf\u03c5 Programming in Haskell </p> <p>\u039b\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd </p>"},{"location":"lab-haskell/#-","title":"\u0392\u03b9\u03b2\u03bb\u03af\u03b1 - \u03c3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2","text":"<ul> <li>\u03a3\u03c4\u03b1\u03bc\u03b1\u03c4\u03cc\u03c0\u03bf\u03c5\u03bb\u03bf\u03c2, \u03a0. (2015). \u039b\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 [\u03a0\u03c1\u03bf\u03c0\u03c4\u03c5\u03c7\u03b9\u03b1\u03ba\u03cc \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03bf]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2. https://hdl.handle.net/11419/3587</li> <li>Learn You a Haskell for Great Good</li> </ul>"},{"location":"lab-haskell/#videos","title":"Videos","text":"<ul> <li>Philipp Hagenlocher - Haskell for Imperative Programmers</li> <li>Curtis D'Alves - Learning Haskell</li> <li>Haskell Course by IOG Academy</li> </ul>"},{"location":"lab-haskell/#_11","title":"\u039c\u03b1\u03b8\u03ae\u03bc\u03b1\u03c4\u03b1","text":"<ul> <li>Haskell MOOC Part 1 &amp; Part 2 - by Joel Kaasinen (Nitor) and John L\u00e5ng (University of Helsinki)</li> <li>Beginner crash course - by Type Classes</li> <li>Haskell and Functional Programming course for complete beginners - by Dmitrii Kovanikov</li> <li>Functional Programming Course - by Tony Morris &amp; Mark Hibberd</li> <li>Haskell via Sokoban by Joachim Breitner<ul> <li>CodeWorld environment</li> </ul> </li> </ul>"},{"location":"lab-haskell/#haskell-documentation","title":"Haskell documentation","text":"<ul> <li>Hoogle</li> <li>Search Haskell packages</li> </ul>"},{"location":"lab-haskell/#_12","title":"\u03a0\u03b7\u03b3\u03ad\u03c2","text":"<ul> <li>Learning Haskell wiki</li> <li>Learn X in Y minutes, where X is Haskell</li> </ul>"},{"location":"lab-prolog/","title":"Lab prolog","text":""},{"location":"lab-prolog/#swi-prolog","title":"\u0395\u03b3\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03b7\u03c2 SWI-Prolog","text":"<ul> <li>SWI-Prolog</li> <li> <p>SWI-Prolog online (SWISH)</p> </li> <li> <p>SWI-Prolog Editor (\u03bc\u03cc\u03bd\u03bf \u03b3\u03b9\u03b1 Windows)</p> </li> </ul>"},{"location":"lab-prolog/#prolog","title":"\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03b4\u03b9\u03b1\u03bd\u03bf\u03bc\u03ad\u03c2 \u03c4\u03b7\u03c2 Prolog","text":"<ul> <li>Amzi! Prolog</li> <li>B-Prolog</li> <li>Ciao Prolog</li> <li>ECLiPSe</li> <li>GNU Prolog</li> <li>SICStus Prolog</li> <li>Strawberry Prolog</li> <li>Visual Prolog</li> </ul>"},{"location":"lab-prolog/#-","title":"\u0392\u03b9\u03b2\u03bb\u03af\u03b1 - \u03c3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2","text":"<ul> <li>\u03a3\u03b3\u03ac\u03c1\u03bc\u03c0\u03b1\u03c2, \u039a. (2024). \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ad\u03c2 \u0391\u03c3\u03ba\u03ae\u03c3\u03b5\u03b9\u03c2 \u03a4\u03b5\u03c7\u03bd\u03b7\u03c4\u03ae\u03c2 \u039d\u03bf\u03b7\u03bc\u03bf\u03c3\u03cd\u03bd\u03b7\u03c2 \u03bc\u03b5 \u03c4\u03b7 \u0393\u03bb\u03ce\u03c3\u03c3\u03b1 Prolog [\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03cc\u03c2 \u039f\u03b4\u03b7\u03b3\u03cc\u03c2]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2. https://dx.doi.org/10.57713/kallipos-378</li> <li>\u03a3\u03b1\u03ba\u03b5\u03bb\u03bb\u03b1\u03c1\u03af\u03bf\u03c5, \u0397., \u0392\u03b1\u03c3\u03b9\u03bb\u03b5\u03b9\u03ac\u03b4\u03b7\u03c2, \u039d., \u039a\u03b5\u03c6\u03b1\u03bb\u03ac\u03c2, \u03a0., &amp; \u03a3\u03c4\u03b1\u03bc\u03ac\u03c4\u03b7\u03c2, \u0394. (2015). \u03a4\u03b5\u03c7\u03bd\u03b9\u03ba\u03ad\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd [\u03a0\u03c1\u03bf\u03c0\u03c4\u03c5\u03c7\u03b9\u03b1\u03ba\u03cc \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03bf]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2. https://hdl.handle.net/11419/777</li> <li>\u03a3\u03c4\u03b1\u03bc\u03b1\u03c4\u03cc\u03c0\u03bf\u03c5\u03bb\u03bf\u03c2, \u03a0. (2015). \u039b\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 [\u03a0\u03c1\u03bf\u03c0\u03c4\u03c5\u03c7\u03b9\u03b1\u03ba\u03cc \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03bf]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2. https://dx.doi.org/10.57713/kallipos-648</li> </ul>"},{"location":"lab-prolog/#videos","title":"Videos","text":"<ul> <li>Prolog tutorial by Derek Banas</li> <li>Logic Programming Education</li> </ul>"},{"location":"lab-prolog/#_1","title":"\u03a0\u03b7\u03b3\u03ad\u03c2","text":"<ul> <li>Learn Prolog Now (LPN)</li> <li>\u0394\u03b9\u03b1\u03c6\u03ac\u03bd\u03b5\u03b9\u03b5\u03c2 Prolog A (\u03a0\u03b1\u03c0\u03b1\u03c3\u03c0\u03cd\u03c1\u03bf\u03c5, \u03a3\u03b1\u03b3\u03ce\u03bd\u03b1\u03c2)</li> <li>\u0394\u03b9\u03b1\u03c6\u03ac\u03bd\u03b5\u03b9\u03b5\u03c2 Prolog B (\u03a0\u03b1\u03c0\u03b1\u03c3\u03c0\u03cd\u03c1\u03bf\u03c5, \u03a3\u03b1\u03b3\u03ce\u03bd\u03b1\u03c2)</li> <li>The power of Prolog by Markus Triska</li> <li>Prolog tutorial by J.R.Fisher</li> <li>CLP(FD) tutorial by A. Ogborn</li> <li>Learn X in Y minutes where X=prolog</li> <li>2022: The Year of Prolog<ul> <li>Fifty Years of Prolog and Beyond</li> </ul> </li> </ul>"},{"location":"lab-python/","title":"Lab python","text":""},{"location":"lab-python/#marko-knobl","title":"\u0394\u03b9\u03b1\u03c6\u03ac\u03bd\u03b5\u03b9\u03b5\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd Marko Kn\u00f6bl","text":"<ul> <li>Python basics</li> <li>Python intermediate</li> <li>Python advanced</li> <li>Python in practice</li> <li>Python and data science</li> </ul>"},{"location":"lab-python/#notebooks-python","title":"Notebooks \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2 \u03c3\u03c4\u03b7\u03bd Python","text":"<ol> <li>\u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae</li> <li>\u039b\u03b5\u03ba\u03c4\u03b9\u03ba\u03ac</li> <li>\u039b\u03af\u03c3\u03c4\u03b5\u03c2, \u03c0\u03bb\u03b5\u03b9\u03ac\u03b4\u03b5\u03c2, \u03bb\u03b5\u03be\u03b9\u03ba\u03ac \u03ba\u03b1\u03b9 \u03c3\u03cd\u03bd\u03bf\u03bb\u03b1</li> <li>\u0397 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae if</li> <li>\u0395\u03c0\u03b1\u03bd\u03b1\u03bb\u03ae\u03c8\u03b5\u03b9\u03c2</li> <li>Comprehensions</li> <li>\u0395\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03b9\u03c2</li> <li>\u0391\u03c1\u03c7\u03b5\u03af\u03b1</li> <li>\u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2</li> <li>\u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1</li> <li>\u039a\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2</li> <li>Logging</li> <li>Testing</li> <li>CSV</li> <li>Excel</li> <li>XML</li> <li>JSON</li> <li>YAML</li> <li>\u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 (serialize) \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd \u03bc\u03b5 \u03c4\u03bf pickle</li> <li>\u0397\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03ce\u03c1\u03b5\u03c2</li> <li>\u03a4\u03c5\u03c7\u03b1\u03af\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2</li> <li>\u039a\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2</li> <li>Generators</li> <li>Iterators</li> <li>\u03a4\u03bf module itertools</li> <li>enums</li> <li>\u03a4\u03bf module urllib</li> <li>\u03a4\u03bf module requests</li> <li>bs4</li> <li>\u03a4\u03bf module collections</li> <li>PLY - Python Lex Yacc</li> <li>Aliasing</li> <li>AST</li> <li>\u03a5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd</li> <li>\u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b9\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03bc\u03b7 \u03c4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b9\u03bc\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1</li> <li>numpy</li> <li>pandas</li> <li>matplotlib</li> <li>dataclasses</li> <li>\u03a4\u03bf module functools</li> <li>LEGB</li> <li>\u03a4\u03bf module os</li> <li>Easter eggs</li> <li>seaborn</li> <li>datasets</li> </ol>"},{"location":"lab-python/#python","title":"\u0392\u03b9\u03b2\u03bb\u03af\u03b1 \u03b3\u03b9\u03b1 Python","text":"<ul> <li>Programming Foundations - \u0394\u03b9\u03b1\u03b4\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03cc \u03b2\u03b9\u03b2\u03bb\u03af\u03bf \u03b3\u03b9\u03b1 \u03b5\u03ba\u03bc\u03ac\u03b8\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 Python \u03b1\u03c0\u03cc \u03c4\u03bf TU Delft</li> <li>Automate the Boring Stuff with Python by Al Sweigart</li> <li>Think Python by Allen B. Downey</li> <li>The Python Coding Book</li> <li>A byte of Python by Swaroop<ul> <li>\u039c\u03b5\u03c4\u03ac\u03c6\u03c1\u03b1\u03c3\u03b7 \u03c3\u03c4\u03b1 \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac</li> </ul> </li> <li>\u039c\u03b1\u03bd\u03ae\u03c2, \u0393. (2015). \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c3\u03c4\u03bf\u03bd \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc \u03bc\u03b5 \u03b1\u03c1\u03c9\u03b3\u03cc \u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 Python [\u03a0\u03c1\u03bf\u03c0\u03c4\u03c5\u03c7\u03b9\u03b1\u03ba\u03cc \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03bf]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2. https://hdl.handle.net/11419/2745</li> <li>\u039c\u03b1\u03b3\u03ba\u03bf\u03cd\u03c4\u03b7\u03c2, \u039a., &amp; \u039d\u03b9\u03ba\u03bf\u03bb\u03ac\u03bf\u03c5, \u03a7. (2015). \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c3\u03c4\u03bf\u03bd \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc \u03bc\u03b5 Python [\u03a0\u03c1\u03bf\u03c0\u03c4\u03c5\u03c7\u03b9\u03b1\u03ba\u03cc \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03bf]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2. https://hdl.handle.net/11419/1708</li> <li>\u03a0\u03b1\u03bd\u03b1\u03b3\u03b9\u03ce\u03c4\u03bf\u03c5, \u0393. (2022). \u039c\u03b9\u03b1 \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c3\u03c4\u03b7\u03bd Python \u03b3\u03b9\u03b1 \u039c\u03b5\u03c4\u03b1\u03bb\u03bb\u03b5\u03b9\u03bf\u03bb\u03cc\u03b3\u03bf\u03c5\u03c2 &amp; \u03ac\u03bb\u03bb\u03bf\u03c5\u03c2 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03bf\u03cd\u03c2 [\u03a0\u03c1\u03bf\u03c0\u03c4\u03c5\u03c7\u03b9\u03b1\u03ba\u03cc \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03bf]. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2. https://dx.doi.org/10.57713/kallipos-99</li> <li>Github repository \u03bc\u03b5 \u03b5\u03bb\u03b5\u03cd\u03b8\u03b5\u03c1\u03b1 \u03b4\u03b9\u03b1\u03b8\u03ad\u03c3\u03b9\u03bc\u03b1 \u03b2\u03b9\u03b2\u03bb\u03af\u03b1 \u03b3\u03b9\u03b1 Python</li> </ul>"},{"location":"lab-python/#online","title":"Online \u03bc\u03b1\u03b8\u03ae\u03bc\u03b1\u03c4\u03b1","text":"<ul> <li>Python Programming MOOC 2024 by University of Helsinki</li> <li>CS50\u2019s Introduction to Programming with Python by Harvard</li> <li>PY4E: Python for everybody</li> <li>python-course.eu</li> <li>MITx: Introduction to Computer Science and Programming Using Python</li> </ul>"},{"location":"lab-python/#tutorials","title":"Tutorials","text":"<ul> <li>futurecoder.io</li> <li>PyFlo</li> <li>Practical Python Programming by David Beazley</li> <li>Learn X in Y minutes Where X=Python</li> <li>PyQuest</li> <li>Python Koans</li> </ul>"},{"location":"lab-python/#videos","title":"Videos","text":"<ul> <li>Corey Schafer -  Python tutorials</li> <li>Tech with Tim - Python Programming Tutorials</li> <li>Socratica - Python learning tutorials</li> </ul>"},{"location":"lab-python/#cheat-sheets","title":"Cheat sheets","text":"<ul> <li>Python 3 Cheat Sheet (v2.0.6) by Laurent Pointal</li> <li>The *Best Python Cheat Sheet</li> <li>Python Crash Course cheat sheets</li> <li>Python Cheat Sheet for coding intreviews (Neetcode)</li> </ul>"},{"location":"lab-python/#python-roadmap","title":"Python roadmap","text":""},{"location":"lab-python/#_1","title":"\u0391\u03c0\u03bf\u03c3\u03c0\u03ac\u03c3\u03bc\u03b1\u03c4\u03b1 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1","text":"\u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03cd\u03c0\u03c9\u03c3\u03b7 \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03b9\u03ce\u03bd <p>datetime_example.py<pre><code>from datetime import datetime\n\n# \u03b4\u03b9\u03ac\u03b2\u03b1\u03c3\u03b5 \u03bc\u03b9\u03b1 \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1 \u03c4\u03b7\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2 \u0395\u0395\u0395\u0395.\u039c\u039c.\u0397\u0397 \n# \u03ba\u03b1\u03b9 \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b5 \u03c4\u03b7\u03bd \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1 \u03c3\u03b5 \u03ac\u03bb\u03bb\u03b5\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ad\u03c2, \n# \u03b4\u03b5\u03af\u03c4\u03b5 \u03c4\u03bf https://strftime.org/\ndate1 =datetime.strptime(\"2024.4.10\", \"%Y.%m.%d\")\nprint(date1.strftime(\"%d/%m/%Y\"))\nprint(date1.strftime(\"%-d|%-m|%y\"))\nprint(date1.strftime(\"%d-%B-%y\"))\nprint(date1.strftime(\"%a %-d %b %Y\"))\n</code></pre> \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 <pre><code>$ python datetime_example.py\n10/04/2024\n10|4|24\n10-April-24\nWed 10 Apr 2024\n</code></pre></p> \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03bc\u03b5 \u03c4\u03bf sys.argv <p>command_line_arg_example1.py<pre><code>import sys\n\n\nif __name__ == \"__main__\":\n    print(f\"\u03a0\u039b\u0397\u0398\u039f\u03a3 \u039f\u03a1\u0399\u03a3\u039c\u0391\u03a4\u03a9\u039d: {len(sys.argv)}\")\n    for i, argv in enumerate(sys.argv):\n        print(f\"\u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 {i} \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ae {argv}\")\n</code></pre> \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 <pre><code>$ python command_line_arg_example1.py 1 a bcde\n\u03a0\u039b\u0397\u0398\u039f\u03a3 \u039f\u03a1\u0399\u03a3\u039c\u0391\u03a4\u03a9\u039d: 4\n\u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 0 \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ae /Users/.../command_line_arg_example1.py\n\u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 1 \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ae 1\n\u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 2 \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ae a\n\u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 3 \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ae bcde\n</code></pre></p> \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03bc\u03b5 \u03c4\u03bf argparse <p>argparse_example.py<pre><code>import argparse\n\n\nif __name__ == \"__main__\":\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--input_file', '-i', type=str, help='\u03b4\u03b9\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae \u03c0\u03c1\u03bf\u03c2 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03b9\u03c3\u03cc\u03b4\u03bf\u03c5')\n    parser.add_argument('--output_file', '-o', type=str, help='\u03b4\u03b9\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae \u03c0\u03c1\u03bf\u03c2 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03be\u03cc\u03b4\u03bf\u03c5')\n    args = parser.parse_args()\n\n    print('\u0391\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03b9\u03c3\u03cc\u03b4\u03bf\u03c5:', args.input_file)\n    print('\u0391\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03be\u03cc\u03b4\u03bf\u03c5:', args.output_file)\n</code></pre> \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 <pre><code>$ python argparse_example.py -i a.txt -o b.txt\n\u0391\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03b9\u03c3\u03cc\u03b4\u03bf\u03c5: a.txt\n\u0391\u03c1\u03c7\u03b5\u03af\u03bf \u03b5\u03be\u03cc\u03b4\u03bf\u03c5: b.txt\n</code></pre></p> \u03b1\u03c0\u03bb\u03cc \u03b3\u03c1\u03ac\u03c6\u03b7\u03bc\u03b1 \u03bc\u03b5 \u03c4\u03bf matplotlib <p>matplotlib_example1.py<pre><code>import matplotlib.pyplot as plt\n\ndays = ['\u0394\u03b5\u03c5\u03c4\u03ad\u03c1\u03b1', '\u03a4\u03c1\u03af\u03c4\u03b7', '\u03a4\u03b5\u03c4\u03ac\u03c1\u03c4\u03b7', '\u03a0\u03ad\u03bc\u03c0\u03c4\u03b7', '\u03a0\u03b1\u03c1\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae']\nvalues = [10, 40, 50, 20, 35]\nplt.bar(days, values, color='skyblue')\nplt.ylabel('\u03a0\u03b5\u03c1\u03b9\u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ac')\nplt.show()\n</code></pre> \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 (\u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03c0\u03c1\u03bf\u03b7\u03b3\u03b7\u03b8\u03b5\u03af \u03b7 \u03b5\u03b3\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03bf pip \u03c4\u03b7\u03c2 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7\u03c2 matplotlib) <pre><code>$ python matplotlib_example1.py\n</code></pre> </p> \u03c7\u03c1\u03bf\u03bd\u03bf\u03bc\u03ad\u03c4\u03c1\u03b7\u03c3\u03b7 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c3\u03c4\u03b7\u03bd Python \u03bc\u03b5 \u03c4\u03bf time.time() <p>time_execution1.py<pre><code>import time\nimport random\n\n\ndef be_busy():\n    sleep_time = random.uniform(1, 3)\n    time.sleep(sleep_time)\n\n\nstart_time = time.time()\nbe_busy()\nend_time = time.time()\n\nelapsed_time = end_time - start_time\nprint(f\"Execution time: {elapsed_time} seconds\")\n</code></pre> \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 <pre><code>$ python time_execution1.py\nExecution time: 2.0694435829936992 seconds\n</code></pre></p> \u03c7\u03c1\u03bf\u03bd\u03bf\u03bc\u03ad\u03c4\u03c1\u03b7\u03c3\u03b7 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c3\u03c4\u03b7\u03bd Python \u03bc\u03b5 \u03c4\u03bf timeit.default_timer() <p>time_execution2.py<pre><code>from timeit import default_timer\n\nimport time \nimport random\n\n\ndef be_busy():\n    sleep_time = random.uniform(1, 3)\n    time.sleep(sleep_time)\n\n\nstart_time = default_timer()\nbe_busy()\nend_time = default_timer()\n\nelapsed_time = end_time - start_time\nprint(f\"Execution time: {elapsed_time} seconds\")\n</code></pre> \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 <pre><code>$ python time_execution2.py\nExecution time: 1.9552855410147458 seconds\n</code></pre></p> \u03c7\u03c1\u03ae\u03c3\u03b7 assert \u03c3\u03c4\u03b7\u03bd Python <p>assert_example.py<pre><code>def divide(a, b):\n    assert b != 0, \"Denominator cannot be zero!\"\n    return a / b\n\nprint(divide(10, 2))  # 5.0\nprint(divide(10, 0))  # ZeroDivisionError: division by zero\n</code></pre> \u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 1 <pre><code>$ python assert_example.py\n5.0\nTraceback (most recent call last):\nFile \"assert_example.py\", line 6, in &lt;module&gt;\n    print(divide(10, 0))  # AssertionError: Denominator cannot be zero!\nFile \"assert_example.py\", line 2, in divide\n    assert b != 0, \"Denominator cannot be zero!\"\nAssertionError: Denominator cannot be zero!\n</code></pre> \u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 2 <pre><code>$ python assert_example.py\n5.0\nTraceback (most recent call last):\nFile \"assert_example.py\", line 6, in &lt;module&gt;\n    print(divide(10, 0))  # AssertionError: Denominator cannot be zero!\nFile \"assert_example.py\", line 3, in divide\n    return a / b\nZeroDivisionError: division by zero\n</code></pre></p>"},{"location":"lab/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03cc \u03c4\u03bc\u03ae\u03bc\u03b1 \u03bc\u03b1\u03b8\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2","text":"<p>\u03a3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf \u03c4\u03bf\u03c5 \u03bc\u03b1\u03b8\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bf\u03b9 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 Python, \u03b7 Haskell \u03ba\u03b1\u03b9 \u03b7 Prolog, \u03c9\u03c2 \u03b5\u03ba\u03c0\u03c1\u03cc\u03c3\u03c9\u03c0\u03bf\u03b9 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd, \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03ba\u03b1\u03b9 \u03c4\u03bf\u03c5 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b1.</p>"},{"location":"lab/#python","title":"\u03a0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 (Python)","text":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf \u03a0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 1 \u03c3\u03c5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03b1\u03c0\u03bb\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd \u03c3\u03b5 Python, ranges, \u03b4\u03bf\u03bc\u03ae \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7\u03c2, \u03b4\u03bf\u03bc\u03ae \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae\u03c2, \u03b2\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd (lists, tuples, dictionaries, sets), \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ac (\u03bc\u03ae\u03ba\u03bf\u03c2 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd, \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd, \u03bb\u03ae\u03c8\u03b7 \u03c4\u03bc\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03bc\u03b5 slice), \u03b1\u03bc\u03c5\u03bd\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2, import \u03ba\u03b1\u03b9 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03b7\u03ba\u03ce\u03bd, ChatGPT prompts \u03b3\u03b9\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 Python, \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 REPL (Read Evaluate Print Loop) \u03c4\u03b7\u03c2 Python. \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 2 \u03c3\u03c5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd, unit tests \u03bc\u03b5 \u03c4\u03b7 \u03c3\u03c4\u03ac\u03bd\u03c4\u03b1\u03c1\u03bd\u03c4 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7 unittest, comprehensions, virtual environments (venv), \u03b5\u03be\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03ad\u03c2 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03b3\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03bf pip, unit tests \u03bc\u03b5 \u03c4\u03bf pytest. \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 3 \u03b1\u03c1\u03c7\u03b5\u03af\u03b1 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5, \u03ba\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 (regular expressions), \u03b1\u03c1\u03c7\u03b5\u03af\u03b1 XML, \u03bc\u03bf\u03c1\u03c6\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 (\u03c0.\u03c7. \u03bc\u03b5 \u03c4\u03bf black), \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7 imports \u03bc\u03b5 \u03c4\u03bf isort, docstrings. \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 4 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bc\u03b5 \u03c4\u03b7\u03bd Python, \u03bf\u03b9 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 <code>__init__</code>, <code>__str__</code>, <code>__repr__</code>, \u03c5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd, \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1, \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03b9\u03c2, \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03bc\u03b5 \u03c4\u03bf sys.argv \u03ba\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03bf argparse, logging. \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 5 \u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03ac \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03b1 \u03b4\u03b9\u03b5\u03c0\u03b1\u03c6\u03ae\u03c2 \u03bc\u03b5 \u03c4\u03bf tkinter, APIs, matplotlib, MVC (Model View Controller)"},{"location":"lab/#haskell","title":"\u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 (Haskell)","text":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf \u03a0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 1 \u0395\u03b3\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 Haskell \u03bc\u03b5 \u03c4\u03bf GHCup, toolchain (ghc, ghci, cabal), \u03bc\u03b7 \u03bc\u03b5\u03c4\u03b1\u03bb\u03bb\u03b1\u03be\u03b9\u03bc\u03cc\u03c4\u03b7\u03c4\u03b1 (immutability), \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2, \u03c4\u03cd\u03c0\u03bf\u03b9, \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae, \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03c3\u03b5\u03b9\u03c2 let (let bindings), \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03c3\u03b5\u03b9\u03c2 where (where bindings), \u03c6\u03c1\u03bf\u03c5\u03c1\u03bf\u03af (guards), \u03c4\u03b1\u03af\u03c1\u03b9\u03b1\u03c3\u03bc\u03b1 \u03c0\u03c1\u03bf\u03c4\u03cd\u03c0\u03c9\u03bd (pattern matching), \u03bb\u03af\u03c3\u03c4\u03b5\u03c2, \u03c0\u03b5\u03c1\u03b9\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 (comprehensions), \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 quicksort \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 2 \u039b\u03ac\u03bc\u03b4\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 (lambda functions), \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b1\u03bd\u03ce\u03c4\u03b5\u03c1\u03b7\u03c2 \u03c4\u03ac\u03be\u03b7\u03c2 (higher order functions), \u03bf\u03ba\u03bd\u03b7\u03c1\u03ae \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 (lazy evaluation), \u03ac\u03c0\u03b5\u03b9\u03c1\u03b5\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 (infinite lists), \u03bc\u03b5\u03c1\u03b9\u03ba\u03ae \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 (partial evaluation) \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 3 Unit tests \u03bc\u03b5 \u03c4\u03bf HUnit, \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1"},{"location":"lab/#prolog-cp-constraint-programming","title":"\u039b\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 (Prolog) \u03ba\u03b1\u03b9 CP (Constraint Programming)","text":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf \u03a0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 1 Prolog: \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03b1, \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2, \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1, \u03b5\u03bd\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7, \u03b1\u03bd\u03b1\u03b6\u03ae\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c0\u03cc\u03b4\u03b5\u03b9\u03be\u03b7\u03c2, \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae, \u03bb\u03af\u03c3\u03c4\u03b5\u03c2, \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ae \u03bc\u03b5 \u03c4\u03b7\u03bd Prolog: \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 2 Prolog: \u03bb\u03af\u03c3\u03c4\u03b5\u03c2, \u03b1\u03c0\u03bf\u03ba\u03bf\u03c0\u03ae \u03ba\u03b1\u03b9 \u03ac\u03c1\u03bd\u03b7\u03c3\u03b7 (cut and negation), \u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bc\u03b5 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 (CLP=Constraint Logic Programming) \u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 3 Prolog: unit tests"},{"location":"lab/#2024-2025","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03b9\u03c2 2024-2025","text":"<ul> <li>1\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (pdf)<ul> <li>\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7</li> </ul> </li> <li>2\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (pdf)</li> <li>3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (pdf)</li> <li>4\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (pdf)</li> </ul>"},{"location":"lab/#_2","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03af\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03c9\u03bd \u03b5\u03c4\u03ce\u03bd","text":""},{"location":"lab/#2023-2024","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03b9\u03c2 2023-2024","text":"<ul> <li>1\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (pdf)<ul> <li>\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7</li> </ul> </li> <li>2\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (pdf)<ul> <li>\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7</li> </ul> </li> <li>3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (pdf)<ul> <li>\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7</li> </ul> </li> <li>4\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03b1\u03ba\u03ae \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (pdf)<ul> <li>\u0395\u03bd\u03b4\u03b5\u03b9\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7</li> </ul> </li> </ul>"},{"location":"lab1_haskell/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 1 \u03c3\u03c4\u03b7 \u0397askell","text":""},{"location":"lab1_haskell/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H1E1 \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>volumeBox</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf\u03bd \u03cc\u03b3\u03ba\u03bf \u03b5\u03bd\u03cc\u03c2 \u03ba\u03bf\u03c5\u03c4\u03b9\u03bf\u03cd \u03b4\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03b7 \u03c9\u03c2 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf \u03c4\u03bf \u03c0\u03bb\u03ac\u03c4\u03bf\u03c2, \u03c4\u03bf \u03bc\u03ae\u03ba\u03bf\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03bf \u03cd\u03c8\u03bf\u03c2 \u03c4\u03bf\u03c5, \u03ba\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>volumeSquarePyramid</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf\u03bd \u03cc\u03b3\u03ba\u03bf \u03bc\u03b9\u03b1\u03c2 \u03c0\u03c5\u03c1\u03b1\u03bc\u03af\u03b4\u03b1\u03c2 \u03bc\u03b5 \u03c4\u03b5\u03c4\u03c1\u03b1\u03b3\u03c9\u03bd\u03b9\u03ba\u03ae \u03b2\u03ac\u03c3\u03b7 \u03b4\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03b7 \u03c4\u03bf \u03bc\u03ae\u03ba\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03c0\u03bb\u03b5\u03c5\u03c1\u03ac\u03c2 \u03c4\u03b7\u03c2 \u03b2\u03ac\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03c0\u03c5\u03c1\u03b1\u03bc\u03af\u03b4\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03bf \u03cd\u03c8\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03c0\u03c5\u03c1\u03b1\u03bc\u03af\u03b4\u03b1\u03c2. \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c3\u03b5 Haskell \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b6\u03b7\u03c4\u03ac \u03b1\u03c0\u03cc \u03c4\u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03c4\u03b9\u03c2 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03c0\u03c5\u03c1\u03b1\u03bc\u03af\u03b4\u03b1\u03c2 \u03bc\u03b5 \u03c4\u03b5\u03c4\u03c1\u03b1\u03b3\u03c9\u03bd\u03b9\u03ba\u03ae \u03b2\u03ac\u03c3\u03b7 (\u03bc\u03ae\u03ba\u03bf\u03c2 \u03c0\u03bb\u03b5\u03c5\u03c1\u03ac\u03c2 \u03b2\u03ac\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03cd\u03c8\u03bf\u03c2 \u03c3\u03b5 \u03bc\u03ad\u03c4\u03c1\u03b1) \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c0\u03cc\u03c3\u03b1 \u03c0\u03ad\u03c4\u03c1\u03b9\u03bd\u03b1 \u03c4\u03bf\u03cd\u03b2\u03bb\u03b1 \u03c7\u03c1\u03b5\u03b9\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03ba\u03b1\u03bb\u03c5\u03c6\u03b8\u03b5\u03af \u03bf \u03cc\u03b3\u03ba\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03c0\u03c5\u03c1\u03b1\u03bc\u03af\u03b4\u03b1\u03c2 \u03b1\u03bd \u03ba\u03ac\u03b8\u03b5 \u03c4\u03bf\u03cd\u03b2\u03bb\u03bf \u03ad\u03c7\u03b5\u03b9 \u03bc\u03ae\u03ba\u03bf\u03c2 19 \u03b5\u03ba\u03b1\u03c4\u03bf\u03c3\u03c4\u03ac, \u03c0\u03bb\u03ac\u03c4\u03bf\u03c2 9 \u03b5\u03ba\u03b1\u03c4\u03bf\u03c3\u03c4\u03ac \u03ba\u03b1\u03b9 \u03cd\u03c8\u03bf\u03c2 6 \u03b5\u03ba\u03b1\u03c4\u03bf\u03c3\u03c4\u03ac. \u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b9 \u03bf \u03cc\u03b3\u03ba\u03bf\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03c0\u03c5\u03c1\u03b1\u03bc\u03af\u03b4\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03c3\u03bf\u03c2 \u03bc\u03b5 \u03c4\u03bf \u03ad\u03bd\u03b1 \u03c4\u03c1\u03af\u03c4\u03bf \u03c4\u03bf\u03c5 \u03b3\u03b9\u03bd\u03bf\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c4\u03bf\u03c5 \u03b5\u03bc\u03b2\u03b1\u03b4\u03bf\u03cd \u03c4\u03b7\u03c2 \u03b2\u03ac\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03c0\u03c5\u03c1\u03b1\u03bc\u03af\u03b4\u03b1\u03c2 \u03b5\u03c0\u03af \u03c4\u03bf \u03cd\u03c8\u03bf\u03c2 \u03c4\u03b7\u03c2.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H1E1 <p>h1e1.hs<pre><code>import System.IO\n\nmain :: IO ()\nmain = do\n  putStr \"\u039c\u03ae\u03ba\u03bf\u03c2 \u03c0\u03bb\u03b5\u03c5\u03c1\u03ac\u03c2 \u03b2\u03ac\u03c3\u03b7\u03c2 \u03c3\u03b5 \u03bc\u03ad\u03c4\u03c1\u03b1: \"\n  hFlush stdout\n  input1 &lt;- getLine\n  putStr \"\u038e\u03c8\u03bf\u03c2 \u03c0\u03c5\u03c1\u03b1\u03bc\u03af\u03b4\u03b1\u03c2 \u03c3\u03b5 \u03bc\u03ad\u03c4\u03c1\u03b1: \"\n  hFlush stdout\n  input2 &lt;- getLine\n  let nb = read input1 :: Double\n      nh = read input2 :: Double\n      bricks = volumeSquarePyramid nb nh / volumeBox 0.19 0.09 0.06\n  putStrLn (\"\u0391\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c0\u03ad\u03c4\u03c1\u03b9\u03bd\u03c9\u03bd \u03c4\u03bf\u03cd\u03b2\u03bb\u03c9\u03bd = \" ++ show bricks)\n\nvolumeBox :: (Num a) =&gt; a -&gt; a -&gt; a -&gt; a\nvolumeBox w h d = w * h * d\n\nvolumeSquarePyramid :: (Fractional a) =&gt; a -&gt; a -&gt; a\nvolumeSquarePyramid b h = b * b * h / 3\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghc h1e1.hs\n[1 of 2] Compiling Main             ( h1e1.hs, h1e1.o )\n[2 of 2] Linking h1e1\n$ ./h1e1\n\u039c\u03ae\u03ba\u03bf\u03c2 \u03c0\u03bb\u03b5\u03c5\u03c1\u03ac\u03c2 \u03b2\u03ac\u03c3\u03b7\u03c2 \u03c3\u03b5 \u03bc\u03ad\u03c4\u03c1\u03b1: 10\n\u038e\u03c8\u03bf\u03c2 \u03c0\u03c5\u03c1\u03b1\u03bc\u03af\u03b4\u03b1\u03c2 \u03c3\u03b5 \u03bc\u03ad\u03c4\u03c1\u03b1: 5\n\u0391\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c0\u03ad\u03c4\u03c1\u03b9\u03bd\u03c9\u03bd \u03c4\u03bf\u03cd\u03b2\u03bb\u03c9\u03bd = 162443.14489928525\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H1E2 \u039f\u03b9 \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ad\u03c7\u03bf\u03c5\u03bd \u03ad\u03bd\u03b1\u03bd \u03c7\u03c1\u03c9\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03b4\u03b5\u03b9\u03ba\u03bd\u03cd\u03b5\u03b9 \u03c0\u03cc\u03c3\u03b1 Ohms \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03ba\u03ac\u03b8\u03b5 \u03bc\u03b9\u03b1. \u039f \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03c1\u03b5\u03b9\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03ba\u03ac\u03b8\u03b5 \u03bc\u03af\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03c8\u03b7\u03c6\u03af\u03bf (black=0, brown=1, red=2, orange=3, yellow=4, green=5, blue=6 violet=7, grey=8, white=9). \u0397 \u03c7\u03c9\u03c1\u03b7\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c3\u03b5 Ohms \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03b5\u03be\u03ae\u03c2. \u0397 \u03c0\u03c1\u03ce\u03c4\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03c4\u03bf \u03c0\u03bb\u03ad\u03bf\u03bd \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03cc \u03c8\u03b7\u03c6\u03af\u03bf, \u03b7 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae \u03c3\u03c4\u03bf \u03b1\u03bc\u03ad\u03c3\u03c9\u03c2 \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03bf \u03ba\u03b1\u03b9 \u03b7 \u03c4\u03c1\u03af\u03c4\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae \u03c3\u03b5 \u03c0\u03bf\u03c3\u03b1 \u03bc\u03b7\u03b4\u03b5\u03bd\u03b9\u03ba\u03ac \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03bf\u03cd\u03bd. \u0388\u03c4\u03c3\u03b9, \u03b3\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bf \u03c3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc\u03c2 violet, grey, red \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03b9 7800 Ohms. \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c3\u03b5 Haskell \u03c0\u03bf\u03c5 \u03b3\u03b9\u03b1 \u03bc\u03b9\u03b1 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03b1\u03c3\u03b7 \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03bd\u03b1 \u03b4\u03af\u03bd\u03b5\u03b9 \u03c4\u03c1\u03af\u03b1 \u03c7\u03c1\u03ce\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c4\u03b7 \u03c3\u03b5\u03b9\u03c1\u03ac \u03ba\u03b1\u03b9 \u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03c4\u03b1 Ohms \u03c4\u03b7\u03c2 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03b1\u03c3\u03b7\u03c2.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H1E2 <p>h1e2.hs<pre><code>import System.IO\n\nmain :: IO ()\nmain = do\n  putStrLn \"Enter resistor's color code : \"\n  hFlush stdout\n  band1 &lt;- getLine\n  band2 &lt;- getLine\n  band3 &lt;- getLine\n  let c = ohms band1 band2 band3\n  putStr (\"Ohms = \" ++ show c)\n\n-- \u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bc\u03b5 pattern matching\ncolorValue :: (Num a) =&gt; String -&gt; a\ncolorValue \"black\" = 0\ncolorValue \"brown\" = 1\ncolorValue \"red\" = 2\ncolorValue \"orange\" = 3\ncolorValue \"yellow\" = 4\ncolorValue \"green\" = 5\ncolorValue \"blue\" = 6\ncolorValue \"violet\" = 7\ncolorValue \"grey\" = 8\ncolorValue \"white\" = 9\ncolorValue _ = -1\n\nohms :: (Num a) =&gt; String -&gt; String -&gt; String -&gt; a\nohms band1 band2 band3 = (10 * colorValue band1 + colorValue band2) * 10 ^ colorValue band3\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghc h1e2.hs\n[1 of 2] Compiling Main             ( h1e2.hs, h1e2.o )\n[2 of 2] Linking h1e2\n$ ./h1e2\nEnter resistor's color code :\nviolet\ngrey\nred\nOhms = 7800\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H1E3 \u039a\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>inRange</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03c4\u03c1\u03af\u03b1 \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 <code>min</code>, <code>max</code> \u03ba\u03b1\u03b9 <code>x</code> (\u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2) \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 True \u03ae False \u03b1\u03bd\u03ac\u03bb\u03bf\u03b3\u03b1 \u03bc\u03b5 \u03c4\u03bf \u03b1\u03bd \u03c4\u03bf <code>x</code> \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 <code>[min,max]</code> \u03ae \u03cc\u03c7\u03b9. \u039a\u03b1\u03bb\u03ad\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c0\u03cc \u03ba\u03cd\u03c1\u03b9\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03b3\u03b9\u03b1 3 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b4\u03af\u03bd\u03b5\u03b9 \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03ba\u03b1\u03c4\u03ac\u03bb\u03bb\u03b7\u03bb\u03b1 \u03bc\u03b7\u03bd\u03cd\u03bc\u03b1\u03c4\u03b1. \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 3 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03b5\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c4\u03b7\u03c2 <code>inRange</code> \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 let bindings, where \u03ba\u03b1\u03b9 guards.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H1E3 <p>h1e3.hs<pre><code>import System.IO\n\nmain :: IO ()\nmain = do\n  putStr \"Enter min : \"\n  hFlush stdout\n  input1 &lt;- getLine\n  putStr \"Enter max : \"\n  hFlush stdout\n  input2 &lt;- getLine\n  putStr \"Enter value : \"\n  hFlush stdout\n  input3 &lt;- getLine\n  let min = read input1 :: Int\n  let max = read input2 :: Int\n  let x = read input3 :: Int\n  putStrLn \"\u0391' \u03a4\u03c1\u03cc\u03c0\u03bf\u03c2\"\n  if inRange min max x\n    then putStrLn \"YES\"\n    else putStrLn \"NO\"\n  putStrLn \"\u0392' \u03a4\u03c1\u03cc\u03c0\u03bf\u03c2\"\n  if inRange' min max x\n    then putStrLn \"YES\"\n    else putStrLn \"NO\"\n  putStrLn \"\u0393' \u03a4\u03c1\u03cc\u03c0\u03bf\u03c2\"\n  if inRange'' min max x\n    then putStrLn \"YES\"\n    else putStrLn \"NO\"\n  putStrLn \"\u0394' \u03a4\u03c1\u03cc\u03c0\u03bf\u03c2\"\n  if inRange''' min max x\n    then putStrLn \"YES\"\n    else putStrLn \"NO\"\n\ninRange :: (Ord a) =&gt; a -&gt; a -&gt; a -&gt; Bool\ninRange min max x = min &lt;= x &amp;&amp; x &lt;= max\n\ninRange' :: (Ord p) =&gt; p -&gt; p -&gt; p -&gt; Bool\ninRange' min max x =\n  let iub = x &lt;= max\n      ilb = x &gt;= min\n   in ilb &amp;&amp; iub\n\ninRange'' :: (Ord p) =&gt; p -&gt; p -&gt; p -&gt; Bool\ninRange'' min max x = ilb &amp;&amp; iub\n  where\n    ilb = x &gt;= min\n    iub = x &lt;= max\n\ninRange''' :: (Ord a) =&gt; a -&gt; a -&gt; a -&gt; Bool\ninRange''' min max x\n  | x &lt; min = False\n  | x &gt; max = False\n  | otherwise = True\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghc h1e3.hs\n[1 of 2] Compiling Main             ( h1e3.hs, h1e3.o )\n[2 of 2] Linking h1e3\n$ ghc h1e3\nEnter min : 10\nEnter max : 30\nEnter value : 20\n\u0391' \u03a4\u03c1\u03cc\u03c0\u03bf\u03c2\nYES\n\u0392' \u03a4\u03c1\u03cc\u03c0\u03bf\u03c2\nYES\n\u0393' \u03a4\u03c1\u03cc\u03c0\u03bf\u03c2\nYES\n\u0394' \u03a4\u03c1\u03cc\u03c0\u03bf\u03c2\nYES\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H1E4 \u03a3\u03c5\u03bc\u03c0\u03bb\u03b7\u03c1\u03ce\u03c3\u03c4\u03b5 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>h1e4i.hs</code> \u03c4\u03bf\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c0\u03bf\u03c5 \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b5\u03af \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c4\u03b9\u03bc\u03ce\u03bd \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03bf\u03bd \u03b1\u03bb\u03b3\u03cc\u03c1\u03b9\u03b8\u03bc\u03bf quicksort.</p> <pre><code>quicksort :: (Ord a) =&gt; [a] -&gt; [a]\nquicksort [] = []\nquicksort (x:xs) =\n  let smallerSorted = quicksort [a | a &lt;- xs, a &lt;= x]\n      biggerSorted = quicksort [a | a &lt;- xs, a &gt; x]\n  in  smallerSorted ++ [x] ++ biggerSorted\n</code></pre> <p>\u03b1) \u03a6\u03bf\u03c1\u03c4\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf <code>h1e4i.hs</code> \u03c3\u03c4\u03bf ghci \u03ba\u03b1\u03b9 \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ce\u03bd:</p> <pre><code>[9, 7, 3, 2, 1, 5, 6, 0, 4, 8]\n[3.142, 2.718, 1.414, 1.618]\n[\"Ioannina\", \"Preveza\", \"Igoumenitsa\", \"Arta\"]\n[False, True, False, True]\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H1E4 (\u03b1' \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1) <pre><code>$ ghci h1e4i.hs\nGHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help\n[1 of 2] Compiling Main             ( h1e4i.hs, interpreted )\nOk, one module loaded.\nghci&gt; quicksort [9, 7, 3, 2, 1, 5, 6, 0, 4, 8]\n[0,1,2,3,4,5,6,7,8,9]\nghci&gt; quicksort [3.142, 2.718, 1.414, 1.618]\n[1.414,1.618,2.718,3.142]\nghci&gt; quicksort [\"Ioannina\", \"Preveza\", \"Igoumenitsa\", \"Arta\"]\n[\"Arta\",\"Igoumenitsa\",\"Ioannina\",\"Preveza\"]\nghci&gt; quicksort [False, True, False, True]\n[False,False,True,True]\nghci&gt; :module Data.List\nghci&gt; sort [9, 7, 3, 2, 1, 5, 6, 0, 4, 8]\n[0,1,2,3,4,5,6,7,8,9]\nghci&gt; :q\nLeaving GHCi.\n</code></pre> <p>\u03b2) \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf <code>h1e4.hs</code> \u03c0\u03bf\u03c5 \u03cc\u03c4\u03b1\u03bd \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03b5\u03af \u03bc\u03b5 \u03c4\u03bf ghc \u03bd\u03b1 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9 \u03b5\u03ba\u03c4\u03b5\u03bb\u03ad\u03c3\u03b9\u03bc\u03bf \u03c0\u03bf\u03c5 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03ae \u03c4\u03bf\u03c5 \u03bd\u03b1 \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b5\u03af \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H1E4 (\u03b2' \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 quicksort) <p>h1e4.hs<pre><code>quicksort :: (Ord a) =&gt; [a] -&gt; [a]\nquicksort [] = []\nquicksort (x : xs) =\n  let smallerSorted = quicksort [a | a &lt;- xs, a &lt;= x]\n      biggerSorted = quicksort [a | a &lt;- xs, a &gt; x]\n   in smallerSorted ++ [x] ++ biggerSorted\n\nmain :: IO ()\nmain = do\n  let l1 = [9, 7, 3, 2, 1, 5, 6, 0, 4, 8]\n      l2 = [3.142, 2.718, 1.414, 1.618]\n      l3 = [\"Ioannina\", \"Preveza\", \"Igoumenitsa\", \"Arta\"]\n      l4 = [False, True, False, True]\n  print (quicksort l1)\n  print (quicksort l2)\n  print (quicksort l3)\n  print (quicksort l4)\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghc h1e4.hs\n[1 of 2] Compiling Main             ( h1e4.hs, h1e4.o )\n[2 of 2] Linking h1e4\n$ ./h1e4\n[0,1,2,3,4,5,6,7,8,9]\n[1.414,1.618,2.718,3.142]\n[\"Arta\",\"Igoumenitsa\",\"Ioannina\",\"Preveza\"]\n[False,False,True,True]\n</code></pre></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H1E4 (\u03b2' \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 \u03bc\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7\u03c2 sort) <p>h1e4sort.hs<pre><code>import Data.List (sort)\n\nmain :: IO ()\nmain = do\n  let l1 = [9, 7, 3, 2, 1, 5, 6, 0, 4, 8]\n      l2 = [3.142, 2.718, 1.414, 1.618]\n      l3 = [\"Ioannina\", \"Preveza\", \"Igoumenitsa\", \"Arta\"]\n      l4 = [False, True, False, True]\n  print (sort l1)\n  print (sort l2)\n  print (sort l3)\n  print (sort l4)\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghc h1e4sort.hs\n[1 of 2] Compiling Main             ( h1e4sort.hs, h1e4sort.o )\n[2 of 2] Linking h1e4sort\n$ ./h1e4sort\n[0,1,2,3,4,5,6,7,8,9]\n[1.414,1.618,2.718,3.142]\n[\"Arta\",\"Igoumenitsa\",\"Ioannina\",\"Preveza\"]\n[False,False,True,True]\n</code></pre></p>"},{"location":"lab1_prolog/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 1 \u03c3\u03c4\u03b7\u03bd Prolog","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03b1<sup>1</sup>, \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2<sup>1</sup>, \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1<sup>1</sup>, \u03b5\u03bd\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7<sup>2</sup>, \u03b1\u03bd\u03b1\u03b6\u03ae\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c0\u03cc\u03b4\u03b5\u03b9\u03be\u03b7\u03c2<sup>2</sup>, \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae<sup>3</sup>, \u03bb\u03af\u03c3\u03c4\u03b5\u03c2<sup>4</sup>, \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ae \u03bc\u03b5 \u03c4\u03b7\u03bd Prolog<sup>5</sup>:  </p>"},{"location":"lab1_prolog/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO1E1 \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03b2\u03ac\u03c3\u03b7 \u03b3\u03bd\u03ce\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03c4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03ba\u03ac\u03c4\u03c9 \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03b1 (facts):</p> <ol> <li>\u039f \u03a3\u03c9\u03ba\u03c1\u03ac\u03c4\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c6\u03b9\u03bb\u03cc\u03c3\u03bf\u03c6\u03bf\u03c2.</li> <li>\u039f \u03a0\u03bb\u03ac\u03c4\u03c9\u03bd\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c6\u03b9\u03bb\u03cc\u03c3\u03bf\u03c6\u03bf\u03c2.</li> <li>\u039f \u03a0\u03b5\u03c1\u03b9\u03ba\u03bb\u03ae\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03b9\u03c4\u03b9\u03ba\u03cc\u03c2.</li> </ol> <p>\u03a0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03c4\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03b5\u03be\u03ae\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 (rules):</p> <ol> <li>\u039f\u03b9 \u03c6\u03b9\u03bb\u03cc\u03c3\u03bf\u03c6\u03bf\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ac\u03bd\u03b8\u03c1\u03c9\u03c0\u03bf\u03b9.</li> <li>\u039f\u03b9 \u03c0\u03bf\u03bb\u03b9\u03c4\u03b9\u03ba\u03bf\u03af \u03b5\u03af\u03bd\u03b1\u03b9 \u03ac\u03bd\u03b8\u03c1\u03c9\u03c0\u03bf\u03b9.</li> <li>\u039f\u03b9 \u03ac\u03bd\u03b8\u03c1\u03c9\u03c0\u03bf\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b8\u03b7\u03bb\u03b1\u03c3\u03c4\u03b9\u03ba\u03ac.</li> <li>\u03a4\u03b1 \u03b8\u03b7\u03bb\u03b1\u03c3\u03c4\u03b9\u03ba\u03ac \u03b5\u03af\u03bd\u03b1\u03b9 \u03b8\u03bd\u03b7\u03c4\u03ac.</li> </ol> <p>\u039a\u03ac\u03bd\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03b5\u03be\u03ae\u03c2 \u03b5\u03c1\u03c9\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 (queries):</p> <ol> <li>\u0395\u03af\u03bd\u03b1\u03b9 \u03bf \u03a3\u03c9\u03ba\u03c1\u03ac\u03c4\u03b7\u03c2 \u03c6\u03b9\u03bb\u03cc\u03c3\u03bf\u03c6\u03bf\u03c2;</li> <li>\u0395\u03af\u03bd\u03b1\u03b9 \u03bf \u03a0\u03b5\u03c1\u03b9\u03ba\u03bb\u03ae\u03c2 \u03c6\u03b9\u03bb\u03cc\u03c3\u03bf\u03c6\u03bf\u03c2;</li> <li>\u0395\u03af\u03bd\u03b1\u03b9 \u03bf \u03a3\u03c9\u03ba\u03c1\u03ac\u03c4\u03b7\u03c2 \u03b8\u03b7\u03bb\u03b1\u03c3\u03c4\u03b9\u03ba\u03cc;</li> <li>\u0395\u03af\u03bd\u03b1\u03b9 \u03bf \u03a0\u03b5\u03c1\u03b9\u03ba\u03bb\u03ae\u03c2 \u03b8\u03bd\u03b7\u03c4\u03cc\u03c2;</li> <li>\u03a0\u03bf\u03b9\u03bf\u03b9 \u03bf\u03bd\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b8\u03bd\u03b7\u03c4\u03ad\u03c2 \u03c3\u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b3\u03bd\u03ce\u03c3\u03b7\u03c2;</li> </ol> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO1E1 pro1e1.pl<pre><code>philosopher(socrates).\nphilosopher(plato).\npolitician(pericles).\n\nhuman(X):- philosopher(X).\nhuman(X):- politician(X).\nmammal(X):- human(X).\nmortal(X):- mammal(X).\n</code></pre> <p>\u0392\u03ac\u03c3\u03b7 \u03b3\u03bd\u03ce\u03c3\u03b7\u03c2:</p> <ul> <li>7 clauses (\u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2)</li> <li>3 facts (\u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03b1)</li> <li>4 rules (\u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2)</li> <li>5 predicates (\u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1) : philosopher/1, politician/1, human/1, mammal/1, mortal/1 </li> <li>3 atomic terms (\u03b1\u03c4\u03bf\u03bc\u03b9\u03ba\u03bf\u03af \u03cc\u03c1\u03bf\u03b9) : socrates, plato, pericles</li> <li>1 variable (\u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae): X</li> </ul> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro1e1.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>$ swipl -l pro1e1.pl\n</code></pre></p> <p>\u0395\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro1e1.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>$ swipl\n?- consult('pro1e1.pl').\n</code></pre></p> <p>\u0388\u03bd\u03b1\u03c2 \u03b1\u03ba\u03cc\u03bc\u03b1 \u03b5\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro1e1.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>$ swipl\n?- ['pro1e1.pl'].\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 1: \u0395\u03af\u03bd\u03b1\u03b9 \u03bf \u03a3\u03c9\u03ba\u03c1\u03ac\u03c4\u03b7\u03c2 \u03c6\u03b9\u03bb\u03cc\u03c3\u03bf\u03c6\u03bf\u03c2; <pre><code>?- philosopher(socrates).\ntrue.\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 2: \u0395\u03af\u03bd\u03b1\u03b9 \u03bf \u03a0\u03b5\u03c1\u03b9\u03ba\u03bb\u03ae\u03c2 \u03c6\u03b9\u03bb\u03cc\u03c3\u03bf\u03c6\u03bf\u03c2; <pre><code>?- philosopher(pericles).\nfalse.\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 3: \u0395\u03af\u03bd\u03b1\u03b9 \u03bf \u03a3\u03c9\u03ba\u03c1\u03ac\u03c4\u03b7\u03c2 \u03b8\u03b7\u03bb\u03b1\u03c3\u03c4\u03b9\u03ba\u03cc; <pre><code>?- mammal(socrates).      \ntrue.\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 4: \u0395\u03af\u03bd\u03b1\u03b9 \u03bf \u03a0\u03b5\u03c1\u03b9\u03ba\u03bb\u03ae\u03c2 \u03b8\u03bd\u03b7\u03c4\u03cc\u03c2; <pre><code>?- mortal(pericles). \ntrue.\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 5: \u03a0\u03bf\u03b9\u03bf\u03b9 \u03bf\u03bd\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b8\u03bd\u03b7\u03c4\u03ad\u03c2 \u03c3\u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b3\u03bd\u03ce\u03c3\u03b7\u03c2; <pre><code>?- mortal(X).             \nX = socrates ;\nX = plato ;\nX = pericles.\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO1E2 \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>half_adder/4</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03ad\u03bd\u03b1 \u03ba\u03cd\u03ba\u03bb\u03c9\u03bc\u03b1 \u03b7\u03bc\u03b9\u03b1\u03b8\u03c1\u03bf\u03b9\u03c3\u03c4\u03ae. \u0394\u03ce\u03c3\u03c4\u03b5 2 \u03b5\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b5\u03b9\u03c2 \u03bc\u03b5 \u03b2\u03ac\u03c3\u03b7 \u03c4\u03b9\u03c2 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b5\u03c2.</p> <p></p> <p>\u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bf \u03c0\u03af\u03bd\u03b1\u03ba\u03b1\u03c2 \u03b1\u03bb\u03b7\u03b8\u03b5\u03af\u03b1\u03c2 \u03c4\u03bf\u03c5 \u03b7\u03bc\u03b9\u03b1\u03b8\u03c1\u03bf\u03b9\u03c3\u03c4\u03ae:</p> X Y C S 0 0 0 0 0 1 0 1 1 0 0 1 1 1 1 0 <p>\u03a4\u03b1 <code>X</code>, <code>Y</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03b1 bits \u03b5\u03b9\u03c3\u03cc\u03b4\u03bf\u03c5, <code>C</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf bit \u03ba\u03c1\u03b1\u03c4\u03bf\u03c5\u03bc\u03ad\u03bd\u03bf\u03c5 \u03ba\u03b1\u03b9 <code>S</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf bit \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2.</p> <p>\u03a5\u03c0\u03bf\u03b2\u03ac\u03bb\u03b5\u03c4\u03b5 \u03c4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1:</p> <ol> <li>\u03a0\u03bf\u03b9\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03b9 \u03c0\u03bf\u03c5 \u03b4\u03af\u03bd\u03bf\u03c5\u03bd \u03c3\u03c4\u03bf bit \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 1;</li> <li>\u03a4\u03b9 \u03c4\u03b9\u03bc\u03ae \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03bf bit \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b1\u03bd \u03c4\u03bf bit \u03ba\u03c1\u03b1\u03c4\u03bf\u03c5\u03bc\u03ad\u03bd\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 1;</li> </ol> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO1E2 - \u03b1' \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 pro1e2.pl<pre><code>xor(0, 0, 0).\nxor(0, 1, 1).\nxor(1, 0, 1).\nxor(1, 1, 0).\n\nand(0, 0, 0).\nand(0, 1, 0).\nand(1, 0, 0).\nand(1, 1, 1).\n\nhalf_adder(X,Y,C,S):-\n    xor(X, Y, S),\n    and(X, Y, C).\n</code></pre> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro1e2.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>$ swipl -l pro1e2.pl\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03c3\u03b7 1: \u03a0\u03bf\u03b9\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03b9 \u03c0\u03bf\u03c5 \u03b4\u03af\u03bd\u03bf\u03c5\u03bd \u03c3\u03c4\u03bf bit \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 1; <pre><code>?- half_adder(\u03a7,\u03a5,_,1).\n\u03a7 = 0,\n\u03a5 = 1 ;\n\u03a7 = 1,\n\u03a5 = 0 ;\nfalse.\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03c3\u03b7 2: \u03a4\u03b9 \u03c4\u03b9\u03bc\u03ae \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03bf bit \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b1\u03bd \u03c4\u03bf bit \u03ba\u03c1\u03b1\u03c4\u03bf\u03c5\u03bc\u03ad\u03bd\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 1; <pre><code>?- half_adder(_,_,1,S). \nS = 0.\n</code></pre></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO1E2 - \u03b2' \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 pro1e2_alt.pl<pre><code>half_adder(0,0,0,0).\nhalf_adder(0,1,0,1).\nhalf_adder(1,0,0,1).\nhalf_adder(1,1,1,0).\n</code></pre> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro1e2_alt.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>$ swipl -l pro1e2_alt.pl\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03c3\u03b7 1: \u03a0\u03bf\u03b9\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf\u03b9 \u03c0\u03bf\u03c5 \u03b4\u03af\u03bd\u03bf\u03c5\u03bd \u03c3\u03c4\u03bf bit \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 1; <pre><code>?- half_adder(\u03a7,\u03a5,_,1).\n\u03a7 = 0,\n\u03a5 = 1 ;\n\u03a7 = 1,\n\u03a5 = 0 ;\nfalse.\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03c3\u03b7 2: \u03a4\u03b9 \u03c4\u03b9\u03bc\u03ae \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03bf bit \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b1\u03bd \u03c4\u03bf bit \u03ba\u03c1\u03b1\u03c4\u03bf\u03c5\u03bc\u03ad\u03bd\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 1; <pre><code>?- half_adder(_,_,1,S). \nS = 0.\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO1E3 \u0388\u03c3\u03c4\u03c9 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03b3\u03b5\u03bd\u03b5\u03b1\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf:</p> <pre><code>    a\n\n   / \\\n\n  b   c\n\n / \\  |\n\nd   e f\n</code></pre> <p>\u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03ac\u03c6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2: <pre><code>parent(a,b).\nparent(a,c).\nparent(b,d).\nparent(b,e). \nparent(c,f). \n</code></pre> \u03a4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>parent(X,Y)</code> \u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03cd\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03cc\u03c4\u03b9 \u03bf <code>X</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03bf\u03bd\u03ad\u03b1\u03c2 \u03c4\u03bf\u03c5 <code>\u03a5</code>. </p> <p>\u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1:</p> <ul> <li><code>sibling(X,Y)</code> \u0399\u03c3\u03c7\u03cd\u03b5\u03b9 \u03cc\u03c4\u03b1\u03bd \u03bf <code>\u03a7</code> \u03ba\u03b1\u03b9 \u03bf <code>\u03a5</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03b4\u03ad\u03c1\u03c6\u03b9\u03b1.</li> <li><code>cousin(X,Y)</code> \u0399\u03c3\u03c7\u03cd\u03b5\u03b9 \u03cc\u03c4\u03b1\u03bd \u03bf <code>\u03a7</code> \u03ba\u03b1\u03b9 \u03bf <code>\u03a5</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03be\u03b1\u03b4\u03ad\u03c1\u03c6\u03b9\u03b1.</li> <li><code>grandchild(X,Y)</code> \u0399\u03c3\u03c7\u03cd\u03b5\u03b9 \u03cc\u03c4\u03b1\u03bd \u03bf <code>\u03a7</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03b3\u03b3\u03bf\u03bd\u03cc\u03c2 \u03c4\u03bf\u03c5 <code>\u03a5</code>.</li> <li><code>descendent(X,Y)</code> \u0399\u03c3\u03c7\u03cd\u03b5\u03b9 \u03cc\u03c4\u03b1\u03bd \u03bf <code>\u03a7</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c0\u03cc\u03b3\u03bf\u03bd\u03bf\u03c2 \u03c4\u03bf\u03c5 <code>\u03a5</code>.</li> </ul> <p>\u03a5\u03c0\u03bf\u03b2\u03ac\u03bb\u03b5\u03c4\u03b5 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03bf\u03c5\u03bd: </p> <ol> <li>\u03a4\u03b1 \u03b6\u03b5\u03cd\u03b3\u03b7 \u03c4\u03c9\u03bd \u03b1\u03b4\u03b5\u03c1\u03c6\u03ce\u03bd.</li> <li>\u03a4\u03b1 \u03b6\u03b5\u03cd\u03b3\u03b7 \u03c4\u03c9\u03bd \u03be\u03b1\u03b4\u03b5\u03c1\u03c6\u03b9\u03ce\u03bd.</li> <li>\u03a4\u03b1 \u03b5\u03b3\u03b3\u03cc\u03bd\u03b9\u03b1 \u03c4\u03bf\u03c5 <code>a</code>.  </li> <li>\u03a4\u03bf\u03c5\u03c2 \u03b1\u03c0\u03bf\u03b3\u03cc\u03bd\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5 <code>a</code>.</li> </ol> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO1E3 pro1e3.pl<pre><code>parent(a,b).\nparent(a,c). \nparent(b,d). \nparent(b,e).  \nparent(c,f).  \n\nsibling(X,Y) :- parent(Z,X), parent(Z,Y), not(X=Y).\ncousin(X,Y) :- parent(Z,X), parent(W,Y), sibling(Z,W). \ngrandchild(X,Y) :- parent(Z,X), parent(Y,Z).\ndescendent(X,Y) :- parent(Y,X).\ndescendent(X,Y) :- parent(Z,X), descendent(Z,Y).\n</code></pre> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro1e3.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>$ swipl -l pro1e3.pl\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03c3\u03b7 1: \u0395\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b6\u03b5\u03cd\u03b3\u03b7 \u03c4\u03c9\u03bd \u03b1\u03b4\u03b5\u03c1\u03c6\u03b9\u03ce\u03bd. <pre><code>?- sibling(X,Y).\nX = b,\nY = c ;\nX = c,\nY = b ;\nX = d,\nY = e ;\nX = e,\nY = d ;\nfalse.\n</code></pre> \u03ae  <pre><code>?- sibling(X,Y), format('~s ~s\\n', [X,Y]), fail. \nb c\nc b\nd e\ne d\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03c3\u03b7 2: \u0395\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b6\u03b5\u03cd\u03b3\u03b7 \u03c4\u03c9\u03bd \u03be\u03b1\u03b4\u03b5\u03c1\u03c6\u03b9\u03ce\u03bd. <pre><code>?- cousin(X,Y).\nX = d,\nY = f ;\nX = e,\nY = f ;\nX = f,\nY = d ;\nX = f,\nY = e ;\nfalse.\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03c3\u03b7 3: \u0395\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b5\u03b3\u03b3\u03cc\u03bd\u03b9\u03b1 \u03c4\u03bf\u03c5 a. <pre><code>?- grandchild(X,a). \nX = d ;\nX = e ;\nX = f.\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03c3\u03b7 4: \u0395\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03b1\u03c0\u03bf\u03b3\u03cc\u03bd\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5 a. <pre><code>?- descendent(X,a).\nX = b ;\nX = c ;\nX = d ;\nX = e ;\nX = f ;\nfalse.\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO1E4 \u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bf \u03bf\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 <code>factorial/2</code> \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03cc \u03b5\u03bd\u03cc\u03c2 \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03bf\u03c5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd. </p> factorial.pl<pre><code>factorial(0,1).\nfactorial(N,F) :-\n    N&gt;0,\n    N1 is N-1,\n    factorial(N1,F1),\n    F is F1*N.\n</code></pre> <p>\u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>doublefactorial/2</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03b4\u03b9\u03c0\u03bb\u03cc \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03cc \u03b5\u03bd\u03cc\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd <code>n</code>. \u03a4\u03bf \u03b4\u03b9\u03c0\u03bb\u03cc \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03cc \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03c4\u03bf \u03b3\u03b9\u03bd\u03cc\u03bc\u03b5\u03bd\u03bf \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03c9\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf 1 \u03bc\u03ad\u03c7\u03c1\u03b9 \u03ba\u03b1\u03b9 \u03c4\u03bf\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc <code>n</code> \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03af\u03c4\u03b5 \u03ac\u03c1\u03c4\u03b9\u03bf\u03b9 \u03b5\u03af\u03c4\u03b5 \u03c0\u03b5\u03c1\u03b9\u03c4\u03c4\u03bf\u03af, \u03b1\u03bd\u03ac\u03bb\u03bf\u03b3\u03b1 \u03bc\u03b5 \u03c4\u03bf \u03b5\u03ac\u03bd \u03c4\u03bf <code>n</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03ac\u03c1\u03c4\u03b9\u03bf \u03ae \u03c0\u03b5\u03c1\u03b9\u03c4\u03c4\u03cc \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b1 (\u03c0.\u03c7. \u03c4\u03bf \u03b4\u03b9\u03c0\u03bb\u03cc \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03cc \u03c4\u03bf\u03c5 7 \u03b5\u03af\u03bd\u03b1\u03b9 1 * 3 * 5 * 7 = 105).</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO1E4 pro1e4.pl<pre><code>doublefactorial(0,1).\ndoublefactorial(1,1).\ndoublefactorial(N,F) :-\n    N&gt;0,\n    N1 is N-2,\n    doublefactorial(N1,F1),\n    F is F1*N.\n</code></pre> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro1e4.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>$ swipl -l pro1e4.pl\n</code></pre></p> <p>\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 \u03bc\u03b5 \u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>doublefactorial/2</code>:   <pre><code>?- doublefactorial(7,F).\nF = 105.\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO1E5 \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c4\u03b1 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1 <code>my_length/2</code>, <code>my_element/2</code>, <code>my_sum_list/2</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03af\u03b4\u03b9\u03b1 \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03c6\u03bf\u03c1\u03ac \u03bc\u03b5 \u03c4\u03b1 standard \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 <code>length/2</code>, <code>element/2</code> \u03ba\u03b1\u03b9 <code>sum_list/2</code> \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b1. \u0391\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1  <code>pro1e5.pl</code>. \u03a6\u03bf\u03c1\u03c4\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03ba\u03b1\u03b9 \u03b4\u03bf\u03ba\u03b9\u03bc\u03ac\u03c3\u03c4\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03b4\u03b5\u03b9\u03ba\u03bd\u03cd\u03bf\u03c5\u03bd \u03c4\u03b7 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03c4\u03c9\u03bd \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd. </p> <p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03c4\u03b5 \u03cc\u03c4\u03b9 \u03bc\u03b5 \u03c4\u03bf <code>help(&lt;\u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1&gt;).</code> \u03bc\u03ad\u03c3\u03b1 \u03b1\u03c0\u03cc \u03c4\u03bf prompt \u03c4\u03b7\u03c2 Prolog (<code>?-</code>) \u03bc\u03c0\u03bf\u03c1\u03b5\u03af\u03c4\u03b5 \u03bd\u03b1 \u03bb\u03ac\u03b2\u03b5\u03c4\u03b5 \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b5\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1:</p> <pre><code>?- help(length).\n                                                                          Availability: built-in\n\nlength(?List, ?Length)                                                                     [ISO]\n    True if Length represents the number of elements in List. This predicate is a  true relation\n    and can be used to find the length of a list or produce a list (holding variables) of length\n    Length. The predicate is non-deterministic, producing lists of increasing length if  List is\n    a partial list and Length is a variable.\n\n        ?- length(List,4).\n        List = [_27940,_27946,_27952,_27958].\n\n        ?- length(List,Length).\n        List = [], Length = 0 ;\n        List = [_24698], Length = 1 ;\n        List = [_24698,_25826], Length = 2\n        ...\n\n    It raises errors if Length is bound to a non-integer  or a  negative integer  or if  List is\n    neither a list nor a partial list. This error condition includes cyclic lists:\n\n        ?- A=[1,2,3|A], length(A,L).\n        ERROR: Type error: `list' expected ...\n\n    Covering an edge case, the predicate fails if the tail of List is equivalent to Length:\n\n        ?- List=[1,2,3|Length],length(List,Length).\n        false.\n\n        ?- length(Length,Length).\n        false.\n(END)\n</code></pre> <p>\u039c\u03b5 \u03c4\u03bf \u03c0\u03bb\u03ae\u03ba\u03c4\u03c1\u03bf <code>q</code> \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03c4\u03b5 \u03c3\u03c4\u03bf prompt \u03c4\u03b7\u03c2 Prolog. </p> <p>\u0395\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ac, \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b5\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03b2\u03c1\u03b5\u03b8\u03bf\u03cd\u03bd \u03c3\u03c4\u03bf https://www.swi-prolog.org/pldoc/man?section=predsummary. </p> <p>\u0395\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf\u03bd \u03c1\u03cc\u03bb\u03bf \u03c4\u03c9\u03bd \u03c3\u03c5\u03bc\u03b2\u03cc\u03bb\u03c9\u03bd <code>?</code>, <code>+</code>, <code>-</code>  \u03c0\u03bf\u03c5 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c0\u03c1\u03b9\u03bd \u03c4\u03b1 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03c4\u03c9\u03bd \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03c4\u03c9\u03bd \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03c3\u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ad\u03c2 \u03c4\u03bf\u03c5\u03c2. </p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO1E5 pro1e5.pl<pre><code>my_length([], 0).\nmy_length([_ | T], L) :-\n        my_length(T, TailLength),\n        L is TailLength + 1.\n\nmy_member(X, [X | _]).\nmy_member(X, [_ | T]) :- \n        my_member(X, T).\n\nmy_sum_list([], 0).\nmy_sum_list([H | T], Sum) :-\n        my_sum_list(T, SumTail),\n        Sum is H + SumTail.\n</code></pre> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro1e5.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>$ swipl -l pro1e5.pl\n</code></pre></p> <p>\u0395\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03b1 \u03bd\u03ad\u03b1 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1 (<code>my_length/2</code>, <code>my_element/2</code>, <code>my_sum_list/2</code>) \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03c3\u03c4\u03b7\u03ba\u03b1\u03bd: <pre><code>?- my_length([1,2,3,4], L).\nL = 4.\n\n?- my_member(2, [1,2,3]).\ntrue.    \n?- my_member(4, [1,2,3]).\nfalse.    \n?- my_member(X, [1,2,3]).\nX = 1 ;\nX = 2 ;\nX = 3 ;\nfalse.\n?- my_member(1, L).\nL = [1|_] ;\nL = [_, 1|_] ;\nL = [_, _, 1|_] ;\nL = [_, _, _, 1|_] ;\nL = [_, _, _, _, 1|_] .\n\n?- my_sum_list([1,2,3,4,5], S).\nS = 15.\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO1E6 \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>binary_to_decimal(ListOfBits, Decimal)</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03bc\u03b5\u03c4\u03b1\u03c4\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03b1\u03c0\u03cc \u03b4\u03c5\u03b1\u03b4\u03b9\u03ba\u03ac \u03c8\u03b7\u03c6\u03af\u03b1 \u03c3\u03c4\u03bf\u03bd \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03bf \u03b4\u03b5\u03ba\u03b1\u03b4\u03b9\u03ba\u03cc \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1:</p> <pre><code>? binary_to_decimal([1,0,0,1], \u03a7).\n\u03a7 = 9.\n\n? binary_to_decimal([1,1,0,1,0], \u03a7).\n\u03a7 = 26.\n</code></pre> <p>\u039c\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c3\u03b1\u03c2 \u03c6\u03b1\u03bd\u03b5\u03af \u03c7\u03c1\u03ae\u03c3\u03b9\u03bc\u03bf \u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>reverse/2</code> \u03c0\u03bf\u03c5 \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO1E6 pro1e6.pl<pre><code>binary_to_decimal(ListOfBits, Decimal) :-\n    reverse(ListOfBits, ListOfBitsR),\n    binary_reversed_to_decimal(ListOfBitsR, Decimal).\n\nbinary_reversed_to_decimal([], 0).\nbinary_reversed_to_decimal([0 | T], Decimal):-\n    binary_reversed_to_decimal(T, Decimal2),\n    Decimal is 2 * Decimal2.\n\nbinary_reversed_to_decimal([1 | T], Decimal):-\n    binary_reversed_to_decimal(T, Decimal2),\n    Decimal is 2 * Decimal2 + 1.\n</code></pre> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro1e6.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03b5\u03c1\u03c9\u03c4\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd: <pre><code>$ swipl -l pro1e6.pl\nWelcome to SWI-Prolog (threaded, 64 bits, version 9.2.4)\nSWI-Prolog comes with ABSOLUTELY NO WARRANTY. This is free software.\nPlease run ?- license. for legal details.\n\nFor online help and background, visit https://www.swi-prolog.org\nFor built-in help, use ?- help(Topic). or ?- apropos(Word).\n\n?- binary_to_decimal([1,0,0,1], X).\nX = 9.\n\n?- binary_to_decimal([1,1,0,1,0], X).\nX = 26.\n\n?- binary_to_decimal([1,1,\u03a7,1,0], 26).\n\u03a7 = 0 ;\nfalse.\n\n?- binary_to_decimal([1,1,0,\u03a7,0], 26).\n\u03a7 = 1.\n</code></pre></p> <ol> <li> <p>Learn Prolog Now Ch.1 - Facts, Rules, and Queries \u21a9\u21a9\u21a9</p> </li> <li> <p>Learn Prolog Now Ch.2 - Unification and Proof Search \u21a9\u21a9</p> </li> <li> <p>Learn Prolog Now Ch.3 - Recursion \u21a9</p> </li> <li> <p>Learn Prolog Now Ch.4 - Lists \u21a9</p> </li> <li> <p>Learn Prolog Now Ch.5 - Arithmetic \u21a9</p> </li> </ol>"},{"location":"lab1_python/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 1 \u03c3\u03c4\u03b7\u03bd Python","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: \u03c3\u03c5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03b1\u03c0\u03bb\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd \u03c3\u03b5 Python, ranges, \u03b4\u03bf\u03bc\u03ae \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7\u03c2<sup>1</sup>, \u03b4\u03bf\u03bc\u03ae \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae\u03c2<sup>2</sup>, \u03b2\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd<sup>3</sup> (lists, tuples, dictionaries, sets), \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ac<sup>4</sup> (\u03bc\u03ae\u03ba\u03bf\u03c2 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd, \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd, \u03bb\u03ae\u03c8\u03b7 \u03c4\u03bc\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03bc\u03b5 slice), \u03b1\u03bc\u03c5\u03bd\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2<sup>5</sup>, import \u03ba\u03b1\u03b9 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03b7\u03ba\u03ce\u03bd, ChatGPT prompts \u03b3\u03b9\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 Python, \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 REPL (Read Evaluate Print Loop) \u03c4\u03b7\u03c2 Python.</p>"},{"location":"lab1_python/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E1A1 - \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c4\u03b1 10 \u03c0\u03c1\u03ce\u03c4\u03b1 \u03c8\u03b7\u03c6\u03af\u03b1 \u03c4\u03bf\u03c5 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03c0\u03c1\u03ac\u03be\u03b7\u03c2 \\(\\sqrt{\\frac{2^{101}}{\\pi^{53}+11^7}}\\)</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 \u03951\u03911 <p>1_1_sol.py<pre><code>import math\n\nx = math.sqrt(2**101 / (math.pi**53 + 11**7))\n\n# \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 \u03c0\u03bb\u03ae\u03c1\u03bf\u03c5\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03bf\u03cd \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2\nprint(x)\n\n# \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 10 \u03c0\u03c1\u03ce\u03c4\u03c9\u03bd \u03c8\u03b7\u03c6\u03af\u03c9\u03bd\ns = str(x)\ns = s.replace(\".\", \"\")\nprint(s[:10])\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 1_1_sol.py\n106.5474731672522\n1065474731\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E1A2 - \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac \"How I want a drink alcoholic of course after the heavy lectures involving quantum mechanics\"<sup>1</sup> \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03c9\u03bd \u03ba\u03ac\u03b8\u03b5 \u03bb\u03ad\u03be\u03b7\u03c2. \u03a0\u03b1\u03c1\u03b1\u03c4\u03ae\u03c1\u03b7\u03c3\u03b7: \u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03c2 split() \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03c4\u03b7\u03c2.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 \u03951\u03912 <p>1_2_sol.py<pre><code>txt = \"How I want a drink alcoholic of course after the heavy lectures involving quantum mechanics\"\n\nfor w in txt.split():\n    print(len(w), sep=\"\", end=\"\")\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 1_2_sol.py\n314159265358979\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E1A3 - \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \\(1 + \\frac{1}{2} + \\frac{1}{4} + \\frac{1}{8} + \\ldots\\) \u03cc\u03c0\u03bf\u03c5 \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03b8\u03b1 \u03b4\u03af\u03bd\u03b5\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03cc\u03c1\u03c9\u03bd \u03c4\u03bf\u03c5 \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2. \u0394\u03b9\u03b1\u03c3\u03c6\u03b1\u03bb\u03af\u03c3\u03c4\u03b5 \u03bc\u03b5 \u03b1\u03bc\u03c5\u03bd\u03c4\u03b9\u03ba\u03cc \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc \u03cc\u03c4\u03b9 \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c0\u03bf\u03c5 \u03b4\u03af\u03bd\u03b5\u03b9 \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bc\u03b7 \u03b1\u03c1\u03bd\u03b7\u03c4\u03b9\u03ba\u03ae \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b1 \u03c4\u03b9\u03bc\u03ae, \u03b1\u03bb\u03bb\u03b9\u03ce\u03c2 \u03bd\u03b1 \u03b6\u03b7\u03c4\u03b5\u03af\u03c4\u03b1\u03b9 \u03b5\u03c0\u03b1\u03bd\u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c4\u03b7\u03c2 \u03c4\u03b9\u03bc\u03ae\u03c2.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 \u03951\u03913 <p>1_3_sol.py<pre><code>while True:\n    print(\"\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03ad\u03bd\u03b1\u03bd \u03bc\u03b7 \u03b1\u03c1\u03bd\u03b7\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: \", end=\"\")\n    n = input()\n    if n.isdigit():\n        n = int(n)\n        if n &gt;= 0:\n            break\n    print(\"\u039b\u03ac\u03b8\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ae, \u03c0\u03c1\u03bf\u03c3\u03c0\u03b1\u03b8\u03ae\u03c3\u03c4\u03b5 \u03be\u03b1\u03bd\u03ac!\")\n\nsum_ = 0.0\nfor i in range(n):\n    sum_ += 1 / 2**i\n\nprint(f\"\u039f\u03b9 {n} \u03c0\u03c1\u03ce\u03c4\u03bf\u03b9 \u03cc\u03c1\u03bf\u03b9 \u03ad\u03c7\u03bf\u03c5\u03bd \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 {sum_:.7}\")\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 1_3_sol.py\n\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03ad\u03bd\u03b1\u03bd \u03bc\u03b7 \u03b1\u03c1\u03bd\u03b7\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: -1\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ae, \u03c0\u03c1\u03bf\u03c3\u03c0\u03b1\u03b8\u03ae\u03c3\u03c4\u03b5 \u03be\u03b1\u03bd\u03ac!\n\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03ad\u03bd\u03b1\u03bd \u03bc\u03b7 \u03b1\u03c1\u03bd\u03b7\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: \u03b1\n\u039b\u03ac\u03b8\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ae, \u03c0\u03c1\u03bf\u03c3\u03c0\u03b1\u03b8\u03ae\u03c3\u03c4\u03b5 \u03be\u03b1\u03bd\u03ac!\n\u0395\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03ad\u03bd\u03b1\u03bd \u03bc\u03b7 \u03b1\u03c1\u03bd\u03b7\u03c4\u03b9\u03ba\u03cc \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc: 5\n\u039f\u03b9 5 \u03c0\u03c1\u03ce\u03c4\u03bf\u03b9 \u03cc\u03c1\u03bf\u03b9 \u03ad\u03c7\u03bf\u03c5\u03bd \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 1.9375\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E1A4 - \u0394\u03ce\u03c3\u03c4\u03b5 \u03c4\u03b7\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae <code>import this</code> \u03c3\u03c4\u03bf REPL (Read Evaluate Print Loop) \u03c4\u03bf\u03c5 IDLE (Integrated Decelopmentv and Learning Environment) \u03c4\u03b7\u03c2 Python \u03ba\u03b1\u03b9 \u03b1\u03bd\u03c4\u03b9\u03b3\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03cc \u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03c4\u03b1\u03b9. \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c0\u03b1\u03c1\u03b1\u03c4\u03b7\u03c1\u03ae\u03c3\u03b5\u03c9\u03bd \u03c4\u03c9\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03c9\u03bd \u0391 \u03ad\u03c9\u03c2 \u03ba\u03b1\u03b9 Z, \u03c7\u03c9\u03c1\u03af\u03c2 \u03b4\u03b9\u03ac\u03ba\u03c1\u03b9\u03c3\u03b7 \u03c0\u03b5\u03b6\u03ce\u03bd \u03ba\u03b1\u03b9 \u03ba\u03b5\u03c6\u03b1\u03bb\u03b1\u03af\u03c9\u03bd, \u03c3\u03c4\u03bf \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 \u03951\u03914 (\u03b1' \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2) <p>1_4_sol.py<pre><code>txt = \"\"\"\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\"\"\"\n\nfreq_dict = {}\nfor c in txt:\n    if c.isalpha():\n        c = c.upper()\n        freq_dict[c] = freq_dict.get(c, 0) + 1\n\nfor c in sorted(freq_dict.keys()):\n    print(f\"\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 {c} \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 {freq_dict[c]}\")\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 1_4_sol.py\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 A \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 53\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 B \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 21\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 C \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 17\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 D \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 17\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 E \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 92\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 F \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 12\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 G \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 11\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 H \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 31\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 I \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 53\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 K \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 2\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 L \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 33\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 M \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 16\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 N \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 42\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 O \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 43\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 P \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 22\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 R \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 33\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 S \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 46\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 T \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 79\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 U \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 21\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 V \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 5\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 W \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 4\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 X \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 6\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 Y \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 17\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 Z \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 1\n</code></pre></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 \u03951\u03914 (\u03b2' \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2) <p>1_4_sol_alt.py<pre><code>import string\n\ntxt = \"\"\"\nThe Zen of Python, by Tim Peters\n\nBeautiful is better than ugly.\nExplicit is better than implicit.\nSimple is better than complex.\nComplex is better than complicated.\nFlat is better than nested.\nSparse is better than dense.\nReadability counts.\nSpecial cases aren't special enough to break the rules.\nAlthough practicality beats purity.\nErrors should never pass silently.\nUnless explicitly silenced.\nIn the face of ambiguity, refuse the temptation to guess.\nThere should be one-- and preferably only one --obvious way to do it.\nAlthough that way may not be obvious at first unless you're Dutch.\nNow is better than never.\nAlthough never is often better than *right* now.\nIf the implementation is hard to explain, it's a bad idea.\nIf the implementation is easy to explain, it may be a good idea.\nNamespaces are one honking great idea -- let's do more of those!\"\"\"\n\n\nfor c in string.ascii_lowercase:\n    total = txt.count(c) + txt.count(c.upper())\n    print(f\"\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 {c} \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 {total}\")\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 1_4_sol_alt.py\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 a \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 53\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 b \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 21\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 c \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 17\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 d \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 17\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 e \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 92\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 f \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 12\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 g \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 11\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 h \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 31\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 i \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 53\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 j \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 0\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 k \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 2\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 l \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 33\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 m \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 16\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 n \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 42\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 o \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 43\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 p \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 22\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 q \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 0\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 r \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 33\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 s \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 46\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 t \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 79\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 u \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 21\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 v \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 5\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 w \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 4\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 x \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 6\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 y \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 17\n\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 z \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9\u03c2 1\n</code></pre></p>"},{"location":"lab1_python/#_2","title":"\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03b5\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E1A5 - \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c7\u03c9\u03c1\u03af\u03c2 \u03ba\u03b5\u03bd\u03ac \u03ba\u03b1\u03b9 \u03b1\u03bd\u03b5\u03c3\u03c4\u03c1\u03b1\u03bc\u03bc\u03ad\u03bd\u03bf. \u0391\u03bd\u03b1\u03b6\u03b7\u03c4\u03ae\u03c3\u03c4\u03b5 \u03bb\u03cd\u03c3\u03b7 \u03bc\u03b5 \"prompting\", \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03bf ChatGPT \u03ae \u03c4\u03bf Google Gemini \u03ae \u03c4\u03bf Microsoft Copilot \u03ae \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf \u03ac\u03bb\u03bb\u03bf \u03b5\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03bc\u03bf\u03bd\u03c4\u03ad\u03bb\u03bf \u03b3\u03bb\u03c9\u03c3\u03c3\u03b9\u03ba\u03ae\u03c2 \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03c6\u03c5\u03c3\u03b9\u03ba\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 \u03951\u03915 <p>1_5_sol.py<pre><code>user_input = input(\"\u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bb\u03ce \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf: \")\ntext_no_spaces = user_input.replace(\" \", \"\")\nreversed_text = text_no_spaces[::-1]\nprint(\"\u03a4\u03bf \u03b1\u03bd\u03b5\u03c3\u03c4\u03c1\u03b1\u03bc\u03bc\u03ad\u03bd\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c7\u03c9\u03c1\u03af\u03c2 \u03ba\u03b5\u03bd\u03ac \u03b5\u03af\u03bd\u03b1\u03b9:\", reversed_text)\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 1_5_sol.py\n\u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bb\u03ce \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf: \u03a4\u03bc\u03ae\u03bc\u03b1 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03a4\u03b7\u03bb\u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03b9\u03ce\u03bd\n\u03a4\u03bf \u03b1\u03bd\u03b5\u03c3\u03c4\u03c1\u03b1\u03bc\u03bc\u03ad\u03bd\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c7\u03c9\u03c1\u03af\u03c2 \u03ba\u03b5\u03bd\u03ac \u03b5\u03af\u03bd\u03b1\u03b9: \u03bd\u03ce\u03b9\u03bd\u03c9\u03bd\u03b9\u03bf\u03ba\u03b9\u03c0\u03b5\u03bb\u03b7\u03a4\u03b9\u03b1\u03ba\u03c2\u03ae\u03ba\u03b9\u03c1\u03bf\u03c6\u03bf\u03c1\u03b7\u03bb\u03a0\u03b1\u03bc\u03ae\u03bc\u03a4\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E1A6 - \u0391\u03bd \u03c0\u03c1\u03bf\u03c3\u03c4\u03b5\u03b8\u03b5\u03af \u03bf \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 28706162 \u03c3\u03c4\u03bf \u03c4\u03ad\u03bb\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \"\u03a0\u0391\u039d\u0395\u03a0\u0399\u03a3\u03a4\u0397\u039c\u0399\u039f \u0399\u03a9\u0391\u039d\u039d\u0399\u039d\u03a9\u039d\", \u03c4\u03bf \u03bd\u03ad\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \"\u03a0\u0391\u039d\u0395\u03a0\u0399\u03a3\u03a4\u0397\u039c\u0399\u039f \u0399\u03a9\u0391\u039d\u039d\u0399\u039d\u03a9\u039d28706162\" \u03b8\u03b1 \u03ad\u03c7\u03b5\u03b9 hash \u03c4\u03b9\u03bc\u03ae (\u03bc\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03ba\u03b1\u03c4\u03b1\u03ba\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd SHA256) \u03bc\u03b5 \u03c4\u03b1 8 \u03c4\u03b5\u03bb\u03b5\u03c5\u03c4\u03b1\u03af\u03b1 \u03c8\u03b7\u03c6\u03af\u03b1 \u03bc\u03b7\u03b4\u03ad\u03bd. \u0391\u03c5\u03c4\u03cc \u03c6\u03b1\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1: </p> <p>1_6.py<pre><code>import hashlib\n\ntext = \"\u03a0\u0391\u039d\u0395\u03a0\u0399\u03a3\u03a4\u0397\u039c\u0399\u039f \u0399\u03a9\u0391\u039d\u039d\u0399\u039d\u03a9\u039d\"\nhash1 = hashlib.sha256(\n    text.encode()\n).hexdigest()  # \u039a\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03bf\u03c5\u03bc\u03b5 \u03c4\u03b7\u03bd \u03b1\u03c1\u03c7\u03b9\u03ba\u03ae hash \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5\nprint(hash1)  # 05f4cd1984d18f7200e31891c2b66ba6752568a691ce077da8824c9e0ef05fe3\n\ntext = \"\u03a0\u0391\u039d\u0395\u03a0\u0399\u03a3\u03a4\u0397\u039c\u0399\u039f \u0399\u03a9\u0391\u039d\u039d\u0399\u039d\u03a9\u039d28706162\"\nhash2 = hashlib.sha256(\n    text.encode()\n).hexdigest()  # Hash \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03c3\u03b8\u03ae\u03ba\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd 28706162\nprint(hash2)  # 5c4b9aaed7f48d66a643fc05665f868454c1517e9f5f108b0478305c00000000\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 1_6.py\n05f4cd1984d18f7200e31891c2b66ba6752568a691ce077da8824c9e0ef05fe3\n5c4b9aaed7f48d66a643fc05665f868454c1517e9f5f108b0478305c00000000\n</code></pre></p> <p>\u03a0\u03bf\u03b9\u03bf\u03c2 \u03b8\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b5\u03b8\u03b5\u03af \u03c3\u03c4\u03bf \u03c4\u03ad\u03bb\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \"\u03a4\u039c\u0397\u039c\u0391 \u03a0\u039b\u0397\u03a1\u039f\u03a6\u039f\u03a1\u0399\u039a\u0397\u03a3 \u039a\u0391\u0399 \u03a4\u0397\u039b\u0395\u03a0\u0399\u039a\u039f\u0399\u039d\u03a9\u039d\u0399\u03a9\u039d\" \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf \u03bd\u03ad\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf hash \u03c4\u03b9\u03bc\u03ae \u03bc\u03b5 \u03c4\u03b1 7 \u03c4\u03b5\u03bb\u03b5\u03c5\u03c4\u03b1\u03af\u03b1 \u03c8\u03b7\u03c6\u03af\u03b1 \u03bc\u03b7\u03b4\u03ad\u03bd; \u0396\u03b7\u03c4\u03ae\u03c3\u03c4\u03b5 \u03b1\u03c0\u03cc \u03c4\u03bf ChatGPT \u03ae \u03ac\u03bb\u03bb\u03bf \u03bd\u03b1 \u03b5\u03be\u03b7\u03b3\u03ae\u03c3\u03b5\u03b9 \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03b9\u03ba\u03ac \u03c4\u03bf\u03bd \u03c1\u03cc\u03bb\u03bf \u03c4\u03b7\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae\u03c2: <code>hashlib.sha256(text.encode()).hexdigest()</code>.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 \u03951\u03916 <p>1_6_sol.py<pre><code>import hashlib\n\ntext = \"\u03a4\u039c\u0397\u039c\u0391 \u03a0\u039b\u0397\u03a1\u039f\u03a6\u039f\u03a1\u0399\u039a\u0397\u03a3 \u039a\u0391\u0399 \u03a4\u0397\u039b\u0395\u03a0\u0399\u039a\u039f\u0399\u039d\u03a9\u039d\u0399\u03a9\u039d\"\nd = 7  # \u039f \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c4\u03c9\u03bd \u03bc\u03b7\u03b4\u03b5\u03bd\u03b9\u03ba\u03ce\u03bd \u03c0\u03bf\u03c5 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03b7 hash \u03c4\u03b9\u03bc\u03ae \u03c3\u03c4\u03bf \u03c4\u03ad\u03bb\u03bf\u03c2\n\n# \u0395\u03c0\u03b1\u03bd\u03b1\u03bb\u03b7\u03c0\u03c4\u03b9\u03ba\u03ae \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03c9\u03bd \u03bc\u03ad\u03c7\u03c1\u03b9 \u03bd\u03b1 \u03b2\u03c1\u03b5\u03b8\u03b5\u03af \u03bf \u03b5\u03c0\u03b9\u03b8\u03c5\u03bc\u03b7\u03c4\u03cc\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2\nx = 0\nwhile True:\n    x += 1\n    new_text = text + str(x)\n    new_hash = hashlib.sha256(new_text.encode()).hexdigest()\n    if new_hash[-d:] == \"0\" * d:\n        break\n\nprint(\"\u039f \u03b5\u03c0\u03b9\u03b8\u03c5\u03bc\u03b7\u03c4\u03cc\u03c2 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9:\", x)\nprint(\"\u03a4\u03bf \u03bd\u03ad\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03b5\u03af\u03bd\u03b1\u03b9:\", new_text)\nprint(\"\u0397 hash \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 \u03bd\u03ad\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9:\", new_hash)\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 1_6_sol.py\n\u039f \u03b5\u03c0\u03b9\u03b8\u03c5\u03bc\u03b7\u03c4\u03cc\u03c2 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9: 113357317\n\u03a4\u03bf \u03bd\u03ad\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03b5\u03af\u03bd\u03b1\u03b9: \u03a4\u039c\u0397\u039c\u0391 \u03a0\u039b\u0397\u03a1\u039f\u03a6\u039f\u03a1\u0399\u039a\u0397\u03a3 \u039a\u0391\u0399 \u03a4\u0397\u039b\u0395\u03a0\u0399\u039a\u039f\u0399\u039d\u03a9\u039d\u0399\u03a9\u039d113357317\n\u0397 hash \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 \u03bd\u03ad\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9: 392ea340cf29585a1043a190967e19815d39b7ff58486d8ba1ff9d0e00000000\n</code></pre></p> <ol> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b4\u03bf\u03bc\u03ae\u03c2 \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7\u03c2 \u21a9\u21a9</p> </li> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b4\u03bf\u03bc\u03ae\u03c2 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae\u03c2 \u21a9</p> </li> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ce\u03bd \u03b4\u03bf\u03bc\u03ce\u03bd \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u21a9</p> </li> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u21a9</p> </li> <li> <p>\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b1\u03bc\u03c5\u03bd\u03c4\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u21a9</p> </li> </ol>"},{"location":"lab2_haskell/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 2 \u03c3\u03c4\u03b7 \u0397askell","text":""},{"location":"lab2_haskell/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H2E1 \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03c6\u03bf\u03c1\u03bf\u03cd\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2:</p> <ol> <li><code>doubleFactorial n</code> , \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03b4\u03b9\u03c0\u03bb\u03cc \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03cc \u03b5\u03bd\u03cc\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd <code>n</code>. \u03a4\u03bf \u03b4\u03b9\u03c0\u03bb\u03cc \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03cc \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03c4\u03bf \u03b3\u03b9\u03bd\u03cc\u03bc\u03b5\u03bd\u03bf \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03c9\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf 1 \u03bc\u03ad\u03c7\u03c1\u03b9 \u03ba\u03b1\u03b9 \u03c4\u03bf\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc <code>n</code> \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03af\u03c4\u03b5 \u03ac\u03c1\u03c4\u03b9\u03bf\u03b9 \u03b5\u03af\u03c4\u03b5 \u03c0\u03b5\u03c1\u03b9\u03c4\u03c4\u03bf\u03af, \u03b1\u03bd\u03ac\u03bb\u03bf\u03b3\u03b1 \u03bc\u03b5 \u03c4\u03bf \u03b5\u03ac\u03bd \u03c4\u03bf <code>n</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03ac\u03c1\u03c4\u03b9\u03bf \u03ae \u03c0\u03b5\u03c1\u03b9\u03c4\u03c4\u03cc \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b1 (\u03c0.\u03c7. \u03c4\u03bf \u03b4\u03b9\u03c0\u03bb\u03cc \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03cc \u03c4\u03bf\u03c5 7 \u03b5\u03af\u03bd\u03b1\u03b9 1 * 3 * 5 * 7 = 105).</li> <li><code>pow x, y</code>, \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf <code>x^y</code> (\u03bc\u03b5 <code>x</code> \u03ba\u03b1\u03b9 <code>y</code> \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b5\u03c2 \u03b8\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2)</li> <li>\u0388\u03c3\u03c4\u03c9 \u03cc\u03c4\u03b9 \u03b4\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>plusOne x = x + 1</code>. \u03a7\u03c9\u03c1\u03af\u03c2 \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b5\u03c4\u03b5 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae <code>+</code>, \u03bf\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>addition</code> \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 <code>addition x y</code> \u03bd\u03b1 \u03c0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c4\u03b5\u03b9 \u03c4\u03b1 <code>x</code> \u03ba\u03b1\u03b9 <code>y</code>.</li> <li><code>log2 x</code>, \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf\u03bd \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03bb\u03bf\u03b3\u03ac\u03c1\u03b9\u03b8\u03bc\u03bf \u03bc\u03b5 \u03b2\u03ac\u03c3\u03b7 2 \u03c4\u03bf\u03c5 \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c0\u03bf\u03c5 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 (\u03c0.\u03c7. <code>log2 1 = 0</code>, <code>log2 16 = 4</code>, <code>log2 11 = 3</code>).</li> </ol> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H2E1 <p>h2e1.hs<pre><code>doubleFactorial :: (Eq p, Num p) =&gt; p -&gt; p\ndoubleFactorial 0 = 1\ndoubleFactorial 1 = 1\ndoubleFactorial n = n * doubleFactorial (n - 2)\n\npow :: (Eq t, Num t, Num p) =&gt; p -&gt; t -&gt; p\npow x 0 = 1\npow x y = x * pow x (y - 1)\n\nplusOne :: (Num a) =&gt; a -&gt; a\nplusOne x = x + 1\n\naddition :: (Eq t1, Num t1, Num t2) =&gt; t2 -&gt; t1 -&gt; t2\naddition x 0 = x\naddition x y = plusOne (addition x (y - 1))\n\nlog2 :: (Num p, Integral t) =&gt; t -&gt; p\nlog2 1 = 0\nlog2 x = 1 + log2 (x `div` 2)\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghci h2e1.hs\nGHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help\n[1 of 2] Compiling Main             ( h2e1.hs, interpreted )\nOk, one module loaded.\nghci&gt; doubleFactorial 7\n105\nghci&gt; pow 2 10\n1024\nghci&gt; addition 5 7\n12\nghci&gt; log2 1\n0\nghci&gt; log2 16\n4\nghci&gt; log2 11\n3\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H2E2 \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03c6\u03bf\u03c1\u03bf\u03cd\u03bd \u03bb\u03af\u03c3\u03c4\u03b5\u03c2. \u03a0\u03c1\u03bf\u03c3\u03ad\u03be\u03c4\u03b5 \u03cc\u03c4\u03b9 \u03cc\u03bb\u03b5\u03c2 \u03bf\u03b9 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03c3\u03c4\u03bf Prelude, \u03ac\u03c1\u03b1 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b4\u03bf\u03b8\u03bf\u03cd\u03bd \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ac \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03c5\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5\u03c2 \u03c3\u03b1\u03c2 \u03bc\u03b5 \u03c4\u03bf GHCi.</p> <ol> <li><code>replicate :: Int -&gt; a -&gt; [a]</code>, \u03c0\u03bf\u03c5 \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03ad\u03bd\u03b1\u03bd \u03bc\u03b5\u03c4\u03c1\u03b7\u03c4\u03ae \u03ba\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c3\u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03c4\u03bf \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03b5\u03c0\u03b1\u03bd\u03b1\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 <code>count</code> \u03c6\u03bf\u03c1\u03ad\u03c2. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 <code>replicate 3 'a' = \"aaa\"</code>.</li> <li><code>valueAt :: [a] -&gt; Int -&gt; a</code>, \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03b7 \u03b8\u03ad\u03c3\u03b7. \u03a4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 0, \u03c4\u03bf \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 1, \u03ba.\u03bb\u03c0. (\u03c0.\u03c7. <code>valueAt [7,8,1,3]  2 = 1</code>). \u0397 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c5\u03c4\u03ae \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c3\u03c4\u03bf Prelude \u03ba\u03b1\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 <code>(!!)</code>.</li> <li><code>myZip :: [a] -&gt; [b] -&gt; [(a, b)]</code>, \u03c0\u03bf\u03c5 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03b4\u03cd\u03bf \u03bb\u03af\u03c3\u03c4\u03b5\u03c2  \u03ba\u03b1\u03b9 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b4\u03c5\u03ac\u03b6\u03b5\u03b9, \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5, \u03c3\u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9, \u03c4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03b6\u03b5\u03cd\u03b3\u03bf\u03c2 \u03bd\u03b1 \u03c3\u03c7\u03b7\u03bc\u03b1\u03c4\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c3\u03c4\u03b7\u03bd \u03c0\u03c1\u03ce\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b4\u03cd\u03bf \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd, \u03c4\u03bf \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03b6\u03b5\u03cd\u03b3\u03bf\u03c2 \u03c3\u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bd\u03b1 \u03c3\u03c7\u03b7\u03bc\u03b1\u03c4\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c3\u03c4\u03b7 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03b7 \u03b8\u03ad\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b4\u03cd\u03bf \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd \u03ba.\u03bf.\u03ba. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 <code>myZip [1,2,3] \"abc\" = [(1, 'a'), (2, 'b'), (3, 'c')]</code>. \u0391\u03bd \u03bf\u03b9 \u03b4\u03cd\u03bf \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03b4\u03b5\u03bd \u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03bc\u03ad\u03b3\u03b5\u03b8\u03bf\u03c2 \u03c4\u03cc\u03c4\u03b5 \u03c3\u03c4\u03b1\u03bc\u03b1\u03c4\u03ac\u03bc\u03b5 \u03cc\u03c4\u03b1\u03bd \u03bc\u03b9\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03b4\u03cd\u03bf \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03b4\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03c0\u03bb\u03ad\u03bf\u03bd \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1. \u0397 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c5\u03c4\u03ae \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c3\u03c4\u03bf Prelude \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>zip</code>.</li> </ol> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H2E2 <p>h2e2.hs<pre><code>myReplicate :: (Eq t, Num t) =&gt; t -&gt; a -&gt; [a]\nmyReplicate 0 _ = []\nmyReplicate n x = x : myReplicate (n - 1) x\n\nvalueAt :: (Eq t, Num t) =&gt; [p] -&gt; t -&gt; p\nvalueAt [] _ = error \"Out of bounds error\"\nvalueAt (x : _) 0 = x\nvalueAt (x : xs) n = valueAt xs (n - 1)\n\nmyZip :: [a] -&gt; [b] -&gt; [(a, b)]\nmyZip _ [] = []\nmyZip [] _ = []\nmyZip (x : xs) (y : ys) = (x, y) : myZip xs ys\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghci h2e2.hs\nGHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help\nghci&gt; :l h2e2.hs\n[1 of 2] Compiling Main             ( h2e2.hs, interpreted )\nOk, one module loaded.\nghci&gt; replicate 3 'a'\n\"aaa\"\nghci&gt; valueAt [7,8,1,3] 2\n1\nghci&gt; myZip [1,2,3] \"abc\"\n[(1,'a'),(2,'b'),(3,'c')]\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H2E3 \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2, \u03c0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c4\u03bf\u03bd\u03c4\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03b9\u03c2 \u03ba\u03b1\u03c4\u03ac\u03bb\u03bb\u03b7\u03bb\u03b5\u03c2 \u03c5\u03c0\u03bf\u03b3\u03c1\u03b1\u03c6\u03ad\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd:</p> <ol> <li><code>takeInt</code>, \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b1 \u03c0\u03c1\u03ce\u03c4\u03b1 <code>n</code> \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1, \u03b7 <code>takeInt 4 [11,21,31,41,51,61]</code> \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 <code>[11,21,31,41]</code>. \u0397 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c5\u03c4\u03ae \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c3\u03c4\u03bf Prelude \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>take</code>.</li> <li><code>dropInt</code>, \u03b1\u03c6\u03b1\u03b9\u03c1\u03b5\u03af \u03c4\u03b1 \u03c0\u03c1\u03ce\u03c4\u03b1 n \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b1 \u03c5\u03c0\u03cc\u03bb\u03bf\u03b9\u03c0\u03b1. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1, \u03b7 <code>dropInt 3 [11,21,31,41,51]</code> \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 <code>[41,51]</code>. \u0397 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c5\u03c4\u03ae \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c3\u03c4\u03bf Prelude \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>drop</code>.</li> <li><code>sumInt</code>, \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03c4\u03c9\u03bd \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2. \u0397 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c5\u03c4\u03ae \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c3\u03c4\u03bf Prelude \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>sum</code>.</li> <li><code>scanSum</code>, \u03c0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c4\u03b5\u03b9 \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03b1 \u03c3\u03c5\u03c3\u03c3\u03c9\u03c1\u03b5\u03c5\u03c4\u03b9\u03ba\u03ac \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03b1. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1, \u03b7 <code>scanSum [2,3,4,5]</code> \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 <code>[2,5,9,14]</code>.</li> </ol> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H2E3 <p>h2e3.hs<pre><code>takeInt :: Int -&gt; [a] -&gt; [a]\ntakeInt _ [] = []\ntakeInt 0 _ = []\ntakeInt n (x : xs) = x : takeInt (n - 1) xs\n\ndropInt :: Int -&gt; [a] -&gt; [a]\ndropInt 0 x = x\ndropInt _ [] = []\ndropInt n (x : xs) = dropInt (n - 1) xs\n\nsumInt :: [Int] -&gt; Int\nsumInt [] = 0\nsumInt (x : xs) = x + sumInt xs\n\nscanSum :: [Int] -&gt; [Int]\nscanSum [] = []\nscanSum [x] = [x]\nscanSum (x : y : xs) = x : scanSum ((x + y) : xs)\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghci h2e3.hs\nGHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help\n[1 of 2] Compiling Main             ( h2e3.hs, interpreted )\nOk, one module loaded.\nghci&gt; takeInt 4 [11,21,31,41,51,61]\n[11,21,31,41]\nghci&gt; dropInt 3 [11,21,31,41,51]\n[41,51]\nghci&gt; sumInt [1,2,3,4,5]\n15\nghci&gt; scanSum [2,3,4,5]\n[2,5,9,14]\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H2E4 \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>map</code> \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03b5\u03c4\u03b5 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b7\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 <code>xs</code> \u03bc\u03b5 \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03bf\u03c5\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9: </p> <ul> <li>\u039c\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03bf \u03b1\u03bd\u03c4\u03af\u03b8\u03b5\u03c4\u03bf \u03ba\u03ac\u03b8\u03b5 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf\u03c5. \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>negate</code>.</li> <li>\u039c\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03c9\u03bd <code>xss</code>, \u03c0\u03bf\u03c5 \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03c4\u03bf\u03c5 <code>xs</code>, \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf\u03c5\u03c2 \u03b4\u03b9\u03b1\u03b9\u03c1\u03ad\u03c4\u03b5\u03c2 \u03c4\u03bf\u03c5 <code>xs</code>. \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>divisors p = [ f | f &lt;- [1..p], mod p f == 0 ]</code> \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03bb\u03ac\u03b2\u03b5\u03c4\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03b4\u03b9\u03b1\u03b9\u03c1\u03ad\u03c4\u03b5\u03c2.</li> </ul> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H2E4 <p>h2e4.hs<pre><code>negateList :: (Num b) =&gt; [b] -&gt; [b]\nnegateList xs = map negate xs\n\ndivisors :: Int -&gt; [Int]\ndivisors p = [f | f &lt;- [1 .. p], p `mod` f == 0]\n\ndivisorsList :: [Int] -&gt; [[Int]]\ndivisorsList xs = map divisors xs\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghci h2e4.hs\nGHCi, version 9.4.8: https://www.haskell.org/ghc/  :? for help\n[1 of 2] Compiling Main             ( h2e4.hs, interpreted )\nOk, one module loaded.\nghci&gt; negateList [1,2,3,4]\n[-1,-2,-3,-4]\nghci&gt; divisorsList [9, 15, 20]\n[[1,3,9],[1,3,5,15],[1,2,4,5,10,20]]\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H2E5 \u039f \u03b1\u03bb\u03b3\u03cc\u03c1\u03b9\u03b8\u03bc\u03bf\u03c2 \u03c4\u03bf\u03c5 Luhn \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03ad\u03bd\u03b1\u03c2 \u03b1\u03c0\u03bb\u03cc\u03c2 \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03b5\u03b3\u03ba\u03c5\u03c1\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03b3\u03b9\u03b1 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03ba\u03b1\u03c1\u03c4\u03ce\u03bd \u03c0\u03bf\u03c5 \u03b5\u03ba\u03b4\u03af\u03b4\u03bf\u03c5\u03bd \u03bf\u03b9 \u03c4\u03c1\u03ac\u03c0\u03b5\u03b6\u03b5\u03c2. \u039f\u03b9 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf\u03b9:</p> <ul> <li>\u0391\u03c0\u03cc \u03c4\u03bf \u03c0\u03c1\u03bf\u03c4\u03b5\u03bb\u03b5\u03c5\u03c4\u03b1\u03af\u03bf \u03c8\u03b7\u03c6\u03af\u03bf \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b1 \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03ac \u03bc\u03b5 \u03b2\u03ae\u03bc\u03b1\u03c4\u03b1 2 \u03c8\u03b7\u03c6\u03af\u03c9\u03bd, \u03b4\u03b9\u03c0\u03bb\u03b1\u03c3\u03af\u03b1\u03c3\u03b5 \u03ba\u03ac\u03b8\u03b5 \u03c8\u03b7\u03c6\u03af\u03bf.</li> <li>\u0391\u03bd \u03c4\u03bf \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 \u03c4\u03bf\u03c5 \u03b4\u03b9\u03c0\u03bb\u03b1\u03c3\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc 9, \u03b1\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b5 9. </li> <li>\u03a0\u03c1\u03cc\u03c3\u03b8\u03b5\u03c3\u03b5 \u03cc\u03bb\u03b1 \u03c4\u03b1 \u03c8\u03b7\u03c6\u03af\u03b1 \u03bc\u03b1\u03b6\u03af.</li> <li>\u0391\u03bd \u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03ac\u03c3\u03b9\u03bf \u03c4\u03bf\u03c5 10, \u03b7 \u03ba\u03ac\u03c1\u03c4\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b7.</li> </ul> <p>\u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 <code>1 7 8 4</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b4\u03b9\u03cc\u03c4\u03b9: </p> <pre><code>(2*1) 7 (2*8) 4 -&gt; 2 7 (16-9) 4 -&gt; 2 7 7 4 -&gt; 2 + 7 + 7 + 4 = 20 -&gt; 20 % 10 == 0 \n</code></pre> <p>\u03a5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03ad\u03bd\u03b1\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03b1\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c0\u03b9\u03c3\u03c4\u03c9\u03c4\u03b9\u03ba\u03ae\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2 \u03ae \u03cc\u03c7\u03b9.  </p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H2E5 <p>h2e5.hs<pre><code>-- \u039c\u03b5\u03c4\u03b1\u03c4\u03c1\u03bf\u03c0\u03ae \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 \u03c3\u03b5 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf (\u03bc\u03b5 \u03b1\u03c0\u03bb\u03ae \u03b1\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b7 '0')\ncharToInt :: Char -&gt; Int\ncharToInt c = fromEnum c - fromEnum '0'\n\n-- \u0395\u03bb\u03ad\u03b3\u03c7\u03b5\u03b9 \u03b1\u03bd \u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c0\u03b5\u03c1\u03bd\u03ac\u03b5\u03b9 \u03c4\u03bf \u03c4\u03b5\u03c3\u03c4 \u03c4\u03bf\u03c5 Luhn\nluhnCheck :: String -&gt; Bool\nluhnCheck number = total `mod` 10 == 0\n  where\n    digits = map charToInt number\n    reversed = reverse digits\n    processed = zipWith doubleEverySecond [0..] reversed\n    total = sum processed\n\n-- \u0394\u03b9\u03c0\u03bb\u03b1\u03c3\u03b9\u03ac\u03b6\u03b5\u03b9 \u03ba\u03ac\u03b8\u03b5 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03c8\u03b7\u03c6\u03af\u03bf, \u03b1\u03c6\u03b1\u03b9\u03c1\u03ce\u03bd\u03c4\u03b1\u03c2 9 \u03b1\u03bd \u03c7\u03c1\u03b5\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9\ndoubleEverySecond :: Int -&gt; Int -&gt; Int\ndoubleEverySecond index digit\n  | odd index = let d = digit * 2 in if d &gt; 9 then d - 9 else d\n  | otherwise = digit\n\nmain :: IO ()\nmain = do\n    putStrLn \"\u0394\u03ce\u03c3\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc:\"\n    number &lt;- getLine\n    if all (`elem` ['0'..'9']) number then\n        if luhnCheck number\n            then putStrLn \"\u0388\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2.\"\n            else putStrLn \"\u039c\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2.\"\n    else\n        putStrLn \"\u039f \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03bc\u03cc\u03bd\u03bf \u03c8\u03b7\u03c6\u03af\u03b1.\"\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghc h2e5.hs\n[1 of 2] Compiling Main             ( h2e5.hs, h2e5.o )\n[2 of 2] Linking h2e5\n$ ./h2e5\n\u0394\u03ce\u03c3\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc:\n1984\n\u039c\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2.\n$ ./h2e5\n\u0394\u03ce\u03c3\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc:\n1784\n\u0388\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2.\n</code></pre></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H2E5 (\u03b2' \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2) <p>h2e5b.hs<pre><code>import Data.Char (digitToInt)\n\n-- \u0395\u03bb\u03ad\u03b3\u03c7\u03b5\u03b9 \u03b1\u03bd \u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c0\u03b5\u03c1\u03bd\u03ac\u03b5\u03b9 \u03c4\u03bf \u03c4\u03b5\u03c3\u03c4 \u03c4\u03bf\u03c5 Luhn\nluhnCheck :: String -&gt; Bool\nluhnCheck number = total `mod` 10 == 0\n  where\n    digits = map digitToInt number\n    reversed = reverse digits\n    processed = zipWith doubleEverySecond [0..] reversed\n    total = sum processed\n\n-- \u0394\u03b9\u03c0\u03bb\u03b1\u03c3\u03b9\u03ac\u03b6\u03b5\u03b9 \u03ba\u03ac\u03b8\u03b5 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03c8\u03b7\u03c6\u03af\u03bf, \u03b1\u03c6\u03b1\u03b9\u03c1\u03ce\u03bd\u03c4\u03b1\u03c2 9 \u03b1\u03bd \u03c7\u03c1\u03b5\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9\ndoubleEverySecond :: Int -&gt; Int -&gt; Int\ndoubleEverySecond index digit\n  | odd index = let d = digit * 2 in if d &gt; 9 then d - 9 else d\n  | otherwise = digit\n\nmain :: IO ()\nmain = do\n    putStrLn \"\u0394\u03ce\u03c3\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc:\"\n    number &lt;- getLine\n    if all (`elem` ['0'..'9']) number then\n        if luhnCheck number\n            then putStrLn \"\u0388\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2.\"\n            else putStrLn \"\u039c\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2.\"\n    else\n        putStrLn \"\u039f \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03bc\u03cc\u03bd\u03bf \u03c8\u03b7\u03c6\u03af\u03b1.\"\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ ghc h2e5b.hs\n[1 of 2] Compiling Main             ( h2e5b.hs, h2e5b.o )\n[2 of 2] Linking h2e5b\n$ ./h2e5b\n\u0394\u03ce\u03c3\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc:\n1784\n\u0388\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03ba\u03ac\u03c1\u03c4\u03b1\u03c2.\n</code></pre></p>"},{"location":"lab2_prolog/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 2 \u03c3\u03c4\u03b7\u03bd Prolog","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: \u039b\u03af\u03c3\u03c4\u03b5\u03c2<sup>1</sup> <sup>2</sup>, \u03b1\u03c0\u03bf\u03ba\u03bf\u03c0\u03ae \u03ba\u03b1\u03b9 \u03ac\u03c1\u03bd\u03b7\u03c3\u03b7 (cut and negation)<sup>3</sup>, \u039b\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bc\u03b5 \u03a0\u03b5\u03c1\u03b9\u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 (CLP=Constraint Logic Programming)<sup>4</sup>.</p>"},{"location":"lab2_prolog/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO2E1 \u0388\u03c3\u03c4\u03c9 \u03ad\u03bd\u03b1\u03c2 \u03c7\u03ac\u03c1\u03c4\u03b7\u03c2 \u03bc\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2. \u0397 \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 \u03c4\u03bf\u03c5 \u03c7\u03ac\u03c1\u03c4\u03b7 \u03c0\u03bf\u03c5 \u03c3\u03c5\u03bd\u03bf\u03c1\u03b5\u03cd\u03bf\u03c5\u03bd \u03b4\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c4\u03b7\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2 <code>[[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]]</code> \u03c0\u03bf\u03c5 \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03b7 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ae 1 \u03c3\u03c5\u03bd\u03bf\u03c1\u03b5\u03cd\u03b5\u03b9 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 2, 3, 4, 5, \u03ba.\u03bf.\u03ba. \u039a\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03c3\u03c4\u03b5 \u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>adjacent(X,Y,Map)</code> \u03bc\u03b5 \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 <code>X</code> \u03ba\u03b1\u03b9 <code>Y</code>, 2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ce\u03bd \u03ba\u03b1\u03b9 <code>Map</code> \u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03c3\u03c5\u03bd\u03bf\u03c1\u03b5\u03cd\u03bf\u03c5\u03bd. \u03a4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>adjacent/3</code> \u03bd\u03b1 \u03b5\u03c0\u03b1\u03bb\u03b7\u03b8\u03b5\u03cd\u03b5\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b1\u03bd \u03bf\u03b9 2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03b5\u03b9\u03c4\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2. </p> <p>\u039f \u03c7\u03ac\u03c1\u03c4\u03b7\u03c2 <code>[[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]]</code> \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03c3\u03c7\u03ae\u03bc\u03b1:</p> <p>, </p> <p>\u0398\u03ad\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1:</p> <ul> <li>\u0395\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 4 \u03ba\u03b1\u03b9 2 \u03b3\u03b5\u03b9\u03c4\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c4\u03bf\u03bd \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03c7\u03ac\u03c1\u03c4\u03b7;</li> <li>\u0395\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 5 \u03ba\u03b1\u03b9 2 \u03b3\u03b5\u03b9\u03c4\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c4\u03bf\u03bd \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03c7\u03ac\u03c1\u03c4\u03b7;</li> </ul> <p>\u0388\u03c3\u03c4\u03c9 \u03cc\u03c4\u03b9 \u03b5\u03c0\u03b9\u03b8\u03c5\u03bc\u03bf\u03cd\u03bc\u03b5 \u03bd\u03b1 \u03b5\u03bb\u03ad\u03b3\u03be\u03bf\u03c5\u03bc\u03b5 \u03b1\u03bd \u03ad\u03bd\u03b1\u03c2 \u03c7\u03c1\u03c9\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03b1\u03bd \u03b4\u03b5\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03b3\u03b5\u03b9\u03c4\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c7\u03c1\u03c9\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03b5\u03af \u03bc\u03b5 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03c7\u03c1\u03ce\u03bc\u03b1. \u039a\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03c3\u03c4\u03b5 \u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>conflict(Map, Coloring)</code> \u03c0\u03bf\u03c5 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 <code>Map</code> \u03cc\u03c0\u03c9\u03c2 \u03c3\u03c4\u03bf \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 <code>Coloring</code> \u03c4\u03b7\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2 <code>[[5,red],[4,red],[3,blue],[1,blue],[2,yellow]]</code> \u03c0\u03bf\u03c5 \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03b7 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ae 5 \u03c7\u03c1\u03c9\u03bc\u03b1\u03c4\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03ba\u03cc\u03ba\u03ba\u03b9\u03bd\u03b7 \u03ba.\u03bf.\u03ba. \u03a4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>conflict/2</code> \u03bd\u03b1 \u03b5\u03c0\u03b1\u03bb\u03b7\u03b8\u03b5\u03cd\u03b5\u03c4\u03b1\u03b9 \u03b1\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c3\u03cd\u03b3\u03ba\u03c1\u03bf\u03c5\u03c3\u03b7 \u03c7\u03c1\u03c9\u03bc\u03ac\u03c4\u03c9\u03bd.</p> <p>\u0398\u03ad\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1:</p> <ul> <li>\u0388\u03c7\u03b5\u03b9 \u03bf \u03c7\u03c1\u03c9\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 <code>[[5,red],[4,red],[3,blue],[1,blue],[2,yellow]]</code> \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9  \u03c7\u03ac\u03c1\u03c4\u03b7 \u03c3\u03cd\u03b3\u03ba\u03c1\u03bf\u03c5\u03c3\u03b7;</li> <li>\u0388\u03c7\u03b5\u03b9 \u03bf \u03c7\u03c1\u03c9\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 <code>[[5,blue],[4,red],[3,yellow],[1,green],[2,blue]]</code> \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9  \u03c7\u03ac\u03c1\u03c4\u03b7 \u03c3\u03cd\u03b3\u03ba\u03c1\u03bf\u03c5\u03c3\u03b7;</li> </ul> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO2E1 pro2e1.pl<pre><code>% https://www.cpp.edu/~jrfisher/www/prolog_tutorial/pt_framer.html\n\n% \u03b7 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ae \u03a7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03b5\u03b9\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae \u03bc\u03b5 \u03c4\u03b7 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ae \u03a5 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c7\u03ac\u03c1\u03c4\u03b7 Map \nadjacent(X,Y,Map) :- member([X,Y],Map) ; member([Y,X],Map). \n\nconflict(Map,Coloring) :- \n    member([R1,C],Coloring), \n    member([R2,C],Coloring), \n    adjacent(R1,R2,Map). \n</code></pre> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 <code>pro2e2.pl</code> \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>$ swipl -l pro2e2.pl\n</code></pre></p> <p>\u0393\u03b9\u03b1 \u03bd\u03b1 \u03bc\u03b7\u03bd \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03bc\u03b5 <code>_</code> \u03b4\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae:  <pre><code>?- set_prolog_flag(toplevel_print_anon, false).\n</code></pre></p> <p>\u0395\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 4 \u03ba\u03b1\u03b9 2 \u03b3\u03b5\u03b9\u03c4\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c4\u03bf\u03bd \u03c7\u03ac\u03c1\u03c4\u03b7 <code>[[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]]</code>; <pre><code>?- _Map = [[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]], adjacent(4, 2, _Map).\ntrue .\n</code></pre></p> <p>\u0395\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ad\u03c2 5 \u03ba\u03b1\u03b9 2 \u03b3\u03b5\u03b9\u03c4\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c4\u03bf\u03bd \u03c7\u03ac\u03c1\u03c4\u03b7 <code>[[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]]</code>; <pre><code>?- _Map = [[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]], adjacent(5, 2, _Map). \nfalse.\n</code></pre></p> <p>\u0388\u03c7\u03b5\u03b9 \u03bf \u03c7\u03c1\u03c9\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 <code>[[5,red],[4,red],[3,blue],[1,blue],[2,yellow]]</code> \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c7\u03ac\u03c1\u03c4\u03b7 <code>[[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]]</code> \u03c3\u03cd\u03b3\u03ba\u03c1\u03bf\u03c5\u03c3\u03b7; <pre><code>?- _Map = [[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]], _Coloring = [[5,red],[4,red],[3,blue],[1,blue],[2,yellow]], conflict(_Map,_Coloring).\ntrue .\n</code></pre></p> <p>\u0388\u03c7\u03b5\u03b9 \u03bf \u03c7\u03c1\u03c9\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 <code>[[5,blue],[4,red],[3,yellow],[1,green],[2,blue]]</code> \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c7\u03ac\u03c1\u03c4\u03b7 <code>[[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]]</code> \u03c3\u03cd\u03b3\u03ba\u03c1\u03bf\u03c5\u03c3\u03b7; <pre><code>?- _Map = [[1,2],[1,3],[1,4],[1,5],[2,3],[2,4],[3,4],[4,5]], _Coloring = [[5,blue],[4,red],[3,yellow],[1,green],[2,blue]], conflict(_Map,_Coloring).\nfalse.\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO2E2 \u03a4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>max\\3</code> \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b1\u03bb\u03b7\u03b8\u03b5\u03cd\u03b5\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b1\u03bd \u03c4\u03bf \u03c4\u03c1\u03af\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03c9\u03bd 2 \u03c0\u03c1\u03ce\u03c4\u03c9\u03bd \u03bf\u03c1\u03b9\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd. \u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 cut. \u039c\u03c0\u03bf\u03c1\u03b5\u03af\u03c4\u03b5 \u03bd\u03b1 \u03b5\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03b4\u03b5\u03bd \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03c3\u03c9\u03c3\u03c4\u03ac; \u0393\u03b9\u03b1\u03c4\u03af; \u0394\u03b9\u03bf\u03c1\u03b8\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf.</p> <pre><code>max(X,Y,Y) :- Y&gt;X, !.\nmax(X,_,X).\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO2E2 pro2e2.pl<pre><code>% http://www.let.rug.nl/bos/lpn//lpnpage.php?pagetype=html&amp;pageid=lpn-htmlse44\n\nmax(X,Y,Y) :- Y&gt;X, !.\nmax(X,_,X).\n</code></pre> <p>\u039f\u03c1\u03b8\u03ae \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03c6\u03bf\u03c1\u03ac: <pre><code>?- max(1,2,X).\nX = 2.\n</code></pre></p> <p>\u039f\u03c1\u03b8\u03ae \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03c6\u03bf\u03c1\u03ac: <pre><code>?- max(2,1,X).\nX = 2.\n</code></pre></p> <p>\u039f\u03c1\u03b8\u03ae \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03c6\u03bf\u03c1\u03ac: <pre><code>?- max(1,2,2).\ntrue.\n</code></pre></p> <p>\u039f\u03c1\u03b8\u03ae \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03c6\u03bf\u03c1\u03ac: <pre><code>?- max(1,2,99). \nfalse.\n</code></pre></p> <p>\u039b\u03ac\u03b8\u03bf\u03c2 \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03c6\u03bf\u03c1\u03ac: <pre><code>?- max(1,2,1).\ntrue.\n</code></pre></p> <p>\u03a3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1 \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 3 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b4\u03b9\u03b1\u03bc\u03bf\u03c1\u03c6\u03ce\u03c3\u03b5\u03b9\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 <code>max/3</code> \u03c0\u03bf\u03c5 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03bf\u03cd\u03bd \u03c3\u03c9\u03c3\u03c4\u03ac.</p> <p>\u0391' \u03b4\u03b9\u03b1\u03bc\u03cc\u03c1\u03c6\u03c9\u03c3\u03b7 <pre><code>max(X,Y,Y) :- Y &gt; X.\nmax(X,Y,X) :- X &gt;= Y.\n</code></pre></p> <p>\u0392' \u03b4\u03b9\u03b1\u03bc\u03cc\u03c1\u03c6\u03c9\u03c3\u03b7 <pre><code>max(X,Y,Y) :- Y &gt; X, !.\nmax(X,Y,X) :- X &gt;= Y.\n</code></pre></p> <p>\u0393' \u03b4\u03b9\u03b1\u03bc\u03cc\u03c1\u03c6\u03c9\u03c3\u03b7 <pre><code>max(X,Y,Z) :- Y &gt; X, !, Z=Y.\nmax(X,_,X).\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO2E3 \u039c\u03b5 \u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7\u03c2 CLPFD, \u03b5\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03c4\u03b5 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03c9\u03bd <code>X</code>, <code>Y</code> \u03ba\u03b1\u03b9 <code>Z</code> \u03bc\u03b5 \u03c0\u03b5\u03b4\u03af\u03b1 \u03c4\u03b9\u03bc\u03ce\u03bd \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf\u03c5\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf 1 \u03bc\u03ad\u03c7\u03c1\u03b9 \u03ba\u03b1\u03b9 \u03c4\u03bf 20 \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03bf\u03c0\u03bf\u03af\u03b5\u03c2 \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03ac \u03c4\u03bf\u03c5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 15, \u03b7 <code>X</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd <code>Y</code> \u03ba\u03b1\u03b9 \u03b7 <code>\u0396</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03c0\u03bb\u03ac\u03c3\u03b9\u03b1 \u03ae \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03c4\u03b7\u03c2 <code>Y</code>.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO2E3 pro2e3.pl<pre><code>:- use_module(library(clpfd)).\n\nsolve(X,Y,Z) :- \n    X in 1..20,\n    Y in 1..20,\n    Z in 1..20,\n    X + Y + Z #= 15,\n    X #&gt; Y,\n    Z #&gt;= 2 * Y,\n    label([X,Y,Z]).\n\n% \u03b5\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7\nsolve2(X,Y,Z) :- \n    Vs = [X,Y,Z], \n    Vs ins 1..20,\n    X + Y + Z #= 15,\n    X #&gt; Y,\n    Z #&gt;= 2 * Y,\n    label(Vs), \n    write(Vs),\n    nl,\n    fail.\n</code></pre> <pre><code>?- solve(X,Y,Z).\nX = 2,\nY = 1,\nZ = 12 ;\nX = 3,\nY = 1,\nZ = 11 ;\nX = 3,\nY = 2,\nZ = 10 ;\nX = 4,\nY = 1,\nZ = 10 ;\nX = 4,\nY = 2,\nZ = 9 ;\nX = 4,\nY = 3,\nZ = 8 ;\nX = 5,\nY = 1,\nZ = 9 ;\nX = 5,\nY = 2,\nZ = 8 ;\nX = 5,\nY = 3,\nZ = 7 ;\nX = 6,\nY = 1,\nZ = 8 ;\nX = 6,\nY = 2,\nZ = 7 ;\nX = Z, Z = 6,\nY = 3 ;\nX = Z, Z = 7,\nY = 1 ;\nX = 7,\nY = 2,\nZ = 6 ;\nX = 8,\nY = 1,\nZ = 6 ;\nX = 8,\nY = 2,\nZ = 5 ;\nX = 9,\nY = 1,\nZ = 5 ;\nX = 9,\nY = 2,\nZ = 4 ;\nX = 10,\nY = 1,\nZ = 4 ;\nX = 11,\nY = 1,\nZ = 3 ;\nX = 12,\nY = 1,\nZ = 2.\n\n?- solve2(X,Y,Z). \n[2,1,12]\n[3,1,11]\n[3,2,10]\n[4,1,10]\n[4,2,9]\n[4,3,8]\n[5,1,9]\n[5,2,8]\n[5,3,7]\n[6,1,8]\n[6,2,7]\n[6,3,6]\n[7,1,7]\n[7,2,6]\n[8,1,6]\n[8,2,5]\n[9,1,5]\n[9,2,4]\n[10,1,4]\n[11,1,3]\n[12,1,2]\nfalse.\n</code></pre> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO2E4 \u039c\u03b5 \u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7\u03c2 CLPFD, \u03bb\u03cd\u03c3\u03c4\u03b5 \u03c4\u03bf \u03ba\u03c1\u03c5\u03c0\u03c4\u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03cc \u03c0\u03b1\u03b6\u03bb <code>SEND + MORE = MONEY</code> \u03c3\u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03ba\u03ac\u03b8\u03b5 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b1\u03c4\u03b1\u03c3\u03c4\u03b1\u03b8\u03b5\u03af \u03bc\u03b5 \u03ad\u03bd\u03b1 \u03c8\u03b7\u03c6\u03af\u03bf \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03c0\u03c1\u03ac\u03be\u03b7 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03c1\u03b8\u03ae.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO2E4 pro2e4.pl<pre><code>% https://github.com/Anniepoo/swiplclpfd/blob/master/clpfd.adoc#an-example\n\n:- use_module(library(clpfd)).\n\npuzzle([S,E,N,D] + [M,O,R,E] = [M,O,N,E,Y]) :-\n        Vars = [S,E,N,D,M,O,R,Y],\n        Vars ins 0..9,  \n        all_different(Vars),       \n                  S*1000 + E*100 + N*10 + D +  \n                  M*1000 + O*100 + R*10 + E #=\n        M*10000 + O*1000 + N*100 + E*10 + Y,\n        M #\\= 0, S #\\= 0,   \n        label(Vars).\n</code></pre> <pre><code>?- puzzle(X).\nX = ([9, 5, 6, 7]+[1, 0, 8, 5]=[1, 0, 6, 5, 2]) ;\nfalse.\n</code></pre> <ol> <li> <p>Learn Prolog Now Ch.4 \u21a9</p> </li> <li> <p>Learn Prolog Now Ch.6 \u21a9</p> </li> <li> <p>Learn Prolog Now Ch.10 \u21a9</p> </li> <li> <p>CLPFD: Constraint Logic Programming over Finite Domains \u21a9</p> </li> </ol>"},{"location":"lab2_python/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 2 \u03c3\u03c4\u03b7\u03bd Python","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: \u03c3\u03c5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd<sup>1</sup>, unit tests \u03bc\u03b5 \u03c4\u03b7 \u03c3\u03c4\u03ac\u03bd\u03c4\u03b1\u03c1\u03bd\u03c4 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7 unittest<sup>2</sup>, comprehensions<sup>3</sup><sup>4</sup>, virtual environments (venv), \u03b5\u03be\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03ad\u03c2 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03b3\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03bf pip, unit tests \u03bc\u03b5 \u03c4\u03bf pytest<sup>5</sup>.</p>"},{"location":"lab2_python/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E2A1 - \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03b4\u03cd\u03bf \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ac \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b1\u03c0\u03cc\u03c3\u03c4\u03b1\u03c3\u03b7 Hamming (\u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03c9\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b4\u03b9\u03b1\u03c6\u03ad\u03c1\u03bf\u03c5\u03bd \u03c3\u03c4\u03b1 \u03b4\u03cd\u03bf \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ac). \u0391\u03bd \u03c4\u03b1 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ac \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03bf\u03cd \u03bc\u03ae\u03ba\u03bf\u03c5\u03c2 \u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae -1. \u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf template \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03bb\u03cd\u03c3\u03b7 \u03c3\u03b1\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 \u03c3\u03b5 \u03cc\u03bb\u03b1 \u03c4\u03b1 unit tests.</p> template2_1.py<pre><code>import unittest\n\n\ndef hamming_distance(s, t):\n    pass\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestHammingDistance(unittest.TestCase):\n    def test_HD(self):\n        self.assertEqual(hamming_distance(\"G\", \"\"), -1)\n        self.assertEqual(hamming_distance(\"\", \"G\"), -1)\n        self.assertEqual(hamming_distance(\"G\", \"A\"), 1)\n        self.assertEqual(hamming_distance(\"G\", \"G\"), 0)\n        self.assertEqual(hamming_distance(\"GA\", \"GA\"), 0)\n        self.assertEqual(hamming_distance(\"GA\", \"AG\"), 2)\n        self.assertEqual(hamming_distance(\"AGCT\", \"AGCT\"), 0)\n        self.assertEqual(hamming_distance(\"AGCT\", \"TCGA\"), 4)\n        self.assertEqual(hamming_distance(\"GAGCCTACTAACGGGAT\", \"CATCGTAATGACGGCCT\"), 7)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 1 <p>template2_1_sol.py<pre><code>import unittest\n\n\ndef hamming_distance(s, t):\n    if len(s) != len(t):\n        return -1\n    c = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            c += 1\n    return c\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestHammingDistance(unittest.TestCase):\n    def test_HD(self):\n        self.assertEqual(hamming_distance(\"G\", \"\"), -1)\n        self.assertEqual(hamming_distance(\"\", \"G\"), -1)\n        self.assertEqual(hamming_distance(\"G\", \"A\"), 1)\n        self.assertEqual(hamming_distance(\"G\", \"G\"), 0)\n        self.assertEqual(hamming_distance(\"GA\", \"GA\"), 0)\n        self.assertEqual(hamming_distance(\"GA\", \"AG\"), 2)\n        self.assertEqual(hamming_distance(\"AGCT\", \"AGCT\"), 0)\n        self.assertEqual(hamming_distance(\"AGCT\", \"TCGA\"), 4)\n        self.assertEqual(hamming_distance(\"GAGCCTACTAACGGGAT\", \"CATCGTAATGACGGCCT\"), 7)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python template2_1_sol.py\n.\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E2A2 - \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03bb\u03ad\u03b3\u03c7\u03b5\u03b9 \u03b1\u03bd \u03bc\u03b9\u03b1 \u03c6\u03c1\u03ac\u03c3\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03b1\u03bd\u03c4\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03ba\u03b1\u03b9 \u03c4\u03b1 24 \u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c4\u03bf\u03c5 \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03bf\u03cd \u03b1\u03bb\u03c6\u03b1\u03b2\u03ae\u03c4\u03bf\u03c5. \u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf template \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03bb\u03cd\u03c3\u03b7 \u03c3\u03b1\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 \u03c3\u03b5 \u03cc\u03bb\u03b1 \u03c4\u03b1 unit tests.</p> template2_2.py<pre><code>import unittest\n\n\ndef is_pangram(s):\n    greekletters = \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\"\n    ...\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestPantogram(unittest.TestCase):\n    def test(self):\n        self.assertEqual(is_pangram(\"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\"), True)\n        self.assertEqual(is_pangram(\"\u03a9\u03a8\u03a7\u03a6\u03a5\u03a4\u03a3\u03a1\u03a0\u039f\u039e\u039d\u039c\u039b\u039a\u0399\u0398\u0397\u0396\u0395\u0394\u0393\u0392\u0391\"), True)\n        self.assertEqual(is_pangram(\"\u039e\u0395\u03a3\u039a\u0395\u03a0\u0391\u0396\u03a9 \u03a4\u0397\u039d \u03a8\u03a5\u03a7\u039f\u03a6\u0398\u039f\u03a1\u039f \u0392\u0394\u0395\u039b\u03a5\u0393\u039c\u0399\u0391\"), True)\n        self.assertEqual(\n            is_pangram(\n                \"\u039f \u039a\u0391\u039b\u03a5\u039c\u039d\u0399\u039f\u03a3 \u03a3\u03a6\u039f\u03a5\u0393\u0393\u0391\u03a1\u0391\u03a3 \u03a8\u0399\u0398\u03a5\u03a1\u0399\u03a3\u0395 \u03a0\u03a9\u03a3 \u0398\u0391 \u0392\u039f\u03a5\u03a4\u0397\u039e\u0395\u0399 \u03a7\u03a9\u03a1\u0399\u03a3 \u039d\u0391 \u0394\u0399\u03a3\u03a4\u0391\u0396\u0395\u0399\"\n            ),\n            True,\n        )\n        self.assertEqual(is_pangram(\"\"), False)\n        self.assertEqual(is_pangram(\"A\" * 24), False)\n        self.assertEqual(is_pangram(\"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8A\"), False)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 2 <p>template2_2_sol.py<pre><code>import unittest\n\n\ndef is_pangram(s):\n    greekletters = \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\"\n    a_set = set()\n    for c in greekletters:\n        a_set.add(c)\n\n    for c in s.upper():\n        if c in a_set:\n            a_set.remove(c)\n\n    return len(a_set) == 0\n\n\n# \u03c3\u03c5\u03bd\u03c4\u03bf\u03bc\u03cc\u03c4\u03b5\u03c1\u03b7 \u03bb\u03cd\u03c3\u03b7\n# def is_pangram(s):\n#     return len({c for c in \"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\"} - {c for c in s}) == 0\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestPantogram(unittest.TestCase):\n    def test(self):\n        self.assertEqual(is_pangram(\"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8\u03a9\"), True)\n        self.assertEqual(is_pangram(\"\u03a9\u03a8\u03a7\u03a6\u03a5\u03a4\u03a3\u03a1\u03a0\u039f\u039e\u039d\u039c\u039b\u039a\u0399\u0398\u0397\u0396\u0395\u0394\u0393\u0392\u0391\"), True)\n        self.assertEqual(is_pangram(\"\u039e\u0395\u03a3\u039a\u0395\u03a0\u0391\u0396\u03a9 \u03a4\u0397\u039d \u03a8\u03a5\u03a7\u039f\u03a6\u0398\u039f\u03a1\u039f \u0392\u0394\u0395\u039b\u03a5\u0393\u039c\u0399\u0391\"), True)\n        self.assertEqual(\n            is_pangram(\n                \"\u039f \u039a\u0391\u039b\u03a5\u039c\u039d\u0399\u039f\u03a3 \u03a3\u03a6\u039f\u03a5\u0393\u0393\u0391\u03a1\u0391\u03a3 \u03a8\u0399\u0398\u03a5\u03a1\u0399\u03a3\u0395 \u03a0\u03a9\u03a3 \u0398\u0391 \u0392\u039f\u03a5\u03a4\u0397\u039e\u0395\u0399 \u03a7\u03a9\u03a1\u0399\u03a3 \u039d\u0391 \u0394\u0399\u03a3\u03a4\u0391\u0396\u0395\u0399\"\n            ),\n            True,\n        )\n        self.assertEqual(is_pangram(\"\"), False)\n        self.assertEqual(is_pangram(\"A\" * 24), False)\n        self.assertEqual(is_pangram(\"\u0391\u0392\u0393\u0394\u0395\u0396\u0397\u0398\u0399\u039a\u039b\u039c\u039d\u039e\u039f\u03a0\u03a1\u03a3\u03a4\u03a5\u03a6\u03a7\u03a8A\"), False)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python template2_2_sol.py\n.\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E2A3  -  \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf, \u03bd\u03b1 \u03b1\u03c6\u03b1\u03b9\u03c1\u03b5\u03af \u03c4\u03b1 \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03b1 \u03c4\u03b5\u03bb\u03b5\u03af\u03b1 \u03ba\u03b1\u03b9 \u03ba\u03cc\u03bc\u03bc\u03b1, \u03bd\u03b1 \u03b5\u03bd\u03c4\u03bf\u03c0\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf \u03bc\u03ae\u03ba\u03bf\u03c2 \u03bb\u03ad\u03be\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bc\u03b5 \u03bc\u03ae\u03ba\u03bf\u03c2 \u03af\u03c3\u03bf \u03bc\u03b5 \u03c4\u03bf \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf \u03bc\u03ae\u03ba\u03bf\u03c2, \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c3\u03b5 \u03b1\u03cd\u03be\u03bf\u03c5\u03c3\u03b1 \u03c3\u03b5\u03b9\u03c1\u03ac. \u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf template \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03bb\u03cd\u03c3\u03b7 \u03c3\u03b1\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 \u03c3\u03b5 \u03cc\u03bb\u03b1 \u03c4\u03b1 unit tests.</p> template2_3.py<pre><code>import unittest\n\n\ndef longest_words(s):\n    pass\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestLongestWords(unittest.TestCase):\n    def test(self):\n        s1 = \"\"\n        self.assertEqual(longest_words(s1), [])\n        s2 = \"arta\"\n        self.assertEqual(longest_words(s2), [\"arta\"])\n        s3 = \"arta \u0386\u03c1\u03c4\u03b1\"\n        self.assertEqual(longest_words(s3), [\"arta\", \"\u0386\u03c1\u03c4\u03b1\"])\n        s4 = \"....arta,,, \u0386\u03c1\u03c4\u03b1.....\"\n        self.assertEqual(longest_words(s4), [\"arta\", \"\u0386\u03c1\u03c4\u03b1\"])\n        s5 = \"ab,,cd..ef gh..\"\n        self.assertEqual(longest_words(s5), [\"ab\", \"cd\", \"ef\", \"gh\"])\n        s6 = \"\"\"\u03a4\u03bf Lorem Ipsum \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c0\u03bb\u03ac \u03ad\u03bd\u03b1 \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c7\u03c9\u03c1\u03af\u03c2 \u03bd\u03cc\u03b7\u03bc\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03c5\u03c2 \u03b5\u03c0\u03b1\u03b3\u03b3\u03b5\u03bb\u03bc\u03b1\u03c4\u03af\u03b5\u03c2 \u03c4\u03b7\u03c2 \u03c4\u03c5\u03c0\u03bf\u03b3\u03c1\u03b1\u03c6\u03af\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03b9\u03bf\u03b8\u03b5\u03c3\u03af\u03b1\u03c2 \u03a4\u03bf Lorem Ipsum \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03b5\u03c0\u03b1\u03b3\u03b3\u03b5\u03bb\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c0\u03c1\u03cc\u03c4\u03c5\u03c0\u03bf \u03cc\u03c3\u03bf\u03bd \u03b1\u03c6\u03bf\u03c1\u03ac \u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c7\u03c9\u03c1\u03af\u03c2 \u03bd\u03cc\u03b7\u03bc\u03b1, \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd 15\u03bf \u03b1\u03b9\u03ce\u03bd\u03b1, \u03cc\u03c4\u03b1\u03bd \u03ad\u03bd\u03b1\u03c2 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03bf\u03c2 \u03c4\u03c5\u03c0\u03bf\u03b3\u03c1\u03ac\u03c6\u03bf\u03c2 \u03c0\u03ae\u03c1\u03b5 \u03ad\u03bd\u03b1 \u03b4\u03bf\u03ba\u03af\u03bc\u03b9\u03bf \u03ba\u03b1\u03b9 \u03b1\u03bd\u03b1\u03ba\u03ac\u03c4\u03b5\u03c8\u03b5 \u03c4\u03b9\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03b4\u03b5\u03af\u03b3\u03bc\u03b1 \u03b2\u03b9\u03b2\u03bb\u03af\u03bf\u03c5 \u038c\u03c7\u03b9 \u03bc\u03cc\u03bd\u03bf \u03b5\u03c0\u03b9\u03b2\u03af\u03c9\u03c3\u03b5 \u03c0\u03ad\u03bd\u03c4\u03b5 \u03b1\u03b9\u03ce\u03bd\u03b5\u03c2 \u03b1\u03bb\u03bb\u03ac \u03ba\u03c5\u03c1\u03b9\u03ac\u03c1\u03c7\u03b7\u03c3\u03b5 \u03c3\u03c4\u03b7\u03bd \u03b7\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ae \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03b9\u03bf\u03b8\u03b5\u03c3\u03af\u03b1 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2 \u03bc\u03b5 \u03ba\u03ac\u03b8\u03b5 \u03c4\u03c1\u03cc\u03c0\u03bf \u03b1\u03bd\u03b1\u03bb\u03bb\u03bf\u03af\u03c9\u03c4\u03bf \u0388\u03b3\u03b9\u03bd\u03b5 \u03b4\u03b7\u03bc\u03bf\u03c6\u03b9\u03bb\u03ad\u03c2 \u03c4\u03b7 \u03b4\u03b5\u03ba\u03b1\u03b5\u03c4\u03af\u03b1 \u03c4\u03bf\u03c5 '60 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b4\u03b5\u03b9\u03b3\u03bc\u03ac\u03c4\u03c9\u03bd \u03c4\u03b7\u03c2 Letraset \u03cc\u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03b5\u03bb\u03ac\u03bc\u03b2\u03b1\u03bd\u03b1\u03bd \u03b1\u03c0\u03bf\u03c3\u03c0\u03ac\u03c3\u03bc\u03b1\u03c4\u03b1 \u03c4\u03bf\u03c5 Lorem Ipsum \u03ba\u03b1\u03b9 \u03c0\u03b9\u03bf \u03c0\u03c1\u03cc\u03c3\u03c6\u03b1\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03bf \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03b9\u03ba\u03cc \u03b7\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b5\u03bb\u03b9\u03b4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03c4\u03bf Aldus PageMaker \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03b5\u03af\u03c7\u03b1\u03bd \u03b5\u03ba\u03b4\u03bf\u03c7\u03ad\u03c2 \u03c4\u03bf\u03c5 Lorem Ipsum\"\"\"\n        self.assertEqual(longest_words(s6), [\"\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03b9\u03bf\u03b8\u03b5\u03c3\u03af\u03b1\u03c2\"])\n        s7 = \"\"\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\"\"\n        self.assertEqual(longest_words(s7), [\"reprehenderit\"])\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 3 <p>template2_3_sol.py<pre><code>import unittest\n\n\ndef longest_words(s):\n    s = s.replace(\".\", \" \")\n    s = s.replace(\",\", \" \")\n    words = [w.strip() for w in s.split()]\n    if words == []:\n        return []\n    max_length = max([len(w) for w in words])\n    return sorted([w for w in words if len(w) == max_length])\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestLongestWords(unittest.TestCase):\n    def test(self):\n        s1 = \"\"\n        self.assertEqual(longest_words(s1), [])\n        s2 = \"arta\"\n        self.assertEqual(longest_words(s2), [\"arta\"])\n        s3 = \"arta \u0386\u03c1\u03c4\u03b1\"\n        self.assertEqual(longest_words(s3), [\"arta\", \"\u0386\u03c1\u03c4\u03b1\"])\n        s4 = \"....arta,,, \u0386\u03c1\u03c4\u03b1.....\"\n        self.assertEqual(longest_words(s4), [\"arta\", \"\u0386\u03c1\u03c4\u03b1\"])\n        s5 = \"ab,,cd..ef gh..\"\n        self.assertEqual(longest_words(s5), [\"ab\", \"cd\", \"ef\", \"gh\"])\n        s6 = \"\"\"\u03a4\u03bf Lorem Ipsum \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c0\u03bb\u03ac \u03ad\u03bd\u03b1 \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c7\u03c9\u03c1\u03af\u03c2 \u03bd\u03cc\u03b7\u03bc\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03c5\u03c2 \u03b5\u03c0\u03b1\u03b3\u03b3\u03b5\u03bb\u03bc\u03b1\u03c4\u03af\u03b5\u03c2 \u03c4\u03b7\u03c2 \u03c4\u03c5\u03c0\u03bf\u03b3\u03c1\u03b1\u03c6\u03af\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03b9\u03bf\u03b8\u03b5\u03c3\u03af\u03b1\u03c2 \u03a4\u03bf Lorem Ipsum \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03b5\u03c0\u03b1\u03b3\u03b3\u03b5\u03bb\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c0\u03c1\u03cc\u03c4\u03c5\u03c0\u03bf \u03cc\u03c3\u03bf\u03bd \u03b1\u03c6\u03bf\u03c1\u03ac \u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c7\u03c9\u03c1\u03af\u03c2 \u03bd\u03cc\u03b7\u03bc\u03b1, \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd 15\u03bf \u03b1\u03b9\u03ce\u03bd\u03b1, \u03cc\u03c4\u03b1\u03bd \u03ad\u03bd\u03b1\u03c2 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03bf\u03c2 \u03c4\u03c5\u03c0\u03bf\u03b3\u03c1\u03ac\u03c6\u03bf\u03c2 \u03c0\u03ae\u03c1\u03b5 \u03ad\u03bd\u03b1 \u03b4\u03bf\u03ba\u03af\u03bc\u03b9\u03bf \u03ba\u03b1\u03b9 \u03b1\u03bd\u03b1\u03ba\u03ac\u03c4\u03b5\u03c8\u03b5 \u03c4\u03b9\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03b4\u03b5\u03af\u03b3\u03bc\u03b1 \u03b2\u03b9\u03b2\u03bb\u03af\u03bf\u03c5 \u038c\u03c7\u03b9 \u03bc\u03cc\u03bd\u03bf \u03b5\u03c0\u03b9\u03b2\u03af\u03c9\u03c3\u03b5 \u03c0\u03ad\u03bd\u03c4\u03b5 \u03b1\u03b9\u03ce\u03bd\u03b5\u03c2 \u03b1\u03bb\u03bb\u03ac \u03ba\u03c5\u03c1\u03b9\u03ac\u03c1\u03c7\u03b7\u03c3\u03b5 \u03c3\u03c4\u03b7\u03bd \u03b7\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ae \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03b9\u03bf\u03b8\u03b5\u03c3\u03af\u03b1 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2 \u03bc\u03b5 \u03ba\u03ac\u03b8\u03b5 \u03c4\u03c1\u03cc\u03c0\u03bf \u03b1\u03bd\u03b1\u03bb\u03bb\u03bf\u03af\u03c9\u03c4\u03bf \u0388\u03b3\u03b9\u03bd\u03b5 \u03b4\u03b7\u03bc\u03bf\u03c6\u03b9\u03bb\u03ad\u03c2 \u03c4\u03b7 \u03b4\u03b5\u03ba\u03b1\u03b5\u03c4\u03af\u03b1 \u03c4\u03bf\u03c5 '60 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b4\u03b5\u03b9\u03b3\u03bc\u03ac\u03c4\u03c9\u03bd \u03c4\u03b7\u03c2 Letraset \u03cc\u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03b5\u03bb\u03ac\u03bc\u03b2\u03b1\u03bd\u03b1\u03bd \u03b1\u03c0\u03bf\u03c3\u03c0\u03ac\u03c3\u03bc\u03b1\u03c4\u03b1 \u03c4\u03bf\u03c5 Lorem Ipsum \u03ba\u03b1\u03b9 \u03c0\u03b9\u03bf \u03c0\u03c1\u03cc\u03c3\u03c6\u03b1\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03bf \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03b9\u03ba\u03cc \u03b7\u03bb\u03b5\u03ba\u03c4\u03c1\u03bf\u03bd\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b5\u03bb\u03b9\u03b4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03c4\u03bf Aldus PageMaker \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03b5\u03af\u03c7\u03b1\u03bd \u03b5\u03ba\u03b4\u03bf\u03c7\u03ad\u03c2 \u03c4\u03bf\u03c5 Lorem Ipsum\"\"\"\n        self.assertEqual(longest_words(s6), [\"\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03b9\u03bf\u03b8\u03b5\u03c3\u03af\u03b1\u03c2\"])\n        s7 = \"\"\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"\"\"\n        self.assertEqual(longest_words(s7), [\"reprehenderit\"])\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python template2_3_sol.py\n.\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E2A4 - \u0393\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c4\u03b9\u03bc\u03ce\u03bd 56, 37, 771, 90, 16, 11 \u03b3\u03c1\u03ac\u03c8\u03c4\u03b5 comprehensions \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03ba\u03ac\u03bd\u03bf\u03c5\u03bd \u03c4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1:</p> <ol> <li>\u039d\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03bd\u03ad\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03c8\u03b7\u03c6\u03af\u03c9\u03bd \u03ba\u03ac\u03b8\u03b5 \u03c4\u03b9\u03bc\u03ae\u03c2.</li> <li>\u039d\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03bd\u03ad\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03b1 \u03c8\u03b7\u03c6\u03af\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03c4\u03b9\u03bc\u03ae\u03c2 \u03c3\u03b5 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03c1\u03bf\u03c6\u03b7 \u03c3\u03b5\u03b9\u03c1\u03ac.</li> <li>\u039d\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03bd\u03ad\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03cc\u03bd\u03bf \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b5\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf \u03bc\u03ad\u03c3\u03bf \u03cc\u03c1\u03bf \u03c4\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd.</li> <li>\u039d\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03bd\u03ad\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03b6\u03b5\u03cd\u03b3\u03b7 \u03c4\u03b9\u03bc\u03ce\u03bd \u03c0\u03bf\u03c5 \u03c4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03ba\u03ac\u03b8\u03b5 \u03b6\u03b5\u03cd\u03b3\u03bf\u03c5\u03c2 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03af\u03b4\u03b9\u03b1 \u03c4\u03b9\u03bc\u03ae \u03ba\u03b1\u03b9 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03bc\u03b9\u03b1 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03c4\u03b9\u03bc\u03ae \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ae True \u03b1\u03bd \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03ac\u03c1\u03c4\u03b9\u03b1 \u03b1\u03bb\u03bb\u03b9\u03ce\u03c2 \u03b7 \u03c4\u03b9\u03bc\u03ae False.</li> </ol> <p>\u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf template \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03bb\u03cd\u03c3\u03b7 \u03c3\u03b1\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 \u03c3\u03b5 \u03cc\u03bb\u03b1 \u03c4\u03b1 unit tests.</p> template2_4.py<pre><code>import unittest\n\n\nclass TestComprehensions(unittest.TestCase):\n    def test1(self):\n        a_list = [56, 37, 771, 90, 16, 11]\n        b_list = None # \u03b1\u03bb\u03bb\u03ac\u03be\u03c4\u03b5 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b1\u03c0\u03b1\u03bd\u03c4\u03ae\u03c3\u03b5\u03c4\u03b5 \u03c4\u03bf \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 1\n        self.assertEqual(b_list, [2,2,3,2,2,2])         \n\n    def test2(self):\n        a_list = [56, 37, 771, 90, 16, 11]\n        b_list = None # \u03b1\u03bb\u03bb\u03ac\u03be\u03c4\u03b5 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b1\u03c0\u03b1\u03bd\u03c4\u03ae\u03c3\u03b5\u03c4\u03b5 \u03c4\u03bf \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 2\n        self.assertEqual(b_list, [65,73,177,9,61,11])         \n\n    def test3(self):\n        a_list = [56, 37, 771, 90, 16, 11]\n        b_list = None # \u03b1\u03bb\u03bb\u03ac\u03be\u03c4\u03b5 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b1\u03c0\u03b1\u03bd\u03c4\u03ae\u03c3\u03b5\u03c4\u03b5 \u03c4\u03bf \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 3\n        self.assertEqual(b_list, [771])         \n\n    def test4(self):\n        a_list = [56, 37, 771, 90, 16, 11]\n        b_list = None # \u03b1\u03bb\u03bb\u03ac\u03be\u03c4\u03b5 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b1\u03c0\u03b1\u03bd\u03c4\u03ae\u03c3\u03b5\u03c4\u03b5 \u03c4\u03bf \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 4\n        self.assertEqual(b_list, [(56,True), (37,False), (771,False), (90, True), (16, True), (11, False)]) \n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 4 <p>template2_4_sol.py<pre><code>import unittest\n\n\nclass TestComprehensions(unittest.TestCase):\n    def test1(self):\n        a_list = [56, 37, 771, 90, 16, 11]\n        b_list = [len(str(x)) for x in a_list]\n        self.assertEqual(b_list, [2,2,3,2,2,2])         \n\n    def test2(self):\n        a_list = [56, 37, 771, 90, 16, 11]\n        b_list = [int(str(x)[::-1]) for x in a_list]\n        self.assertEqual(b_list, [65,73,177,9,61,11])         \n\n    def test3(self):\n        a_list = [56, 37, 771, 90, 16, 11]\n        b_list = [x for x in a_list if x &gt; sum(a_list)/len(a_list)]\n        self.assertEqual(b_list, [771])         \n\n    def test4(self):\n        a_list = [56, 37, 771, 90, 16, 11]\n        b_list = [(x, x%2==0) for x in a_list]\n        self.assertEqual(b_list, [(56,True), (37,False), (771,False), (90, True), (16, True), (11, False)])         \n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python template2_4_sol.py\n....\n----------------------------------------------------------------------\nRan 4 tests in 0.000s\n\nOK\n</code></pre></p>"},{"location":"lab2_python/#_2","title":"\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03b5\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E2A5 \u03a3\u03b5 \u03ad\u03bd\u03b1\u03bd \u03c6\u03ac\u03ba\u03b5\u03bb\u03bf \u03c3\u03c4\u03b7\u03bd \u03b5\u03c0\u03b9\u03c6\u03ac\u03bd\u03b5\u03b9\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>e2a5</code>, \u03b1\u03c0\u03cc \u03c4\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 virtual environment \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>myenv</code> \u03ba\u03b1\u03b9 \u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03c3\u03b5 Windows:</p> <pre><code>&gt; python -m venv myenv\n&gt; myenv\\Scripts\\activate.bat\n</code></pre> <p>\u03ae \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03c3\u03b5 Linux \u03ae MacOS:</p> <pre><code>$ python -m venv myenv\n$ source myenv/bin/activate\n</code></pre> <p>\u0395\u03b3\u03ba\u03b1\u03c4\u03b1\u03c3\u03c4\u03ae\u03c3\u03c4\u03b5 \u03c3\u03c4\u03bf <code>myenv</code> \u03bc\u03b5 \u03c4\u03bf <code>pip</code> \u03c4\u03b7 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7 Faker. </p> <pre><code>(myenv) &gt; pip install faker\n</code></pre> <p>\u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 (\u03cc\u03bd\u03bf\u03bc\u03b1, \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7, \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1 \u03b3\u03ad\u03bd\u03bd\u03b7\u03c3\u03b7\u03c2) \u03b3\u03b9\u03b1 100 \u03c5\u03c0\u03bf\u03b8\u03b5\u03c4\u03b9\u03ba\u03ac \u03ac\u03c4\u03bf\u03bc\u03b1 \u03b7\u03bb\u03b9\u03ba\u03b9\u03ce\u03bd \u03b1\u03c0\u03cc 18 \u03ad\u03c9\u03c2 90 \u03b5\u03c4\u03ce\u03bd \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>fake100.txt</code> \u03bc\u03b5 \u03b5\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac \u03b5\u03c1\u03c9\u03c4\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac (;) \u03c9\u03c2 \u03b4\u03b9\u03b1\u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03c4\u03c9\u03bd \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd \u03ba\u03ac\u03b8\u03b5 \u03b1\u03c4\u03cc\u03bc\u03bf\u03c5. \u03a3\u03c5\u03bc\u03b2\u03bf\u03c5\u03bb\u03b5\u03c5\u03c4\u03b5\u03af\u03c4\u03b5 \u03c4\u03b7\u03bd \u03c4\u03b5\u03ba\u03bc\u03b7\u03c1\u03af\u03c9\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03ba\u03b1\u03bb\u03ad\u03c3\u03b5\u03c4\u03b5. \u03a6\u03c1\u03bf\u03bd\u03c4\u03af\u03c3\u03c4\u03b5 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03bd\u03b1 \u03b4\u03af\u03bd\u03b5\u03b9 \u03ba\u03ac\u03b8\u03b5 \u03c6\u03bf\u03c1\u03ac \u03c4\u03b9\u03c2 \u03af\u03b4\u03b9\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2. </p> <p>\u0391\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03b5\u03af \u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc\u03c3\u03c0\u03b1\u03c3\u03bc\u03b1 \u03c4\u03c5\u03c7\u03b1\u03af\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03c0\u03bf\u03c5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9:</p> <pre><code>Allison Hill;819 Johnson Course, East William, AK 74064;1947-09-15\nKimberly Robinson;65423 Garcia Light, West Melanieview, AS 06196;1986-06-17\nValerie Gray;310 Kendra Common Apt. 164, Reidstad, GA 49021;1959-02-15\nMia Sutton;327 Nelson Route, Lake Mark, WI 07832;1949-11-29\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 5 <p>e2a5.py<pre><code>from faker import Faker\n\nfake = Faker()\nFaker.seed(42)\n\n\ndef generate_fake_person():\n    name = fake.name()\n    address = fake.address().replace(\"\\n\", \", \")\n    birthdate = fake.date_of_birth(minimum_age=18, maximum_age=90)\n    return f\"{name};{address};{birthdate}\"\n\n\ndef generate_fake_persons(num_persons=100):\n    persons = []\n    for _ in range(num_persons):\n        person = generate_fake_person()\n        persons.append(person)\n    return persons\n\n\ndef write_to_file(data, filename):\n    with open(filename, \"w\", encoding=\"utf-8\") as file:\n        for person in data:\n            file.write(person + \"\\n\")\n\n\nif __name__ == \"__main__\":\n    num_persons = 100\n    fake_persons = generate_fake_persons(num_persons)\n    filename = \"fake100.txt\"\n    write_to_file(fake_persons, filename)\n    print(\n        f\"\u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd {num_persons} \u03c5\u03c0\u03bf\u03b8\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c4\u03cc\u03bc\u03c9\u03bd \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf {filename}.\"\n    )\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python e2a5.py\n\u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd 100 \u03c5\u03c0\u03bf\u03b8\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c4\u03cc\u03bc\u03c9\u03bd \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf fake100.txt.\n</code></pre> fake100.txt<pre><code>Allison Hill;819 Johnson Course, East William, AK 74064;1947-09-15\nKimberly Robinson;65423 Garcia Light, West Melanieview, AS 06196;1986-06-17\nValerie Gray;310 Kendra Common Apt. 164, Reidstad, GA 49021;1959-02-15\nMia Sutton;327 Nelson Route, Lake Mark, WI 07832;1949-11-29\nEthan Adams;76724 John Points Suite 969, Coxberg, NY 65187;1939-10-29\nBrian Burton;166 Rice Plaza Apt. 184, Danielchester, GA 59971;1933-06-05\nMichelle Stanton;489 Eric Track, New Stephanie, NC 00575;1976-11-29\nBrian Cox DVM;39117 Tiffany Place, East Donna, OH 22144;1952-07-16\nJenny Lewis;465 Lam Mission, East Jeffreymouth, AK 77611;1973-08-17\nAdrienne Zimmerman;51834 Lewis Curve, Sanchezfort, AS 53855;1947-02-02\nJeffrey Henderson;106 Mcbride Coves, East James, NV 18874;1963-12-27\nDavid Leblanc;80132 Tucker Forest, Barreraburgh, MS 00783;2005-02-12\nRichard Gibson;34309 Julie Centers Apt. 978, North Susan, CO 24857;1938-03-11\nScott Powell;USNS Riley, FPO AE 81684;1939-03-05\nKrystal Stewart;46247 Hickman Cliffs Apt. 799, North Amandahaven, KS 17862;2001-04-26\nSherry Wood;808 Huynh Cove Apt. 411, West Juan, IL 94559;1958-03-22\nSarah Wagner;64005 Dana Greens, Lake Scott, VT 56558;1974-02-19\nTony Vazquez;9826 Bobby Lakes, West Jasonbury, TN 13974;1959-01-04\nShelly Dickson;26025 Pham Way, West Erik, UT 14669;1961-02-11\nJohn Gonzalez;PSC 5433, Box 0365, APO AA 09600;2003-10-10\nMartin Ross;Unit 8501 Box 4294, DPO AE 14709;1976-09-27\nRichard Graham;Unit 1693 Box 4060, DPO AP 71076;1983-05-01\nNancy Gonzalez;514 Estrada Islands Suite 482, South Elizabeth, MS 89278;1987-10-21\nKeith Sullivan;3699 Marshall Mills Apt. 872, West Zacharymouth, CO 98954;1950-05-03\nRobert Hernandez;176 Jennifer Lights Suite 632, Port Michelleville, WI 56225;1949-03-01\nMelissa Marshall;2788 Dodson Mills, Rivasside, NV 21362;1987-06-24\nDavid Wright;347 Jennifer Freeway Suite 558, East Edwardfurt, UT 20529;1984-10-04\nJason Daniels;6909 Woods Knoll, Karenchester, ND 98479;1986-10-26\nStephanie Freeman;65627 Tina Place Apt. 699, North Dawnberg, VI 61016;1946-06-16\nGarrett Gibson;6417 Kaitlyn Center Suite 310, East Jamestown, RI 20474;1950-08-09\nBrian Gould;2991 Tami Coves Apt. 496, Davidborough, CA 78108;1983-08-09\nAshley Barton;058 Stanley Cliff, Alexanderchester, GU 64752;1940-11-22\nMadison Poole;84987 Graham Street Suite 531, Nicolebury, WV 61411;1974-10-15\nGabrielle Snyder;54549 Peters Path Apt. 136, Petersbury, UT 62903;1980-05-04\nRicky Davis II;957 Coleman Summit Suite 574, Johnville, VA 25743;1956-03-23\nTiffany Vaughn;9894 Marissa Hill Apt. 524, Lake Amandaview, AZ 07647;1973-08-02\nBeth Oneill;477 Peterson Center, Shelleyfort, DE 09065;1962-06-11\nMark Brown;31869 Kimberly Light Suite 749, Torreston, RI 97505;1940-06-07\nLori Baker;81206 Norris Mountains, Antonioport, VT 37557;1984-07-04\nMichael Bradshaw;1832 Serrano Cliffs, East Laurashire, PW 38329;1965-04-01\nEric Powell;1906 Munoz Burg Apt. 399, Port Emilyview, OK 05774;1988-11-23\nJoseph Ramos;717 Ortiz Islands Apt. 256, Robertsfurt, GU 72603;1935-11-14\nDavid Wilson;876 Jacob Lake, Garrettton, IL 35504;1973-04-13\nJessica Wolfe;248 Andrea Course, Port Robin, NH 15897;1980-06-21\nTimothy Carter;7378 Patrick Rapid Apt. 146, Sarahhaven, KY 00837;1953-11-02\nKevin Duarte;8755 Gibson Islands, Lake John, MS 31114;1995-09-05\nEvan Kennedy;PSC 6627, Box 0289, APO AA 13655;1997-01-02\nJoseph Bryant;217 Morgan Square Suite 158, Finleyfort, VI 71413;1935-10-24\nMark Mccall;Unit 1611 Box 7240, DPO AE 43017;1991-04-23\nJames Thomas;21969 Tyler Prairie, East Steven, KS 60737;1951-10-30\nRobert Santana;75946 Bryant Hollow, South Melissa, CT 31592;1961-01-11\nEdward Lyons;0909 Wall Heights Apt. 953, New John, WV 94994;1989-03-20\nBreanna Davis;7095 Christopher Hill, Julieburgh, ID 17823;1990-08-09\nHolly Shaw;7451 Mccarty Divide, Port Erica, TX 52590;2003-10-20\nHolly Gibbs;5496 Rodriguez Fort, Johnsonside, MD 80465;1949-05-08\nRodney Blankenship;20047 Colton Plain Apt. 675, Matthewsberg, FM 54880;1980-12-31\nLisa Crosby;77351 Stephens Rue Suite 064, North Stacy, GU 60101;1939-11-19\nMark Maddox;29318 Brenda Via Apt. 529, West Micheleberg, DC 71308;1951-06-28\nMatthew Johnson;502 Williams Streets, Foxland, NJ 59257;1989-12-26\nAshley Gordon;USS Acosta, FPO AP 68848;1955-03-18\nAmanda Lutz;177 Rachel Islands Apt. 124, Oscarhaven, LA 59970;1970-02-04\nRicky Wilson;7365 Ross Stream, West Ronaldview, MN 20507;1983-04-30\nBrandon Miller;80988 Santiago Loop Suite 604, Michaelshire, NY 28385;1944-06-26\nDr. Gregory Hawkins;368 Chelsea Shoals Suite 024, Sandrastad, AL 24278;1996-09-09\nJennifer Thomas;83667 Moore Inlet, Kimberlyshire, PA 11636;1997-09-03\nPaul Williams;679 Perry Forge Apt. 561, Erikashire, NM 69567;1981-11-21\nJames Greene;24451 Tyler Meadows Apt. 268, New Angelica, TN 46922;1938-06-14\nAmanda Smith;PSC 5969, Box 6641, APO AA 03234;2003-09-21\nTravis Stevens;61369 Warren Locks Suite 535, North William, DE 70048;1970-06-01\nHannah Luna;12432 Kathleen Shoal, East Stephaniefort, NH 99387;1974-05-05\nMelanie Macias;527 Taylor Roads Suite 490, Williamport, NH 59734;1935-12-08\nDustin Newman;Unit 1998 Box 6798, DPO AP 05877;1966-01-08\nMarissa Morris;71518 Benjamin Station, Ritterhaven, NC 80429;1944-10-11\nDouglas Ortiz;515 Angela Lights, Johnathanberg, MA 11183;1975-09-24\nGregory Ponce;91486 Li Skyway Apt. 685, West Kyleborough, MA 64237;1947-03-17\nMrs. Elizabeth French DDS;592 Moore Falls, Lake Samuel, MT 48250;1982-07-25\nJeremy Mitchell;83473 Gregory Ports Suite 746, Burchborough, AS 79755;1943-04-18\nMartin Sawyer;814 Kathryn Groves, Whiteheadberg, MP 57841;1939-11-20\nRuth Wilkerson;USCGC Brown, FPO AP 49516;1950-05-27\nJade Johnson DVM;20472 West Avenue Apt. 043, New Shelby, PA 69677;1964-02-02\nCynthia Martinez;17980 Jennifer Highway Suite 095, New Robert, TN 88085;1939-06-10\nAndrea Fox;7065 Burgess Knolls, West Johnville, WI 76772;1986-11-10\nAndrew Payne;772 Bryan Trail, Johnsonborough, AZ 26645;1997-11-07\nEric Sanders;0345 Michelle Isle Suite 156, Paulfurt, MA 24987;1969-05-31\nTim Stone PhD;9284 Garcia Islands, Kirkchester, GA 90909;1965-08-05\nNicholas Buck;0165 Stephanie Divide Suite 021, Port Deanna, MN 50682;2002-07-02\nChristian Cole;92856 Banks Gateway Apt. 027, Mcintyreville, KS 34617;1984-08-01\nLogan Benson;Unit 3121 Box 7271, DPO AP 42390;1981-12-10\nKrista Roberts;258 David Flats, East Kristy, AK 47804;1973-08-19\nRobert Arnold;46786 Morrow Cliffs, West Dawn, NV 61558;1982-11-02\nShawn Deleon;68018 Kevin Estates, Sarahbury, MI 68513;1998-07-09\nDanielle Reid;498 Wayne Extension, East Donna, VA 79817;1957-11-01\nAmanda Shields;396 Tyler Road Suite 473, Evansland, UT 08353;1944-09-23\nJohn Peterson;562 Robertson Coves Suite 371, Shannonberg, CT 07133;1954-05-17\nLuis Wright;9532 Ferrell Mountain, Kochfort, AK 12303;2002-03-11\nTracy Lewis;7974 Melanie Meadows, West Jessica, WV 53356;1959-11-26\nKelly Lee;8784 David Court, Brooksmouth, OH 48421;1988-04-20\nJordan Porter;578 Hernandez Passage, West Sarah, MD 21800;1961-11-16\nSarah Wheeler;947 Micheal Spring Apt. 694, New Thomasshire, OK 30325;1985-11-07\nCarolyn Fuller;30913 Scott Manor Apt. 636, Salaston, VT 18599;1971-01-20\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E2A6 \u039c\u03b9\u03b1 \u03ac\u03bb\u03bb\u03b7 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7 \u03b3\u03b9\u03b1 unit tests \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b5\u03be\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03ae \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7 pytest. \u0395\u03c0\u03b9\u03bb\u03cd\u03c3\u03c4\u03b5 \u03be\u03b1\u03bd\u03ac \u03c4\u03b7\u03bd \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 \u03952\u03911 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7 \u03c6\u03bf\u03c1\u03ac \u03c4\u03b7\u03bd pytest \u03b3\u03b9\u03b1 \u03c4\u03bf\u03c5\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5\u03c2.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 6 <p>\u03a0\u03c1\u03ce\u03c4\u03b1 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03b3\u03ba\u03b1\u03c4\u03b1\u03c3\u03c4\u03b1\u03b8\u03b5\u03af \u03b7 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7 pytest. <pre><code>(myenv) &gt; pip install pytest\n</code></pre></p> <p>\u039f \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03c4\u03bf\u03c5\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5\u03c2 \u03bc\u03b5 \u03c4\u03bf pytest \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03b5\u03af: e2a6_test.py<pre><code>import pytest\n\n\ndef hamming_distance(s, t):\n    if len(s) != len(t):\n        return -1\n    c = 0\n    for i in range(len(s)):\n        if s[i] != t[i]:\n            c += 1\n    return c\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\ndef test_HD():\n    assert hamming_distance(\"G\", \"\") == -1\n    assert hamming_distance(\"\", \"G\") == -1\n    assert hamming_distance(\"G\", \"A\") == 1\n    assert hamming_distance(\"G\", \"G\") == 0\n    assert hamming_distance(\"GA\", \"GA\") == 0\n    assert hamming_distance(\"GA\", \"AG\") == 2\n    assert hamming_distance(\"AGCT\", \"AGCT\") == 0\n    assert hamming_distance(\"AGCT\", \"TCGA\") == 4\n    assert hamming_distance(\"GAGCCTACTAACGGGAT\", \"CATCGTAATGACGGCCT\") == 7\n\n\nif __name__ == \"__main__\":\n    pytest.main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python e2a6_test.py\n============================ test session starts =============================\nplatform darwin -- Python 3.10.12, pytest-8.1.1, pluggy-1.4.0\nrootdir: XXX/src/python/lab2\nplugins: Faker-24.1.0\ncollected 1 item\n\ne2a6_test.py .                                                         [100%]\n\n============================= 1 passed in 0.02s ==============================\n</code></pre> \u03a3\u03c4\u03bf pytest \u03c4\u03bf \u03cc\u03bd\u03bf\u03bc\u03b1 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03b1 tests \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03be\u03b5\u03ba\u03b9\u03bd\u03ac \u03bc\u03b5 <code>test_</code> \u03ae \u03bd\u03b1 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03b5\u03b9 \u03bc\u03b5 <code>_test.py</code>. \u0395\u03c0\u03af\u03c3\u03b7\u03c2, \u03c4\u03b1 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5\u03c2 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03bc\u03b5 <code>test_</code> \u03ae \u03b7 \u03ba\u03bb\u03ac\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c9\u03c2 \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5\u03c2 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03cc\u03bd\u03bf\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03be\u03b5\u03ba\u03b9\u03bd\u03ac \u03bc\u03b5 <code>Test</code>. </p> <ol> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u21a9</p> </li> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 unittest \u21a9</p> </li> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 comprehensions \u21a9</p> </li> <li> <p>calmcode.io - comprehensions \u21a9</p> </li> <li> <p>calmcode.io - pytest \u21a9</p> </li> </ol>"},{"location":"lab3_haskell/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 3 \u03c3\u03c4\u03b7 \u0397askell","text":""},{"location":"lab3_haskell/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H3E1 \u0394\u03b9\u03b1\u03b2\u03ac\u03c3\u03c4\u03b5 \u03c4\u03bf Inside the Cult of the Haskell Programmer \u03b1\u03c0\u03cc \u03c4\u03bf \u03c0\u03b5\u03c1\u03b9\u03bf\u03b4\u03b9\u03ba\u03cc WIRED. \u03a3\u03c5\u03bc\u03c0\u03bb\u03b7\u03c1\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf\u03bd \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c0\u03bf\u03c5 \u03c6\u03b1\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03c3\u03c7\u03ae\u03bc\u03b1 \u03c4\u03bf\u03c5 \u03ac\u03c1\u03b8\u03c1\u03bf\u03c5 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c3\u03b5 Haskell \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03c3\u03c4\u03b7\u03bd \u03bf\u03b8\u03cc\u03bd\u03b7 \u03b1\u03c5\u03c4\u03cc \u03c0\u03bf\u03c5 \u03c0\u03b9\u03c3\u03c4\u03b5\u03cd\u03b5\u03c4\u03b5 \u03cc\u03c4\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03c3\u03ba\u03bf\u03c0\u03cc\u03c2 \u03c4\u03bf\u03c5. </p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 \u03973\u03951 <p>h3e1.hs<pre><code>primes :: [Integer]\nprimes = sieve [2..]\n    where \n        sieve (p:xs) = p: sieve [n | n &lt;- xs, n `mod` p /= 0 ] \n\nmain :: IO ()\nmain = do\n    print(take 1000 primes)\n</code></pre> \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7: <pre><code>$ runghc h3e1.hs\n[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997,1009,1013,1019,1021,1031,1033,1039,1049,1051,1061,1063,1069,1087,1091,1093,1097,1103,1109,1117,1123,1129,1151,1153,1163,1171,1181,1187,1193,1201,1213,1217,1223,1229,1231,1237,1249,1259,1277,1279,1283,1289,1291,1297,1301,1303,1307,1319,1321,1327,1361,1367,1373,1381,1399,1409,1423,1427,1429,1433,1439,1447,1451,1453,1459,1471,1481,1483,1487,1489,1493,1499,1511,1523,1531,1543,1549,1553,1559,1567,1571,1579,1583,1597,1601,1607,1609,1613,1619,1621,1627,1637,1657,1663,1667,1669,1693,1697,1699,1709,1721,1723,1733,1741,1747,1753,1759,1777,1783,1787,1789,1801,1811,1823,1831,1847,1861,1867,1871,1873,1877,1879,1889,1901,1907,1913,1931,1933,1949,1951,1973,1979,1987,1993,1997,1999,2003,2011,2017,2027,2029,2039,2053,2063,2069,2081,2083,2087,2089,2099,2111,2113,2129,2131,2137,2141,2143,2153,2161,2179,2203,2207,2213,2221,2237,2239,2243,2251,2267,2269,2273,2281,2287,2293,2297,2309,2311,2333,2339,2341,2347,2351,2357,2371,2377,2381,2383,2389,2393,2399,2411,2417,2423,2437,2441,2447,2459,2467,2473,2477,2503,2521,2531,2539,2543,2549,2551,2557,2579,2591,2593,2609,2617,2621,2633,2647,2657,2659,2663,2671,2677,2683,2687,2689,2693,2699,2707,2711,2713,2719,2729,2731,2741,2749,2753,2767,2777,2789,2791,2797,2801,2803,2819,2833,2837,2843,2851,2857,2861,2879,2887,2897,2903,2909,2917,2927,2939,2953,2957,2963,2969,2971,2999,3001,3011,3019,3023,3037,3041,3049,3061,3067,3079,3083,3089,3109,3119,3121,3137,3163,3167,3169,3181,3187,3191,3203,3209,3217,3221,3229,3251,3253,3257,3259,3271,3299,3301,3307,3313,3319,3323,3329,3331,3343,3347,3359,3361,3371,3373,3389,3391,3407,3413,3433,3449,3457,3461,3463,3467,3469,3491,3499,3511,3517,3527,3529,3533,3539,3541,3547,3557,3559,3571,3581,3583,3593,3607,3613,3617,3623,3631,3637,3643,3659,3671,3673,3677,3691,3697,3701,3709,3719,3727,3733,3739,3761,3767,3769,3779,3793,3797,3803,3821,3823,3833,3847,3851,3853,3863,3877,3881,3889,3907,3911,3917,3919,3923,3929,3931,3943,3947,3967,3989,4001,4003,4007,4013,4019,4021,4027,4049,4051,4057,4073,4079,4091,4093,4099,4111,4127,4129,4133,4139,4153,4157,4159,4177,4201,4211,4217,4219,4229,4231,4241,4243,4253,4259,4261,4271,4273,4283,4289,4297,4327,4337,4339,4349,4357,4363,4373,4391,4397,4409,4421,4423,4441,4447,4451,4457,4463,4481,4483,4493,4507,4513,4517,4519,4523,4547,4549,4561,4567,4583,4591,4597,4603,4621,4637,4639,4643,4649,4651,4657,4663,4673,4679,4691,4703,4721,4723,4729,4733,4751,4759,4783,4787,4789,4793,4799,4801,4813,4817,4831,4861,4871,4877,4889,4903,4909,4919,4931,4933,4937,4943,4951,4957,4967,4969,4973,4987,4993,4999,5003,5009,5011,5021,5023,5039,5051,5059,5077,5081,5087,5099,5101,5107,5113,5119,5147,5153,5167,5171,5179,5189,5197,5209,5227,5231,5233,5237,5261,5273,5279,5281,5297,5303,5309,5323,5333,5347,5351,5381,5387,5393,5399,5407,5413,5417,5419,5431,5437,5441,5443,5449,5471,5477,5479,5483,5501,5503,5507,5519,5521,5527,5531,5557,5563,5569,5573,5581,5591,5623,5639,5641,5647,5651,5653,5657,5659,5669,5683,5689,5693,5701,5711,5717,5737,5741,5743,5749,5779,5783,5791,5801,5807,5813,5821,5827,5839,5843,5849,5851,5857,5861,5867,5869,5879,5881,5897,5903,5923,5927,5939,5953,5981,5987,6007,6011,6029,6037,6043,6047,6053,6067,6073,6079,6089,6091,6101,6113,6121,6131,6133,6143,6151,6163,6173,6197,6199,6203,6211,6217,6221,6229,6247,6257,6263,6269,6271,6277,6287,6299,6301,6311,6317,6323,6329,6337,6343,6353,6359,6361,6367,6373,6379,6389,6397,6421,6427,6449,6451,6469,6473,6481,6491,6521,6529,6547,6551,6553,6563,6569,6571,6577,6581,6599,6607,6619,6637,6653,6659,6661,6673,6679,6689,6691,6701,6703,6709,6719,6733,6737,6761,6763,6779,6781,6791,6793,6803,6823,6827,6829,6833,6841,6857,6863,6869,6871,6883,6899,6907,6911,6917,6947,6949,6959,6961,6967,6971,6977,6983,6991,6997,7001,7013,7019,7027,7039,7043,7057,7069,7079,7103,7109,7121,7127,7129,7151,7159,7177,7187,7193,7207,7211,7213,7219,7229,7237,7243,7247,7253,7283,7297,7307,7309,7321,7331,7333,7349,7351,7369,7393,7411,7417,7433,7451,7457,7459,7477,7481,7487,7489,7499,7507,7517,7523,7529,7537,7541,7547,7549,7559,7561,7573,7577,7583,7589,7591,7603,7607,7621,7639,7643,7649,7669,7673,7681,7687,7691,7699,7703,7717,7723,7727,7741,7753,7757,7759,7789,7793,7817,7823,7829,7841,7853,7867,7873,7877,7879,7883,7901,7907,7919]\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 H3E2 \u0395\u03b3\u03ba\u03b1\u03c4\u03b1\u03c3\u03c4\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7 <code>HUnit</code> \u03bc\u03b5 \u03c4\u03bf <code>cabal</code>. \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03c3\u03c4\u03bf \u03ba\u03b1\u03c4\u03ac\u03bb\u03bb\u03b7\u03bb\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03c4\u03b1 unit tests \u03c4\u03bf\u03c5 <code>H3e2Test.hs</code> \u03c0\u03bf\u03c5 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03b5\u03af \u03bd\u03b1 \u03c0\u03b5\u03c1\u03bd\u03ac\u03bd\u03b5.</p> Unit tests h3e2Test.hs<pre><code>import H3e2\nimport Test.HUnit\n\ntests :: Test\ntests =\n  TestList\n    [ \n        \"rectangle\"  ~: rectangle 2 5 ~?= 10,\n        \"power\"  ~: power 2 10 ~?= 1024,\n        \"sumList\"  ~: sumList [1,2,3,4,5] ~?= 15,\n        \"isPrime 57\"  ~: isPrime 57 ~?= False,\n        \"isPrime 101\"  ~: isPrime 101 ~?= True\n    ]\n\nmain :: IO ()\nmain = do\n  _ &lt;- runTestTT tests\n  return ()\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 H3E2 <p>\u0395\u03b3\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7\u03c2 HUnit: <pre><code>$ cabal install --lib HUnit\n</code></pre></p> <p>\u0391\u03c1\u03c7\u03b5\u03af\u03bf \u03bc\u03b5 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03c5\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5\u03c2: H3e2.hs<pre><code>module H3e2 where\n\n-- \u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03bc\u03b2\u03b1\u03b4\u03bf\u03cd \u03bf\u03c1\u03b8\u03bf\u03b3\u03c9\u03bd\u03af\u03bf\u03c5\nrectangle :: (Num a) =&gt; a -&gt; a -&gt; a\nrectangle h w = h * w\n\n-- \u038e\u03c8\u03c9\u03c3\u03b7 \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03bf\u03c5 \u03c3\u03b5 \u03bc\u03b7 \u03b1\u03c1\u03bd\u03b7\u03c4\u03b9\u03ba\u03ae \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b1 \u03b4\u03cd\u03bd\u03b1\u03bc\u03b7\npower :: Int -&gt; Int -&gt; Int\npower _ 0 = 1\npower x n = x * power x (n - 1)\n\n-- \u0386\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd \u03bb\u03af\u03c3\u03c4\u03b1\u03c2\nsumList :: [Int] -&gt; Int\nsumList [] = 0\nsumList (x:xs) = x + sumList xs \n\n-- \u0388\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03b1\u03bd \u03ad\u03bd\u03b1\u03c2 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03c1\u03ce\u03c4\u03bf\u03c2\nisPrime :: Int -&gt; Bool\nisPrime n\n  | n &lt;= 1    = False\n  | otherwise = not (any (\\x -&gt; n `mod` x == 0) [2..(n-1)])\n</code></pre></p> <p>\u0395\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03b5\u03bb\u03ad\u03b3\u03c7\u03c9\u03bd: <pre><code>$ runghc H3e2Test.hs\nCases: 5  Tried: 5  Errors: 0  Failures: 0\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 \u03973\u03953 \u03a3\u03c4\u03bf \u03ac\u03c1\u03b8\u03c1\u03bf Implementing Unsure Calculator in 100 lines of Haskell \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c3\u03b5 \u03bc\u03cc\u03bb\u03b9\u03c2 100 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c4\u03bf\u03c5 unsure calculator. \u03a6\u03bf\u03c1\u03c4\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf\u03bd \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 Haskell \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03b5\u03bb\u03ad\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ac\u03c1\u03b8\u03c1\u03bf\u03c5. </p>"},{"location":"lab3_prolog/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 3 \u03c3\u03c4\u03b7\u03bd Prolog","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: Prolog Unit Tests<sup>1</sup></p>"},{"location":"lab3_prolog/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 PRO3E1 \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03b2\u03ac\u03c3\u03b7 \u03b3\u03bd\u03ce\u03c3\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b1 \u03cc\u03c4\u03b9 \u03bf <code>john</code>  \u03ba\u03b1\u03b9 \u03bf <code>george</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03ac\u03bd\u03b4\u03c1\u03b5\u03c2, \u03bf\u03b9 <code>mary</code>, <code>susan</code> \u03ba\u03b1\u03b9 <code>alice</code> \u03b3\u03c5\u03bd\u03b1\u03af\u03ba\u03b5\u03c2, \u03bf <code>john</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03bf\u03bd\u03ad\u03b1\u03c2 \u03c4\u03b7\u03c2 <code>mary</code>, \u03b7 <code>mary</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03bf\u03bd\u03ad\u03b1\u03c2 \u03c4\u03b7\u03c2 <code>susan</code> \u03ba\u03b1\u03b9 \u03c4\u03bf\u03c5 <code>george</code>, \u03ba\u03b1\u03b9 \u03b7 <code>susan</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03bf\u03bd\u03ad\u03b1\u03c2 \u03c4\u03b7\u03c2 <code>alice</code>. \u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03bf\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>ancestor\\2</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03c0\u03cc\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03ac\u03c4\u03bf\u03bc\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03c1\u03cc\u03b3\u03bf\u03bd\u03bf\u03c2 \u03b5\u03bd\u03cc\u03c2 \u03ac\u03bb\u03bb\u03bf\u03c5 \u03b1\u03c4\u03cc\u03bc\u03bf\u03c5. \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ba\u03b1\u03c4\u03ac\u03bb\u03bb\u03b7\u03bb\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 tests \u03bd\u03b1 \u03c0\u03b5\u03c1\u03bd\u03ac\u03bd\u03b5.</p> pro3e1_tests.pl pro3e1_tests.pl<pre><code>:- begin_tests(dituoi_tests).\n:- use_module(pro3e1).\n\ntest(male_john) :- male(john).\n\ntest(female_mary) :- female(mary).\n\ntest(john_is_parent_of_mary) :- parent(mary, john).\n\n\ntest(direct_ancestor, [nondet]) :-  ancestor(john, mary).\ntest(indirect_ancestor, [nondet]) :-  ancestor(john, alice).\ntest(not_ancestor, [fail]) :-  ancestor(alice, john).\n\n:- end_tests(dituoi_tests).\n</code></pre> <p>\u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03ba\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd \u03c4\u03b1 tests.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 PRO3E1 pro3e1.pl<pre><code>:- module(pro3e1, [male/1, female/1, parent/2, ancestor/2]).\n\nmale(john).\nmale(george).\n\nfemale(mary).\nfemale(susan).\nfemale(alice).\n\nparent(john, mary).\nparent(mary, susan).\nparent(susan, alice).\nparent(mary, george).\n\nancestor(X, Y) :- parent(X, Y).\nancestor(X, Y) :- parent(X, Z), ancestor(Z, Y).\n</code></pre> <p>\u0395\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 swipl. <pre><code>$ swipl\nWelcome to SWI-Prolog (threaded, 64 bits, version 9.2.9)\nSWI-Prolog comes with ABSOLUTELY NO WARRANTY. This is free software.\nPlease run ?- license. for legal details.\n\nFor online help and background, visit https://www.swi-prolog.org\nFor built-in help, use ?- help(Topic). or ?- apropos(Word).\n</code></pre></p> <p>\u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 pro3e1_tests.pl (\u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03b1 tests). <pre><code>?- [pro3e1_tests].\ntrue.\n</code></pre></p> <p>\u0395\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03c9\u03bd tests. <pre><code>?- run_tests.\n[6/6] dituoi_tests:not_ancestor .................... passed (0.000 sec)\n% All 6 tests passed in 0.003 seconds (0.002 cpu)\n</code></pre></p> <p>\u0389 \u03b1\u03bd \u03b3\u03af\u03bd\u03b5\u03b9 \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03c3\u03c4\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03ba\u03b1\u03b9 \u03b8\u03ad\u03bb\u03bf\u03c5\u03bc\u03b5 \u03bd\u03b1 \u03be\u03b1\u03bd\u03b1\u03b4\u03bf\u03ba\u03b9\u03bc\u03ac\u03c3\u03bf\u03c5\u03bc\u03b5 \u03c4\u03b1 tests. <pre><code>?- make.\ntrue.\n?- run_tests.\n[6/6] dituoi_tests:not_ancestor .................... passed (0.000 sec)\n% All 6 tests passed in 0.003 seconds (0.002 cpu)\n</code></pre></p> <ol> <li> <p>Unit tests \u21a9</p> </li> </ol>"},{"location":"lab3_python/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 3 \u03c3\u03c4\u03b7\u03bd Python","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: \u03b1\u03c1\u03c7\u03b5\u03af\u03b1 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5<sup>1</sup>, \u03ba\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2<sup>2</sup><sup>3</sup><sup>4</sup> (regular expressions), \u03b1\u03c1\u03c7\u03b5\u03af\u03b1 XML<sup>5</sup>, \u03bc\u03bf\u03c1\u03c6\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 (\u03c0.\u03c7. \u03bc\u03b5 \u03c4\u03bf black<sup>6</sup>), \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7 imports \u03bc\u03b5 \u03c4\u03bf isort, docstrings.</p> <p>\u0395\u03c1\u03b3\u03b1\u03bb\u03b5\u03af\u03b1 \u03c0\u03b5\u03b9\u03c1\u03b1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03bc\u03b5 \u03ba\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2</p> <ul> <li>https://regex101.com/ </li> <li>https://regexr.com/</li> <li>https://pythex.org/</li> <li>https://regexper.com/ \u03bf\u03c0\u03c4\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03ba\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd</li> <li>https://regexcrossword.com/ </li> <li>https://alf.nu/RegexGolf</li> </ul>"},{"location":"lab3_python/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E3A1 - \u03a3\u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf tweet \u03bf Lex Fridman \u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03b7 \u03b1\u03bd\u03b1\u03bc\u03b5\u03bd\u03cc\u03bc\u03b5\u03bd\u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 \u03c0\u03bb\u03ae\u03b8\u03bf\u03c5\u03c2 \u03c4\u03c5\u03c7\u03b1\u03af\u03c9\u03bd \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ce\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd \u03c3\u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 0 \u03ad\u03c9\u03c2 1 \u03c0\u03bf\u03c5 \u03b1\u03c0\u03b1\u03b9\u03c4\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03ac \u03c4\u03bf\u03c5\u03c2 \u03bd\u03b1 \u03be\u03b5\u03c0\u03b5\u03c1\u03ac\u03c3\u03b5\u03b9 \u03c4\u03bf 1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03c3\u03b7 \u03bc\u03b5 e=2.718...</p> <p></p> <p>\u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf template \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03bb\u03cd\u03c3\u03b7 \u03c3\u03b1\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 \u03c3\u03c4\u03bf unit test (\u03c0\u03b1\u03c1\u03b1\u03c4\u03b7\u03c1\u03ae\u03c3\u03c4\u03b5 \u03cc\u03c4\u03b9 \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 2 docstrings):</p> template3_1.py<pre><code>import unittest\n\n\ndef e_approx(n):\n    \"\"\"\n    \u03a0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ac\u03c2 e=2.7182... \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03b9\u03ce\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c4\u03b7 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b1 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd\n    \u03c4\u03bf\u03c5 \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03c5\u03c7\u03b1\u03af\u03c9\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd \u03c3\u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 (0,1) \u03bc\u03ad\u03c7\u03c1\u03b9 \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03ac \u03c4\u03bf\u03c5\u03c2\n    \u03bd\u03b1 \u03be\u03b5\u03c0\u03b5\u03c1\u03ac\u03c3\u03b5\u03b9 \u03c4\u03bf 1.\n\n    \u039f\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1:\n        n (int): \u03a4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03b9\u03ce\u03c3\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b3\u03af\u03bd\u03bf\u03c5\u03bd.\n\n    \u0395\u03c0\u03b9\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9:\n        float: \u03a4\u03bf \u03bc\u03ad\u03c3\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03b5\u03c0\u03b1\u03bd\u03b1\u03bb\u03ae\u03c8\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b1\u03c0\u03b1\u03b9\u03c4\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b3\u03af\u03bd\u03b5\u03b9 \u03c4\u03bf\n        \u03c3\u03c5\u03c3\u03c9\u03c1\u03b5\u03c5\u03c4\u03b9\u03ba\u03cc \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc 1 \u03c3\u03b5 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2.\n\n    \"\"\"\n    pass\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass Test(unittest.TestCase):\n    \"\"\"\n    \u03a0\u03b5\u03c1\u03af\u03c0\u03c4\u03c9\u03c3\u03b7 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03b5\u03c0\u03b1\u03bb\u03ae\u03b8\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03b1\u03ba\u03c1\u03af\u03b2\u03b5\u03b9\u03b1\u03c2 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 e_approx.\n\n    \u0395\u03c0\u03b1\u03bb\u03b7\u03b8\u03b5\u03cd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03b7 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03b5\u03c6\u03cc\u03bc\u03b5\u03bd\u03b7 \u03c4\u03b9\u03bc\u03ae \u03b1\u03c0\u03cc \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 e_approx function \u03b5\u03af\u03bd\u03b1\u03b9\n    \u03ba\u03b1\u03c4\u03ac \u03c0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7 \u03af\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03b7 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ac e \u03bc\u03b5 \u03bc\u03b9\u03b1 \u03b1\u03bd\u03bf\u03c7\u03ae delta.\n    \"\"\"\n    def test_e_approximation(self):\n        self.assertAlmostEqual(e_approx(1_000_000), 2.718, delta=0.001)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 1 <p>template3_1_sol.py<pre><code>import unittest\nimport random\n\n\ndef e_approx(n):\n    \"\"\"\n    \u03a0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ac\u03c2 e=2.7182... \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03b9\u03ce\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c4\u03b7 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b1 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd\n    \u03c4\u03bf\u03c5 \u03b1\u03b8\u03c1\u03bf\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03c5\u03c7\u03b1\u03af\u03c9\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd \u03c3\u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 (0,1) \u03bc\u03ad\u03c7\u03c1\u03b9 \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03ac \u03c4\u03bf\u03c5\u03c2\n    \u03bd\u03b1 \u03be\u03b5\u03c0\u03b5\u03c1\u03ac\u03c3\u03b5\u03b9 \u03c4\u03bf 1.\n\n    \u039f\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1:\n        n (int): \u03a4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03b9\u03ce\u03c3\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b3\u03af\u03bd\u03bf\u03c5\u03bd.\n\n    \u0395\u03c0\u03b9\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9:\n        float: \u03a4\u03bf \u03bc\u03ad\u03c3\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03b5\u03c0\u03b1\u03bd\u03b1\u03bb\u03ae\u03c8\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b1\u03c0\u03b1\u03b9\u03c4\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b3\u03af\u03bd\u03b5\u03b9 \u03c4\u03bf\n        \u03c3\u03c5\u03c3\u03c9\u03c1\u03b5\u03c5\u03c4\u03b9\u03ba\u03cc \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc 1 \u03c3\u03b5 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2.\n\n    \"\"\"\n    total = 0\n    for _ in range(n):\n        s = 0\n        c = 0\n        while s &lt; 1:\n            s += random.random()\n            c += 1\n        total += c\n    return total / n\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass Test(unittest.TestCase):\n    \"\"\"\n    \u03a0\u03b5\u03c1\u03af\u03c0\u03c4\u03c9\u03c3\u03b7 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03b5\u03c0\u03b1\u03bb\u03ae\u03b8\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03b1\u03ba\u03c1\u03af\u03b2\u03b5\u03b9\u03b1\u03c2 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 e_approx.\n\n    \u0395\u03c0\u03b1\u03bb\u03b7\u03b8\u03b5\u03cd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03b7 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03b5\u03c6\u03cc\u03bc\u03b5\u03bd\u03b7 \u03c4\u03b9\u03bc\u03ae \u03b1\u03c0\u03cc \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 e_approx function \u03b5\u03af\u03bd\u03b1\u03b9\n    \u03ba\u03b1\u03c4\u03ac \u03c0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7 \u03af\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03b7 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ac e \u03bc\u03b5 \u03bc\u03b9\u03b1 \u03b1\u03bd\u03bf\u03c7\u03ae delta.\n    \"\"\"\n\n    def test_e_approximation(self):\n        self.assertAlmostEqual(e_approx(1_000_000), 2.718, delta=0.001)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python template3_1_sol.py\n.\n----------------------------------------------------------------------\nRan 1 test in 0.226s\n\nOK\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E3A2 - \u039a\u03b1\u03c4\u03b5\u03b2\u03ac\u03c3\u03c4\u03b5 \u03c3\u03b5 txt \u03bc\u03bf\u03c1\u03c6\u03ae \u03c4\u03bf \u03b2\u03b9\u03b2\u03bb\u03af\u03bf \u201c\u039c\u03b5\u03c4\u03b1\u03bc\u03cc\u03c1\u03c6\u03c9\u03c3\u03b7\u201d \u03c4\u03bf\u03c5 \u03a6\u03c1\u03ac\u03bd\u03c3\u03b9\u03c2 \u039a\u03ac\u03c6\u03ba\u03b1 \u03b1\u03c0\u03cc \u03c4\u03bf https://www.gutenberg.org/ebooks/5200 \u03ae \u03b1\u03c0\u03cc \u03c4\u03bf metamorphosis.txt. \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03b9\u03b1\u03b2\u03ac\u03b6\u03b5\u03b9 \u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf. \u03a3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1, \u03b1\u03c0\u03bf\u03bc\u03bf\u03bd\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c4\u03b7\u03c2 \u03c0\u03c1\u03ce\u03c4\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c1\u03ac\u03c6\u03bf\u03c5 (One morning \u03ad\u03c9\u03c2 looked), \u03bc\u03b5\u03c4\u03b1\u03c4\u03c1\u03ad\u03c8\u03c4\u03b5 \u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c3\u03b5 \u03c0\u03b5\u03b6\u03ac \u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1, \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bc\u03c0\u03bb\u03b7\u03c1\u03ce\u03c3\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03c0\u03b1\u03bd\u03c4\u03bf\u03cd\u03bd \u03c3\u03c4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1:</p> <ol> <li>\u03a0\u03bf\u03b9\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5; \u0393\u03b9\u03b1 \u03c4\u03bf \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 \u03b1\u03c5\u03c4\u03cc \u03cc\u03c0\u03c9\u03c2 \u03ba\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03b1 \u03b8\u03b5\u03c9\u03c1\u03ae\u03c3\u03c4\u03b5 \u03c9\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03bc\u03cc\u03bd\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 \u03c4\u03bf\u03c5 \u03b1\u03b3\u03b3\u03bb\u03b9\u03ba\u03bf\u03cd \u03b1\u03bb\u03c6\u03b1\u03b2\u03ae\u03c4\u03bf\u03c5. \u0395\u03c0\u03af\u03c3\u03b7\u03c2, \u03bc\u03b1\u03c2 \u03b5\u03bd\u03b4\u03b9\u03b1\u03c6\u03ad\u03c1\u03bf\u03c5\u03bd \u03bc\u03cc\u03bd\u03bf \u03bf\u03b9 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bc\u03b5\u03c4\u03b1\u03be\u03cd \u03c4\u03bf\u03c5\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2.</li> <li>\u03a0\u03bf\u03b9\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 'h' \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 'e';</li> <li>\u03a0\u03bf\u03b9\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bc\u03b5 5 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2;</li> <li>\u03a0\u03bf\u03b9\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03c3\u03c5\u03bd\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 'a', 's';</li> <li>\u03a0\u03bf\u03b9\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03c3\u03c5\u03bd\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 'a', 's' \u03c3\u03b5 \u03bf\u03c0\u03bf\u03b9\u03b1\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c3\u03b5\u03b9\u03c1\u03ac;</li> <li>\u03a0\u03bf\u03b9\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd \u03af\u03b4\u03b9\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1;</li> <li>\u03a0\u03bf\u03b9\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03b4\u03cd\u03bf \u03af\u03b4\u03b9\u03bf\u03c5\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2;</li> </ol> <p>\u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf template \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03bb\u03cd\u03c3\u03b7 \u03c3\u03b1\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 \u03c3\u03b5 \u03cc\u03bb\u03b1 \u03c4\u03b1 unit tests:</p> template3_2.py<pre><code># \u0398\u03b5\u03c9\u03c1\u03ae\u03c3\u03c4\u03b5 \u03c9\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03bc\u03cc\u03bd\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 \u03c4\u03bf\u03c5 \u03b1\u03b3\u03b3\u03bb\u03b9\u03ba\u03bf\u03cd \u03b1\u03bb\u03c6\u03b1\u03b2\u03ae\u03c4\u03bf\u03c5.\n\nimport re\nimport unittest\n\ntext = \"\"  # \u03bd\u03b1 \u03b1\u03bb\u03bb\u03b1\u03c7\u03b8\u03b5\u03af\n\n# \u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5\ndef q1():\n    ...\n\n\n# \u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 'h' \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 'e'\ndef q2():\n    ...\n\n\n# \u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bc\u03b5 5 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2\ndef q3():\n    ...\n\n\n# \u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03c3\u03c5\u03bd\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 'a', 's'\ndef q4():\n    ...\n\n\n# \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03c3\u03c5\u03bd\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 'a', 's' \u03c3\u03b5 \u03bf\u03c0\u03bf\u03b9\u03b1\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c3\u03b5\u03b9\u03c1\u03ac\ndef q5():\n    ...\n\n\n# \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd \u03af\u03b4\u03b9\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\ndef q6():\n    ...\n\n\n# \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 2 \u03af\u03b4\u03b9\u03bf\u03c5\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2\ndef q7():\n    ...\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestReExamples(unittest.TestCase):\n    def test_q1(self):\n        self.assertEqual(q1(), 70)\n\n    def test_q2(self):\n        self.assertEqual(q2(), 2)\n\n    def test_q3(self):\n        self.assertEqual(q3(), 12)\n\n    def test_q4(self):\n        self.assertEqual(q4(), 2)\n\n    def test_q5(self):\n        self.assertEqual(q5(), 3)\n\n    def test_q6(self):\n        self.assertEqual(q6(), 3)\n\n    def test_q7(self):\n        self.assertEqual(q7(), 1)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 2 <p>template3_2_sol.py<pre><code># \u0398\u03b5\u03c9\u03c1\u03ae\u03c3\u03c4\u03b5 \u03c9\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03bc\u03cc\u03bd\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 \u03c4\u03bf\u03c5 \u03b1\u03b3\u03b3\u03bb\u03b9\u03ba\u03bf\u03cd \u03b1\u03bb\u03c6\u03b1\u03b2\u03ae\u03c4\u03bf\u03c5.\nimport os\nimport re\nimport unittest\n\nfn = os.path.join(os.path.dirname(__file__), \"metamorphosis.txt\")\nwith open(fn, encoding=\"utf-8\") as f:\n    a_list = f.readlines()\n\ntext = \"\".join(a_list[45:52])\ntext = text.lower()\nprint(text)\n\n\n# \u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5\ndef q1():\n    results = re.findall(r\"\\b[a-z]+\\b\", text)\n    results = set(results)\n    # print(results)\n    return len(results)\n\n\ndef q1_alt1():  # 1\u03bf\u03c2 \u03b5\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03b5\u03c0\u03af\u03bb\u03c5\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 1\n    pattern = re.compile(r\"\\b[a-z]+\\b\")\n    results = pattern.findall(text)\n    results = set(results)\n    # print(results)\n    return len(results)\n\n\ndef q1_alt2():  # 2\u03bf\u03c2 \u03b5\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03b5\u03c0\u03af\u03bb\u03c5\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 1\n    pattern = re.compile(r\"\\b[a-z]+\\b\")\n    results = set()\n    for x in pattern.finditer(text):\n        results.add(x.group(0))\n    # print(results)\n    return len(results)\n\n\n# \u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 'h' \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 'e'\ndef q2():\n    results = re.findall(r\"\\bh[a-z]*e\\b\", text)\n    results = set(results)\n    # print(results)\n    return len(results)\n\n\n# \u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bc\u03b5 5 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2\ndef q3():\n    results = re.findall(r\"\\b[a-z]{5}\\b\", text)\n    results = set(results)\n    # print(results)\n    return len(results)\n\n\n# \u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03c3\u03c5\u03bd\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 'a', 's'\ndef q4():\n    results = re.findall(r\"\\b[a-z]*as[a-z]*\\b\", text)\n    results = set(results)\n    # print(results)\n    return len(results)\n\n\n# \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03c3\u03c5\u03bd\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2 'a', 's' \u03c3\u03b5 \u03bf\u03c0\u03bf\u03b9\u03b1\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c3\u03b5\u03b9\u03c1\u03ac\ndef q5():\n    results = re.findall(r\"\\b[a-z]*as|sa[a-z]*\\b\", text)\n    results = set(results)\n    # print(results)\n    return len(results)\n\n\n# \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd \u03af\u03b4\u03b9\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\ndef q6():\n    results = re.findall(r\"\\b([a-z])([a-z]*\\1)\\b\", text)\n    results = [x[0] + x[1] for x in results]\n    results = set(results)\n    # print(results)\n    return len(results)\n\n\n# \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 2 \u03af\u03b4\u03b9\u03bf\u03c5\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b5\u03c2\ndef q7():\n    results = re.findall(r\"\\b([a-z]{2})([a-z]*\\1)\\b\", text)\n    results = [x[0] + x[1] for x in results]\n    results = set(results)\n    # print(results)\n    return len(results)\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestReExamples(unittest.TestCase):\n    def test_q1(self):\n        self.assertEqual(q1(), 70)\n        self.assertEqual(q1_alt1(), 70)\n        self.assertEqual(q1_alt2(), 70)\n\n    def test_q2(self):\n        self.assertEqual(q2(), 2)\n\n    def test_q3(self):\n        self.assertEqual(q3(), 12)\n\n    def test_q4(self):\n        self.assertEqual(q4(), 2)\n\n    def test_q5(self):\n        self.assertEqual(q5(), 3)\n\n    def test_q6(self):\n        self.assertEqual(q6(), 3)\n\n    def test_q7(self):\n        self.assertEqual(q7(), 1)\n\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python template3_2_sol.py\none morning, when gregor samsa woke from troubled dreams, he found\nhimself transformed in his bed into a horrible vermin. he lay on his\narmour-like back, and if he lifted his head a little he could see his\nbrown belly, slightly domed and divided by arches into stiff sections.\nthe bedding was hardly able to cover it and seemed ready to slide off\nany moment. his many legs, pitifully thin compared with the size of the\nrest of him, waved about helplessly as he looked.\n\n.......\n----------------------------------------------------------------------\nRan 7 tests in 0.001s\n\nOK\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E3A3 - \u039a\u03b1\u03c4\u03b5\u03b2\u03ac\u03c3\u03c4\u03b5 \u03c4\u03bf MovieLens 100K Dataset ml-100k.zip. \u0395\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf u.data \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 100.000 \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c0\u03cc 943 \u03c7\u03c1\u03ae\u03c3\u03c4\u03b5\u03c2 \u03b3\u03b9\u03b1 1.682 \u03c4\u03b1\u03b9\u03bd\u03af\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf u.item \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c4\u03c9\u03bd \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd. \u0395\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03c4\u03b5 \u03c4\u03b9\u03c2 10 \u03c4\u03b1\u03b9\u03bd\u03af\u03b5\u03c2 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03ba\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b5\u03c2 \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03c4\u03ac \u03bc\u03ad\u03c3\u03bf \u03cc\u03c1\u03bf \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c5\u03c0\u03cc\u03c8\u03b7 \u03bc\u03cc\u03bd\u03bf \u03c4\u03b1\u03b9\u03bd\u03af\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03ad\u03c7\u03bf\u03c5\u03bd \u03bb\u03ac\u03b2\u03b5\u03b9 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd 50 \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b7 \u03ba\u03ac\u03b8\u03b5 \u03bc\u03b9\u03b1. \u0395\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03c4\u03af\u03c4\u03bb\u03bf\u03c5\u03c2 \u03b1\u03c5\u03c4\u03ce\u03bd \u03c4\u03c9\u03bd \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd. \u03a0\u03b1\u03c1\u03b1\u03c4\u03ae\u03c1\u03b7\u03c3\u03b7: \u0394\u03b5\u03af\u03c4\u03b5 \u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf README \u03c3\u03c4\u03bf ml-100k.zip \u03b3\u03b9\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c4\u03c9\u03bd \u03b1\u03c1\u03c7\u03b5\u03af\u03c9\u03bd.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 3 (\u03b1' \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2) <p>3_3_sol.py<pre><code>import csv\nimport os\n\n# \u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03b5\u03b9\u03c2\nmovies = {}\nfn = os.path.join(os.path.dirname(__file__), \"ml-100k\", \"u.data\")\nwith open(fn, encoding=\"latin-1\") as f:\n    csv_reader = csv.reader(f, delimiter=\"\\t\")\n    for row in csv_reader:\n        user, movie_id, rating, timestamp = row\n        rating = int(rating)\n        if movie_id not in movies:\n            movies[movie_id] = [rating]\n        else:\n            movies[movie_id].append(rating)\nprint(f\"\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd = {len(movies)}\")\n\n\n# \u0394\u03b9\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd \u03bc\u03b5 \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03b1\u03c0\u03cc 50 \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03b5\u03b9\u03c2\nmovies_to_be_deleted = []\nfor movie in movies:\n    if len(movies[movie]) &lt; 50:\n        movies_to_be_deleted.append(movie)\n\nfor movie in movies_to_be_deleted:\n    del movies[movie]\nprint(f\"\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd \u03bc\u03b5 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd 50 \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03b5\u03b9\u03c2 = {len(movies)}\")\n\n# \u039c\u03ad\u03c3\u03b7 \u03b2\u03b1\u03b8\u03bc\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd, \u03c4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7, \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 10 \u03c0\u03c1\u03ce\u03c4\u03c9\u03bd\nmovie_avg_rating = []\nfor movie in movies:\n    movie_avg_rating.append((movie, sum(movies[movie]) / len(movies[movie])))\n\nmovie_avg_rating.sort(key=lambda x: x[1], reverse=True)\n\n# \u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03c4\u03af\u03c4\u03bb\u03bf\u03c5\u03c2 \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd\ntitles = {}\nfn = os.path.join(os.path.dirname(__file__), \"ml-100k\", \"u.item\")\nwith open(fn, encoding=\"latin-1\") as f:\n    csv_reader = csv.reader(f, delimiter=\"|\")\n    for row in csv_reader:\n        movie_id, title = row[0], row[1]\n        titles[movie_id] = title\n\nfor i in range(10):\n    movie_id = movie_avg_rating[i][0]\n    print(f\"{titles[movie_id]:60} {movie_avg_rating[i][1]:.4f}\")\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 3_3_sol.py\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd = 1682\n\u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd \u03bc\u03b5 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd 50 \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03b5\u03b9\u03c2 = 603\nClose Shave, A (1995)                                        4.4911\nSchindler's List (1993)                                      4.4664\nWrong Trousers, The (1993)                                   4.4661\nCasablanca (1942)                                            4.4568\nWallace &amp; Gromit: The Best of Aardman Animation (1996)       4.4478\nShawshank Redemption, The (1994)                             4.4452\nRear Window (1954)                                           4.3876\nUsual Suspects, The (1995)                                   4.3858\nStar Wars (1977)                                             4.3585\n12 Angry Men (1957)                                          4.3440\n</code></pre></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 3 (\u03b2' \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7\u03c2 pandas) <p>\u03a0\u03c1\u03ce\u03c4\u03b1 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03b3\u03ba\u03b1\u03c4\u03b1\u03c3\u03c4\u03b1\u03b8\u03bf\u03cd\u03bd \u03bf\u03b9 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b5\u03c2 pandas \u03ba\u03b1\u03b9 tabulate. <pre><code>(myenv) &gt; pip install pandas tabulate\n</code></pre></p> <p>3_3_sol_pandas.py<pre><code>import os\n\nimport pandas as pd\nfrom tabulate import tabulate\n\nfile_to_movies_len_ratings = os.path.join(\n    os.path.dirname(__file__), \"ml-100k\", \"u.data\"\n)\nfile_to_movies_len_names = os.path.join(os.path.dirname(__file__), \"ml-100k\", \"u.item\")\n\nif __name__ == \"__main__\":\n    # read data\n    ratings = pd.read_csv(\n        file_to_movies_len_ratings,\n        sep=\"\\t\",\n        names=[\"user id\", \"movie id\", \"rating\", \"timestamp\"],\n    ).drop([\"timestamp\"], axis=1)\n    desc_movie_info = pd.read_csv(\n        file_to_movies_len_names,\n        sep=\"|\",\n        encoding=\"ISO-8859-1\",\n        usecols=[0, 1],\n        names=[\"movie id\", \"movie name\"],\n    )\n\n    # \u03bf\u03bc\u03b1\u03b4\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd \u03b1\u03bd\u03ac movie_id\n    ratings = ratings.groupby([\"movie id\"], sort=False).agg(\n        {\"user id\": \"count\", \"rating\": \"mean\"}\n    )\n\n    # \u03bb\u03ae\u03c8\u03b7 \u03c4\u03c9\u03bd 10 \u03ba\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03c9\u03bd \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd \u03bc\u03b5 \u03b2\u03ac\u03c3\u03b7 \u03c4\u03bf\u03bd \u03bc\u03ad\u03c3\u03bf \u03cc\u03c1\u03bf \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03b5\u03c9\u03bd \u03b3\u03b9\u03b1 \u03c4\u03b1\u03b9\u03bd\u03af\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c0\u03ac\u03bd\u03c9 \u03b1\u03c0\u03cc 50 \u03b1\u03be\u03b9\u03bf\u03bb\u03bf\u03b3\u03ae\u03c3\u03b5\u03b9\u03c2\n    top_10 = (\n        ratings[ratings[\"user id\"] &gt; 50]\n        .sort_values([\"rating\"], ascending=False)\n        .head(10)\n    )\n\n    # \u03b5\u03cd\u03c1\u03b5\u03c3\u03b7 top_10 \u03c4\u03b1\u03b9\u03bd\u03b9\u03ce\u03bd\n    n = desc_movie_info[desc_movie_info[\"movie id\"].isin(top_10.index)]\n    top_10[\"movie name\"] = [\n        n.iloc[i][\"movie name\"]\n        for j in top_10.index\n        for i in range(n.shape[0])\n        if n.iloc[i][\"movie id\"] == j\n    ]\n\n    print(\n        tabulate(\n            top_10,\n            headers=[\"#USERS\", \"RATING\", \"MOVIE NAME\"],\n            showindex=False,\n            tablefmt=\"fancy_grid\",\n        )\n    )\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 3_3_sol_pandas.py\n\u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\n\u2502   #USERS \u2502   RATING \u2502 MOVIE NAME                                             \u2502\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\n\u2502      112 \u2502  4.49107 \u2502 Close Shave, A (1995)                                  \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      298 \u2502  4.46644 \u2502 Schindler's List (1993)                                \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      118 \u2502  4.4661  \u2502 Wrong Trousers, The (1993)                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      243 \u2502  4.45679 \u2502 Casablanca (1942)                                      \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502       67 \u2502  4.44776 \u2502 Wallace &amp; Gromit: The Best of Aardman Animation (1996) \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      283 \u2502  4.44523 \u2502 Shawshank Redemption, The (1994)                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      209 \u2502  4.38756 \u2502 Rear Window (1954)                                     \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      267 \u2502  4.38577 \u2502 Usual Suspects, The (1995)                             \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      583 \u2502  4.35849 \u2502 Star Wars (1977)                                       \u2502\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n\u2502      125 \u2502  4.344   \u2502 12 Angry Men (1957)                                    \u2502\n\u2558\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2567\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u255b    \n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E3A4 - \u039a\u03b1\u03c4\u03b5\u03b2\u03ac\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf XML \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03b1\u03b3\u03ce\u03bd\u03c9\u03bd \u03b5\u03bd\u03cc\u03c2 \u03c0\u03c1\u03c9\u03c4\u03b1\u03b8\u03bb\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2.</p> <p>ITC2021_Test8_SolGenMethodA.xml</p> <p>\u0393\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03b1\u03b3\u03ce\u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03b7\u03bd \u03b1\u03c0\u03cc\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c0\u03b5\u03c1\u03b9\u03cc\u03b4\u03c9\u03bd \u03b1\u03bd\u03ac\u03bc\u03b5\u03c3\u03b1 \u03c3\u03c4\u03bf\u03bd \u03b1\u03b3\u03ce\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03b5\u03c0\u03b1\u03bd\u03b1\u03bb\u03b7\u03c0\u03c4\u03b9\u03ba\u03cc \u03c4\u03bf\u03c5. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1, \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b5\u03c2 0 \u03ba\u03b1\u03b9 1 \u03bf \u03b1\u03b3\u03ce\u03bd\u03b1\u03c2 0-1 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03af\u03bf\u03b4\u03bf 33 \u03ba\u03b1\u03b9 \u03bf \u03b5\u03c0\u03b1\u03bd\u03b1\u03bb\u03b7\u03c0\u03c4\u03b9\u03ba\u03cc\u03c2 \u03b1\u03b3\u03ce\u03bd\u03b1\u03c2 1-0 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03af\u03bf\u03b4\u03bf 14, \u03ac\u03c1\u03b1 \u03b7 \u03b1\u03c0\u03cc\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b4\u03cd\u03bf \u03b1\u03b3\u03ce\u03bd\u03c9\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 33-14=19 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 4 (\u03b1' \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2) <p>\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf ITC2021_Test8_SolGenMethodA.xml \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03af\u03b4\u03b9\u03bf \u03ba\u03b1\u03c4\u03ac\u03bb\u03bf\u03b3\u03bf \u03bc\u03b5 \u03c4\u03bf 3_4_sol.py.  3_4_sol.py<pre><code>import os\nimport xml.etree.ElementTree as ET\n\nfn = os.path.join(os.path.dirname(__file__), \"ITC2021_Test8_SolGenMethodA.xml\")\nxml_f = open(fn, \"r\", encoding=\"utf-8\")\ntree = ET.ElementTree(file=xml_f)\nelem = tree.getroot()\nteams = set()\nmatches = {}\nif elem.tag == \"Solution\":\n    for elem2 in elem:\n        if elem2.tag == \"Games\":\n            for elem3 in elem2:\n                if elem3.tag == \"ScheduledMatch\":\n                    home = int(elem3.attrib[\"home\"])\n                    away = int(elem3.attrib[\"away\"])\n                    slot = int(elem3.attrib[\"slot\"])\n                    matches[(home, away)] = slot  # matches[(0,1)] -&gt; 33\n                    teams.add(home)\nxml_f.close()\n\n# \u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03b1\u03bd\u03ac\u03bc\u03b5\u03c3\u03b1 \u03c3\u03b5 \u03ba\u03ac\u03b8\u03b5 \u03b1\u03b3\u03ce\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03b5\u03c0\u03b1\u03bd\u03b1\u03bb\u03b7\u03c0\u03c4\u03b9\u03ba\u03cc \u03c4\u03bf\u03c5\nnr_of_teams = len(teams)\n\nfor team1 in range(nr_of_teams):\n    for team2 in range(team1 + 1, nr_of_teams):\n        slot1 = matches[(team1, team2)]\n        slot2 = matches[(team2, team1)]\n        print(\n            f\"\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 {team1} \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 {team2} \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 {slot1} &amp; {slot2}, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac {abs(slot1-slot2)}\"\n        )\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 3_4_sol.py\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 1 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 14, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 2 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 13 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 3 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 25\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 4 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 25, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 26\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 17 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 29\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 12 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 5 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 7, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 2 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 3 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 4 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 5 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 32 &amp; 6, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 26\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 9 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 12 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 28 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 10, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 8, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 36\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 3 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 4 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 31\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 37 &amp; 7, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 35 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 9 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 23, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 17 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 10, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 24 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 12 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 4 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 28 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 11 &amp; 25, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 34\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 23, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 34, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 9\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 37 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 34, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 22 &amp; 1, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 29 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 35 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 3, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 21, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 4\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 32 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 7, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 5 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 32 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 25\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 29\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 19, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 20 &amp; 1, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 12 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 29 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 6, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 10, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 8, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 20 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 11 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 9 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 29\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 33\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 34\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 37 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 26\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 10, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 22 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 7\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 20 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 28 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 26\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 8, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 19, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 9\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 25\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 29\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 29 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 31\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 33\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 13 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 24 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 37 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 6, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 27\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 14, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 5\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 23, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 17 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 7, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 11 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 21, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 31\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 28 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 22 &amp; 6, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 9 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 21, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 7\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 9\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 17 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 22 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 1, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 29 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 13 &amp; 19, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 6\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 23, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 24 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 15 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 0 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 15 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 13 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 15 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 15 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 16 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 16 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 8\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 16 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 3, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 17 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 32 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 17 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 18 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n</code></pre></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 4 (\u03b2' \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2) <p>\u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf ITC2021_Test8_SolGenMethodA.xml \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03af\u03b4\u03b9\u03bf \u03ba\u03b1\u03c4\u03ac\u03bb\u03bf\u03b3\u03bf \u03bc\u03b5 \u03c4\u03bf 3_4_sol_alt.py. 3_4_sol_alt.py<pre><code># \u0395\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae, \u03c3\u03c5\u03bd\u03c4\u03bf\u03bc\u03cc\u03c4\u03b5\u03c1\u03b7 \u03bb\u03cd\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 \u03953\u03914\nimport os\nimport xml.etree.ElementTree as ET\n\nfn = os.path.join(os.path.dirname(__file__), \"ITC2021_Test8_SolGenMethodA.xml\")\nwith open(fn) as xml_f:\n    tree = ET.ElementTree(file=xml_f)\n\nmatches = {}\nfor elem in tree.getroot()[1]:\n    matches[(int(elem.attrib[\"home\"]), int(elem.attrib[\"away\"]))] = int(\n        elem.attrib[\"slot\"]\n    )\n\nnr_of_teams = max([t[0] for t in matches.keys()]) + 1\nfor team1 in range(nr_of_teams):\n    for team2 in range(team1 + 1, nr_of_teams):\n        slot1 = matches[(team1, team2)]\n        slot2 = matches[(team2, team1)]\n        print(\n            f\"\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 {team1} \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 {team2} \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 {slot1} &amp; {slot2}, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac {abs(slot1-slot2)}\"\n        )\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 3_4_sol_alt.py\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 1 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 14, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 2 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 13 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 3 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 25\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 4 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 25, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 26\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 17 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 29\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 12 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 5 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 7, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 0 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 2 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 3 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 4 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 5 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 32 &amp; 6, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 26\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 9 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 12 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 28 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 10, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 8, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 36\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 1 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 3 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 4 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 31\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 37 &amp; 7, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 35 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 9 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 23, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 17 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 10, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 24 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 2 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 12 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 4 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 28 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 11 &amp; 25, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 34\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 23, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 34, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 9\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 37 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 3 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 5 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 34, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 22 &amp; 1, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 29 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 35 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 3, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 21, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 4\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 4 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 32 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 6 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 7, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 5 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 32 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 25\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 29\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 19, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 20 &amp; 1, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 12 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 5 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 7 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 29 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 6, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 10, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 11\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 8, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 20 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 30 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 11 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 9 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 6 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 29\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 8 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 33\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 23 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 34\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 37 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 26\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 10, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 22 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 7\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 20 &amp; 2, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 28 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 26\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 8, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 23\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 7 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 10\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 9 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 19, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 9\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 25\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 29\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 29 &amp; 17, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 31\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 8 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 33\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 10 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 13 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 24 &amp; 0, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 37 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 28, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 6, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 27\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 14, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 5\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 1 &amp; 23, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 9 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 27 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 11 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 17 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 16, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 7, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 11 &amp; 33, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 21, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 18\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 10 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 31\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 12 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 28 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 22 &amp; 6, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 9 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 21, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 7\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 27, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 9\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 26 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 24, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 11 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 36 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 13 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 34 &amp; 4, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 30\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 17 &amp; 36, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 14 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 12, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 22 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 12 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 21 &amp; 1, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 14 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 8 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 24\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 33 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 28\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 31 &amp; 9, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 3 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 29 &amp; 15, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 13 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 13 &amp; 19, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 6\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 15 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 6 &amp; 26, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 20\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 2 &amp; 23, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 21\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 24 &amp; 5, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 13, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 12\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 14 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 18 &amp; 31, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 13\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 15 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 16 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 0 &amp; 32, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 32\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 15 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 13 &amp; 30, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 17\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 15 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 16 &amp; 35, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 15 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 7 &amp; 22, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 15\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 16 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 17 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 15 &amp; 37, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 16 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 19 &amp; 11, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 8\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 16 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 25 &amp; 3, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 22\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 17 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 18 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 32 &amp; 18, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 14\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 17 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 10 &amp; 29, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 19\n\u0397 \u03bf\u03bc\u03ac\u03b4\u03b1 18 \u03c0\u03b1\u03af\u03b6\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bd\u03c4\u03af\u03bf\u03bd \u03c4\u03b7\u03c2 \u03bf\u03bc\u03ac\u03b4\u03b1\u03c2 19 \u03c3\u03c4\u03b9\u03c2 \u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 4 &amp; 20, \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ac 16\n</code></pre></p>"},{"location":"lab3_python/#_2","title":"\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03b5\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E3A5<sup>7</sup> - \u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03bc\u03b5 \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac (passwords) \u03ba\u03b1\u03b9 \u03ba\u03c9\u03b4\u03b9\u03ba\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03bf\u03c5\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b9\u03c3\u03c7\u03cd\u03bf\u03c5\u03bd \u03b3\u03b9\u03b1 \u03ba\u03b1\u03b8\u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03b1\u03c5\u03c4\u03ac. \u03a4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c4\u03b7\u03c2 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2:</p> <pre><code>1-3 a: abcde\n1-3 b: cdefg\n2-9 c: ccccccccc\n</code></pre> <p>\u0391) \u039a\u03ac\u03b8\u03b5 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 (x \u03ba\u03b1\u03b9 y), \u03ad\u03bd\u03b1\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 c \u03ba\u03b1\u03b9 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03c4\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc. \u039f \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03b5\u03af\u03bd\u03b1\u03b9 \u03cc\u03c4\u03b9 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd x \u03ba\u03b1\u03b9 \u03c4\u03bf \u03c0\u03bf\u03bb\u03cd y \u03c6\u03bf\u03c1\u03ad\u03c2 \u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 c \u03c3\u03c4\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc. \u0388\u03c4\u03c3\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03b9\u03c3\u03c7\u03cd\u03b5\u03b9 \u03cc\u03c4\u03b9:</p> <pre><code>1-3 a: abcde \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf: \u03c4\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 a 1 \u03c6\u03bf\u03c1\u03ac.\n1-3 b: cdefg \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf: \u03c4\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 b.\n2-9 c: ccccccccc \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf: \u03c4\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 c 9 \u03c6\u03bf\u03c1\u03ad\u03c2.\n</code></pre> <p>\u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03ba\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bc\u03b5 unit test \u03bd\u03b1 \u03b5\u03bb\u03ad\u03b3\u03c7\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03ad\u03b3\u03ba\u03c5\u03c1\u03c9\u03bd \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf aoc2020_d2_input.txt \u03b5\u03af\u03bd\u03b1\u03b9 660. </p> <p>\u0392) \u0388\u03c3\u03c4\u03c9 \u03cc\u03c4\u03b9 \u03bf \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03c9\u03b4\u03b9\u03ba\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03bf\u03c2 \u03c3\u03b5 \u03ba\u03ac\u03b8\u03b5 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 c \u03bd\u03b1 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03b5\u03af\u03c4\u03b5 \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 x \u03b5\u03af\u03c4\u03b5 \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 y \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03bf\u03cd (\u03b8\u03b5\u03c9\u03c1\u03b5\u03af\u03c3\u03c4\u03b5 \u03cc\u03c4\u03b9 \u03bf \u03c0\u03c1\u03ce\u03c4\u03bf\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03bf\u03cd \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 1) </p> <p>\u0393\u03b9\u03b1 \u03c4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03c4\u03ce\u03c1\u03b1 \u03b8\u03b1 \u03b9\u03c3\u03c7\u03cd\u03b5\u03b9:</p> <pre><code>1-3 a: abcde \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf: \u03c4\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 a \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 1 \u03ba\u03b1\u03b9 \u03cc\u03c7\u03b9 \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 3.\n1-3 b: cdefg \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf: \u03c4\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 b \u03bf\u03cd\u03c4\u03b5 \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 1 \u03bf\u03cd\u03c4\u03b5 \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 3.\n2-9 c: ccccccccc \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf: \u03c4\u03bf \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 c \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 2 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03b8\u03ad\u03c3\u03b7 9.\n</code></pre> <p>\u03a3\u03c5\u03bc\u03c0\u03bb\u03b7\u03c1\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03c0\u03ac\u03bb\u03b9 \u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03ba\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd \u03ba\u03b1\u03b9 \u03bc\u03b5 unit test \u03bd\u03b1 \u03b5\u03bb\u03ad\u03b3\u03c7\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03ad\u03b3\u03ba\u03c5\u03c1\u03c9\u03bd \u03c3\u03c5\u03bd\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf aoc2020_d2_input.txt \u03c4\u03ce\u03c1\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 530.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 5 <p>3_5_sol.py<pre><code>import os\nimport re\nimport unittest\n\n\ndef part1():\n    with open(\n        os.path.join(os.path.dirname(__file__), \"aoc2020_d2_input.txt\"), \"r\"\n    ) as f:\n        regex = re.compile(\n            \"(?P&lt;low&gt;\\d+)-(?P&lt;hi&gt;\\d+)(\\s)(?P&lt;key_char&gt;\\w)(:\\s)(?P&lt;pwd&gt;\\w+)\"\n        )\n        c = 0\n        for line in f.readlines():\n            match = regex.match(line)\n            pwd = match.group(\"pwd\")\n            x = pwd.count(match.group(\"key_char\"))\n            if int(match.group(\"low\")) &lt;= x &lt;= int(match.group(\"hi\")):\n                c += 1\n        return c\n\n\ndef part2():\n    with open(\n        os.path.join(os.path.dirname(__file__), \"aoc2020_d2_input.txt\"), \"r\"\n    ) as f:\n        regex = re.compile(\n            \"(?P&lt;pos1&gt;\\d+)-(?P&lt;pos2&gt;\\d+)(\\s)(?P&lt;key_char&gt;\\w)(:\\s)(?P&lt;pwd&gt;\\w+)\"\n        )\n        c = 0\n        for line in f.readlines():\n            match = regex.match(line)\n            pwd = match.group(\"pwd\")\n            key_char = match.group(\"key_char\")\n            pos1 = int(match.group(\"pos1\")) - 1\n            pos2 = int(match.group(\"pos2\")) - 1\n            if pwd[pos1] == pwd[pos2]:\n                continue\n            if pwd[pos1] == key_char or pwd[pos2] == key_char:\n                c += 1\n        return c\n\n\nclass TestAOC2020Day2(unittest.TestCase):\n    def test_part1(self):\n        self.assertEqual(part1(), 660)\n\n    def test_part2(self):\n        self.assertEqual(part2(), 530)\n\n\nunittest.main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 3_5_sol.py\n..\n----------------------------------------------------------------------\nRan 2 tests in 0.003s\n\nOK\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E3A6 - \u0393\u03b9\u03b1 \u03c4\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03b1 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 simpsons_phone_book.txt, \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 \u03ba\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2: </p> <ol> <li>\u0395\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03c4\u03b5 \u03cc\u03bb\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03c4\u03b7\u03bb\u03b5\u03c6\u03ce\u03bd\u03bf\u03c5 \u03b3\u03b9\u03b1 \u03ba\u03b1\u03c4\u03b1\u03c7\u03c9\u03c1\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd \u03bc\u03b9\u03b1 \u03bb\u03ad\u03be\u03b7 \u03c0\u03bf\u03c5 \u03be\u03b5\u03ba\u03b9\u03bd\u03ac \u03bc\u03b5 J.</li> <li>\u0395\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03c4\u03b5 \u03cc\u03bb\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03c4\u03b7\u03bb\u03b5\u03c6\u03ce\u03bd\u03bf\u03c5 \u03b3\u03b9\u03b1 \u03ba\u03b1\u03c4\u03b1\u03c7\u03c9\u03c1\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd \u03bc\u03b9\u03b1 \u03bb\u03ad\u03be\u03b7 \u03c0\u03bf\u03c5 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03b5\u03b9 \u03c3\u03b5 eu.</li> <li>\u0395\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03c4\u03b5 \u03cc\u03bb\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03c4\u03b7\u03bb\u03b5\u03c6\u03ce\u03bd\u03c9\u03bd \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1.</li> <li>\u0395\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03c4\u03b5 \u03cc\u03bb\u03bf\u03c5\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03c4\u03b7\u03bb\u03b5\u03c6\u03ce\u03bd\u03bf\u03c5 \u03c7\u03c9\u03c1\u03af\u03c2 \u03c4\u03bf\u03bd \u03ba\u03c9\u03b4\u03b9\u03ba\u03cc \u03c4\u03b7\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ae\u03c2 (\u03c0.\u03c7. 555) \u03ba\u03b1\u03b9 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03bf\u03c5\u03c2.</li> </ol> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 6 <p>3_6_sol.py<pre><code>import re\n\nphones = \"\"\"\nAllison Neu 555-8396\nBob Newhall 555-4344\nC. Montgomery Burns 555-0001\nC. Montgomery Burns 555-0113\nCanine College 555-7201\nCanine Therapy Institute 555-2849\nCathy Neu 555-2362\nCity of New York Parking Violation Bureau 555-BOOT\nDr. Julius Hibbert 555-3642\nDr. Nick Riviera 555-NICK\nEarn Cash For Your Teeth 555-6312\nFamily Therapy Center 555-HUGS\nHomer Jay Simpson (Plow King episode) 555-3223\nHomer Jay Simpson (work) 555-7334\nJack Neu 555-7666\nJeb Neu 555-5543\nJennifer Neu 555-3652\nKen Neu 555-8752\nLionel Putz 555-5299\nMAD Magazine 555-8628\nMarital Street Hotline 555-1680\nMarvin Monroe 555-3700\nMarvin Monroe's radio therapy show 555-PAIN\nMoe Szyslak (phone number spells SMITHERS) 7648-4377\nMoe Szyslak 555-0000\nMoe's Tavern 555-1239\nMr. Plow 555-3226\nNY Metro 555-5680\nNed Flanders 555-8904\nNew York Parking Violation Bureau 555-2668\nORB     Dr Nick's \"B\"argain Medical Services 1-800-DOCT\nOriginal Famous Ray's Pizza 555-PIZA\nOtto's \"How's my Driving\" 555-8821\nPlow King 555-4796\nPretzel Wagon 555-3226\nProf John Frink's Lab 555-5782\nRadio Psychaiatrist 555-7246\nReverend Timothy Lovejoy 555-6542\nRichard Nash 555-9996\nRichard Newhall 555-9973\nRuff-form Dog School 555-0078\nSantitarium for Dogs 555-9716\nSleep-Eazy Motel 555-1000\nSugar Truck 555-3872\nSusan Newhall 555-2362\nThe Nuclear Powerplant 555-5246\nThe Simpsons' residence 555-8707\nThe Simpsons, 742 Evergreen Terrace 555-0113\nToby Muntz 555-9972\n\"\"\"\n\nprint(\"\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 1\")\nresults = re.findall(\n    r\"(\\bJ.*)(\\d{3}-\\d{4}|[a-z]{4})\", phones, flags=re.IGNORECASE | re.MULTILINE\n)\nfor result in results:\n    print(f\"{result[0]} -&gt; {result[1]}\")\n\nprint(\"\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 2\")\nresults = re.findall(\n    r\"(\\b.*eu).*(\\d{3}-\\d{4}|[a-z]{4})\", phones, flags=re.IGNORECASE | re.MULTILINE\n)\nfor result in results:\n    print(f\"{result[0]} -&gt; {result[1]}\")\n\nprint(\"\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 3\")\nresults = re.findall(\n    r\"(.*)(\\d{3}-[a-z]{4})\", phones, flags=re.IGNORECASE | re.MULTILINE\n)\nfor result in results:\n    print(f\"{result[0]} -&gt; {result[1]}\")\n\nprint(\"\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 4\")\nresults = re.findall(\n    r\"(.*)(\\d{3}-(\\d{4}|[a-z]{4}))$\", phones, flags=re.IGNORECASE | re.MULTILINE\n)\n\nfor result in sorted(results, key=lambda row: row[2]):\n    print(f\"{result[1]} -&gt; {result[0]}\")\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 3_6_sol.py\n\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 1\nJulius Hibbert  -&gt; 555-3642\nJay Simpson (Plow King episode)  -&gt; 555-3223\nJay Simpson (work)  -&gt; 555-7334\nJack Neu  -&gt; 555-7666\nJeb Neu  -&gt; 555-5543\nJennifer Neu  -&gt; 555-3652\nJohn Frink's Lab  -&gt; 555-5782\n\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 2\nAllison Neu -&gt; 555-8396\nCathy Neu -&gt; 555-2362\nJack Neu -&gt; 555-7666\nJeb Neu -&gt; 555-5543\nJennifer Neu -&gt; 555-3652\nKen Neu -&gt; 555-8752\n\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 3\nCity of New York Parking Violation Bureau  -&gt; 555-BOOT\nDr. Nick Riviera  -&gt; 555-NICK\nFamily Therapy Center  -&gt; 555-HUGS\nMarvin Monroe's radio therapy show  -&gt; 555-PAIN\nORB     Dr Nick's \"B\"argain Medical Services 1- -&gt; 800-DOCT\nOriginal Famous Ray's Pizza  -&gt; 555-PIZA\n\u0395\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1 4\n555-0000 -&gt; Moe Szyslak \n555-0001 -&gt; C. Montgomery Burns \n555-0078 -&gt; Ruff-form Dog School \n555-0113 -&gt; C. Montgomery Burns \n555-0113 -&gt; The Simpsons, 742 Evergreen Terrace \n555-1000 -&gt; Sleep-Eazy Motel \n555-1239 -&gt; Moe's Tavern \n555-1680 -&gt; Marital Street Hotline \n555-2362 -&gt; Cathy Neu \n555-2362 -&gt; Susan Newhall \n555-2668 -&gt; New York Parking Violation Bureau \n555-2849 -&gt; Canine Therapy Institute \n555-3223 -&gt; Homer Jay Simpson (Plow King episode) \n555-3226 -&gt; Mr. Plow \n555-3226 -&gt; Pretzel Wagon \n555-3642 -&gt; Dr. Julius Hibbert \n555-3652 -&gt; Jennifer Neu \n555-3700 -&gt; Marvin Monroe \n555-3872 -&gt; Sugar Truck \n555-4344 -&gt; Bob Newhall \n648-4377 -&gt; Moe Szyslak (phone number spells SMITHERS) 7\n555-4796 -&gt; Plow King \n555-5246 -&gt; The Nuclear Powerplant \n555-5299 -&gt; Lionel Putz \n555-5543 -&gt; Jeb Neu \n555-5680 -&gt; NY Metro \n555-5782 -&gt; Prof John Frink's Lab \n555-6312 -&gt; Earn Cash For Your Teeth \n555-6542 -&gt; Reverend Timothy Lovejoy \n555-7201 -&gt; Canine College \n555-7246 -&gt; Radio Psychaiatrist \n555-7334 -&gt; Homer Jay Simpson (work) \n555-7666 -&gt; Jack Neu \n555-8396 -&gt; Allison Neu \n555-8628 -&gt; MAD Magazine \n555-8707 -&gt; The Simpsons' residence \n555-8752 -&gt; Ken Neu \n555-8821 -&gt; Otto's \"How's my Driving\" \n555-8904 -&gt; Ned Flanders \n555-9716 -&gt; Santitarium for Dogs \n555-9972 -&gt; Toby Muntz \n555-9973 -&gt; Richard Newhall \n555-9996 -&gt; Richard Nash \n555-BOOT -&gt; City of New York Parking Violation Bureau \n800-DOCT -&gt; ORB         Dr Nick's \"B\"argain Medical Services 1-\n555-HUGS -&gt; Family Therapy Center \n555-NICK -&gt; Dr. Nick Riviera \n555-PAIN -&gt; Marvin Monroe's radio therapy show \n555-PIZA -&gt; Original Famous Ray's Pizza \n</code></pre></p> <ol> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03b1\u03c1\u03c7\u03b5\u03af\u03c9\u03bd \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u21a9</p> </li> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03ba\u03b1\u03bd\u03bf\u03bd\u03b9\u03ba\u03ce\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd,\u00a0\u21a9</p> </li> <li> <p>Automate the boring stuff with Python - Chapter 7 \u2013 Pattern Matching with Regular Expressions \u21a9</p> </li> <li> <p>python-course.eu - Chapter 15 Regular Expressions, python-course.eu - Chapter 16 Advanced Regular Expressions \u21a9</p> </li> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03b1\u03c1\u03c7\u03b5\u03af\u03c9\u03bd XML \u21a9</p> </li> <li> <p>calmcode.io - black \u21a9</p> </li> <li> <p>\u03c0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03bf Day 2: Password Philosophy \u03b1\u03c0\u03cc \u03c4\u03bf Advent of Code 2020.\u00a0\u21a9</p> </li> </ol>"},{"location":"lab4_python/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 4 \u03c3\u03c4\u03b7\u03bd Python","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bc\u03b5 \u03c4\u03b7\u03bd Python<sup>1</sup>, \u03bf\u03b9 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 <code>__init__</code>, <code>__str__</code>, <code>__repr__</code>, \u03c5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd<sup>2</sup>, \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1, \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03b9\u03c2<sup>3</sup>, \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03bc\u03b5 \u03c4\u03bf sys.argv \u03ba\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03bf argparse, logging.</p>"},{"location":"lab4_python/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E4A1 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03ba\u03bb\u03ac\u03c3\u03b7 <code>Car</code> \u03bc\u03b5 \u03bc\u03ad\u03bb\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c4\u03b7 \u03bc\u03ac\u03c1\u03ba\u03b1 (<code>brand</code>), \u03c4\u03bf \u03bc\u03bf\u03bd\u03c4\u03ad\u03bb\u03bf (<code>model</code>) \u03ba\u03b1\u03b9 \u03c4\u03bf \u03ad\u03c4\u03bf\u03c2 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae\u03c2 (<code>year</code>). \u03a5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae\u03c2 <code>__init__</code> \u03ba\u03b1\u03b9 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf <code>__str__</code> \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b5\u03c2 \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c4\u03cd\u03c0\u03bf\u03c5 <code>Car</code>. \u0394\u03b9\u03b1\u03b2\u03ac\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03c3\u03c4\u03b9\u03b3\u03bc\u03b9\u03cc\u03c4\u03c5\u03c0\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd <code>Car</code>. \u03a4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03c0\u03c1\u03ce\u03c4\u03b1 \u03bc\u03b5 \u03b2\u03ac\u03c3\u03b7 \u03c4\u03bf \u03ad\u03c4\u03bf\u03c2 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae\u03c2, \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c4\u03ac \u03bc\u03b5 \u03b2\u03ac\u03c3\u03b7 \u03c4\u03b7 \u03bc\u03ac\u03c1\u03ba\u03b1. \u0395\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1.</p> <pre><code>cars = \"\"\"\n#year,brand,model\n1969,Dodge,Charger\n1963,Corvette, Stingray\n1974,Porsche,914\n1969,Chevrolet,Camaro Z28\n1967,Toyota,2000GT\n1971,Ford,Thunderbird\n1991,Dodge,Viper\n1966,Lamborghini,Miura\n1962,Ferrari,250 GTO\n1954,Mercedes,300SL Gullwing\"\"\"\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A1 <p>4_1_sol.py<pre><code>class Car:\n    def __init__(self, brand, model, year):\n        self.brand = brand\n        self.model = model\n        self.year = year\n\n    def __str__(self):\n        return f\"Brand: {self.brand}, model: {self.model}, year: {self.year}\"\n\n\ncars = \"\"\"\n#year,brand,model\n1969,Dodge,Charger\n1963,Corvette, Stingray\n1974,Porsche,914\n1969,Chevrolet,Camaro Z28\n1967,Toyota,2000GT\n1971,Ford,Thunderbird\n1991,Dodge,Viper\n1966,Lamborghini,Miura\n1962,Ferrari,250 GTO\n1954,Mercedes,300SL Gullwing\n\"\"\"\n\nif __name__ == \"__main__\":\n    cars_list = []\n    for line in cars.split(\"\\n\"):\n        line = line.strip()\n        if line == \"\" or line[0] == \"#\":\n            continue\n        year, brand, model = line.split(\",\")\n        car = Car(brand, model, int(year))\n        cars_list.append(car)\n\n    cars_list = sorted(cars_list, key=lambda car: car.brand)  # \u03c4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03bc\u03ac\u03c1\u03ba\u03b1\n    cars_list = sorted(\n        cars_list, key=lambda car: car.year\n    )  # \u03c0\u03c1\u03ce\u03c4\u03b1 \u03c4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03ad\u03c4\u03bf\u03c2\n    for car in cars_list:\n        print(car)\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 4_1_sol.py\nBrand: Mercedes, model: 300SL Gullwing, year: 1954\nBrand: Ferrari, model: 250 GTO, year: 1962\nBrand: Corvette, model:  Stingray, year: 1963\nBrand: Lamborghini, model: Miura, year: 1966\nBrand: Toyota, model: 2000GT, year: 1967\nBrand: Chevrolet, model: Camaro Z28, year: 1969\nBrand: Dodge, model: Charger, year: 1969\nBrand: Ford, model: Thunderbird, year: 1971\nBrand: Porsche, model: 914, year: 1974\nBrand: Dodge, model: Viper, year: 1991\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E4A2 - \u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03ba\u03bb\u03ac\u03c3\u03b7 <code>Juice</code> \u03ba\u03b1\u03b9 \u03c5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03ce\u03bd\u03b5\u03b9 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae <code>+</code>.</p> <pre><code>class Juice:\n    def __init__(self, name, capacity):\n        self.name = name\n        self.capacity = capacity\n\n    def __str__(self):\n        return (self.name + ' ('+str(self.capacity)+'L)')\n\n    def __add__(self, other):\n        return Juice(self.name + '&amp;' + other.name, self.capacity + other.capacity)\n\na = Juice('Orange', 1.5)\nb = Juice('Apple', 2.0)\nresult = a + b\nprint(result)\n</code></pre> <ul> <li>\u03a0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c0\u03b5\u03b4\u03af\u03bf \u03c4\u03b9\u03bc\u03ae (<code>price</code>).</li> <li>\u038c\u03c4\u03b1\u03bd \u03b5\u03c6\u03b1\u03c1\u03bc\u03cc\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bf \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b8\u03b5\u03c3\u03b7\u03c2 \u03bf \u03bd\u03ad\u03bf\u03c2 \u03c7\u03c5\u03bc\u03cc\u03c2 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03c4\u03b9\u03bc\u03ae \u03af\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03c4\u03b9\u03bc\u03ce\u03bd \u03c4\u03c9\u03bd \u03b4\u03cd\u03bf \u03c7\u03c5\u03bc\u03ce\u03bd.</li> <li>\u03a0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf <code>pour</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf \u03bc\u03b9\u03b1 \u03c4\u03b9\u03bc\u03ae \u03b1\u03c0\u03cc \u03c4\u03bf 0% \u03bc\u03ad\u03c7\u03c1\u03b9 \u03c4\u03bf 100% \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03bd\u03ad\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf <code>Juice</code> \u03bc\u03b5 \u03c4\u03bf \u03c7\u03c5\u03bc\u03cc \u03c0\u03bf\u03c5 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9 \u03b1\u03bd \u03bb\u03b7\u03c6\u03b8\u03b5\u03af \u03c4\u03bf \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03bf \u03c0\u03bf\u03c3\u03bf\u03c3\u03c4\u03cc \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03bf\u03bc\u03ad\u03bd\u03bf\u03c5 \u03b1\u03c0\u03cc \u03c4\u03bf \u03ba\u03b1\u03bb\u03ce\u03bd \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf.</li> </ul> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A2 <p>4_2_sol.py<pre><code>class Juice:\n    def __init__(self, name, capacity, price):\n        self.name = name\n        self.capacity = capacity\n        self.price = price\n\n    def __str__(self):\n        return f\"{self.name} ({self.capacity:.2f}L) {self.price:.2f} \u20ac\"\n\n    def __add__(self, other):\n        new_price = self.price + other.price\n        return Juice(\n            self.name + \"&amp;\" + other.name, self.capacity + other.capacity, new_price\n        )\n\n    def pour(self, percentage):\n        assert 0.0 &lt; percentage &lt;= 1.0\n        print(f\"Pouring {percentage*100}% from {str(self)}\")\n        new_capacity = self.capacity * percentage\n        new_price = self.price * percentage\n        self.capacity -= new_capacity\n        self.price -=  new_price\n        return Juice(self.name, new_capacity, new_price)\n\n\na = Juice(\"Orange\", 1.5, 3.5)\nb = Juice(\"Apple\", 2.0, 3.0)\nprint(a)\nprint(b)\n\nresult = a + b\nprint(result)\n\nc = result.pour(0.4)\nprint(result)\nprint(c)\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>Orange (1.50L) 3.50 \u20ac\nApple (2.00L) 3.00 \u20ac\nOrange&amp;Apple (3.50L) 6.50 \u20ac\nPouring 40.0% from Orange&amp;Apple (3.50L) 6.50 \u20ac\nOrange&amp;Apple (2.10L) 3.90 \u20ac\nOrange&amp;Apple (1.40L) 2.60 \u20ac\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E4A3 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03ba\u03bb\u03ac\u03c3\u03b7 <code>Stack</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c4\u03bf\u03af\u03b2\u03b1. \u0397 \u03c3\u03c4\u03bf\u03af\u03b2\u03b1 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03b9\u03c2 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b5\u03c2 \u03ce\u03b8\u03b7\u03c3\u03b7 (<code>push</code>), \u03b1\u03c0\u03ce\u03b8\u03b7\u03c3\u03b7 (<code>pop</code>), \u03b5\u03ba\u03ba\u03b1\u03b8\u03ac\u03c1\u03b9\u03c3\u03b7 \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c3\u03c4\u03bf\u03af\u03b2\u03b1\u03c2 (<code>clear</code>) \u03ba\u03b1\u03b9 \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c3\u03c4\u03bf\u03af\u03b2\u03b1\u03c2 (\u03bc\u03b5 \u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 <code>__str__</code>). \u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf template \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03bb\u03cd\u03c3\u03b7 \u03c3\u03b1\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 \u03c3\u03b5 \u03cc\u03bb\u03b1 \u03c4\u03b1 unit tests.</p> template4_3.py<pre><code>import unittest\n\n\nclass Stack:\n    def __init__(self):\n        self.data = []\n\n    def push(self, item):\n        pass\n\n    def pop(self):\n        pass\n\n    def clear(self):\n        pass\n\n    def __str__(self):\n        pass\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestHammingDistance(unittest.TestCase):\n    def test_Stack(self):\n        s = Stack()\n        self.assertTrue(str(s)==\"\u0397 \u03c3\u03c4\u03bf\u03af\u03b2\u03b1 \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1\")\n        s.push(1)\n        self.assertTrue(str(s)==\"-&gt;1\\n\")\n        s.push(2)\n        self.assertTrue(str(s)==\"-&gt;2\\n  1\\n\")\n        s.push(3)\n        self.assertTrue(str(s)==\"-&gt;3\\n  2\\n  1\\n\")\n        s.pop()\n        self.assertTrue(str(s)==\"-&gt;2\\n  1\\n\")\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A3 <p>template4_3_sol.py<pre><code>import unittest\n\n\nclass Stack:\n    EMPTY_MSG = \"\u0397 \u03c3\u03c4\u03bf\u03af\u03b2\u03b1 \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1\"\n\n    def __init__(self):\n        self.data = []\n\n    def push(self, item):\n        self.data.append(item)\n\n    def pop(self):\n        if len(self.data) &gt; 0:\n            self.data.pop()\n        else:\n            print(Stack.EMPTY_MSG)\n\n    def clear(self):\n        self.data = []\n\n    def __str__(self):\n        if len(self.data) == 0:\n            return Stack.EMPTY_MSG\n        else:\n            s = \"\"\n            for idx, item in enumerate(reversed(self.data)):\n                if idx == 0:\n                    s += f\"-&gt;{item}\\n\"\n                else:\n                    s += f\"  {item}\\n\"\n            return s\n\n\n# M\u03b7\u03bd \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03c4\u03b5 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03b5\u03b4\u03ce \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c4\u03c9\nclass TestHammingDistance(unittest.TestCase):\n    def test_Stack(self):\n        s = Stack()\n        self.assertTrue(str(s)==\"\u0397 \u03c3\u03c4\u03bf\u03af\u03b2\u03b1 \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1\")\n        s.push(1)\n        self.assertTrue(str(s)==\"-&gt;1\\n\")\n        s.push(2)\n        self.assertTrue(str(s)==\"-&gt;2\\n  1\\n\")\n        s.push(3)\n        self.assertTrue(str(s)==\"-&gt;3\\n  2\\n  1\\n\")\n        s.pop()\n        self.assertTrue(str(s)==\"-&gt;2\\n  1\\n\")\n\nif __name__ == \"__main__\":\n    unittest.main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>.\n----------------------------------------------------------------------\nRan 1 test in 0.000s\n\nOK\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E4A4 - \u039a\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03c3\u03c4\u03b5 \u03c4\u03b7\u03bd \u03ba\u03bb\u03ac\u03c3\u03b7 <code>Document</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b9\u03c3\u03c4\u03ac \u03ad\u03bd\u03b1 \u03ad\u03b3\u03b3\u03c1\u03b1\u03c6\u03bf \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03ce\u03bd \u03c4\u03bf\u03c5 (<code>authors</code>) \u03ba\u03b1\u03b9 \u03c4\u03b7\u03bd \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1\u03c2 \u03c4\u03bf\u03c5 (<code>creation_date</code>). \u0397 \u03ba\u03bb\u03ac\u03c3\u03b7 Document \u03bd\u03b1 \u03b4\u03b9\u03b1\u03b8\u03ad\u03c4\u03b5\u03b9 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf add_author \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03c3\u03b8\u03ae\u03ba\u03b7 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03ce\u03bd \u03c3\u03c4\u03bf \u03ad\u03b3\u03b3\u03c1\u03b1\u03c6\u03bf. \u0391\u03c0\u03cc \u03c4\u03b7\u03bd \u03ba\u03bb\u03ac\u03c3\u03b7 <code>Document</code> \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03ae\u03c3\u03c4\u03b5 \u03c3\u03b5 \u03b4\u03cd\u03bf \u03ac\u03bb\u03bb\u03b5\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2, \u03c4\u03b7\u03bd \u03c5\u03c0\u03bf\u03ba\u03bb\u03ac\u03c3\u03b7 <code>Book</code> \u03ba\u03b1\u03b9 \u03c4\u03b7\u03bd \u03c5\u03c0\u03bf\u03ba\u03bb\u03ac\u03c3\u03b7 <code>Email</code>. \u0393\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c5\u03c0\u03bf\u03ba\u03bb\u03ac\u03c3\u03b7 <code>Book</code> \u03bf\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c0\u03b5\u03b4\u03af\u03bf <code>title</code> (\u03c4\u03af\u03c4\u03bb\u03bf\u03c2 \u03b2\u03b9\u03b2\u03bb\u03af\u03bf\u03c5). \u0393\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c5\u03c0\u03bf\u03ba\u03bb\u03ac\u03c3\u03b7 <code>Email</code> \u03bf\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c0\u03b5\u03b4\u03af\u03b1 <code>sender</code> (\u03b1\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03ad\u03b1\u03c2), <code>subject</code> (\u03b8\u03ad\u03bc\u03b1), <code>recipients</code> (\u03bb\u03af\u03c3\u03c4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03bb\u03b7\u03c0\u03c4\u03ce\u03bd). \u0397 \u03c5\u03c0\u03bf\u03ba\u03bb\u03ac\u03c3\u03b7 <code>Recipient</code> \u03bd\u03b1 \u03b4\u03b9\u03b1\u03b8\u03ad\u03c4\u03b5\u03b9 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf <code>add_recipient</code> \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03c3\u03b8\u03ae\u03ba\u03b7 \u03c0\u03b1\u03c1\u03b1\u03bb\u03b7\u03c0\u03c4\u03ce\u03bd. \u0393\u03b9\u03b1 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2 \u03bf\u03c1\u03af\u03c3\u03c4\u03b5 \u03ba\u03b1\u03c4\u03ac\u03bb\u03bb\u03b7\u03bb\u03bf\u03c5\u03c2 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03b1\u03c3\u03c4\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>__str__</code>. \u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf template \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1: </p> template4_4.py<pre><code>import datetime\n\n\nclass Document:\n    def __init__(self, creation_date):\n        pass\n\n    def add_author(self, name):\n        pass\n\n    def __str__(self):\n        pass\n\n\nclass Book(Document):\n    def __init__(self, creation_date, title):\n        pass\n\n    def __str__(self):\n        pass\n\n\nclass Email(Document):\n    def __init__(self, creation_date, sender, subject):\n        pass\n\n    def add_recipient(self, name):\n        pass\n\n    def __str__(self):\n        pass\n\n\nif __name__ == \"__main__\":\n    documents = []\n    d1 = Document(datetime.datetime(2022, 3, 24, 9, 30))\n    d1.add_author(\"Nikos\")\n    d2 = Document(datetime.datetime(2022, 3, 24, 10, 20))\n    d2.add_author(\"Petros\")\n    d2.add_author(\"Maria\")\n\n    d3 = Book(datetime.datetime(2021, 1, 1, 0, 0), \"Philosophy 101\")\n    d3.add_author(\"Socrates\")\n    d3.add_author(\"Descartes\")\n    d3.add_author(\"Nietschie\")\n\n    d4 = Email(datetime.datetime(2022, 3, 26, 10, 30), \"Panayiotis\", \"Important notice\")\n    d4.add_author(\"Panayiotis\")\n    d4.add_recipient(\"Maria\")\n\n    d5 = Email(datetime.datetime(2022, 3, 21, 22, 45), \"Marianthi\", \"SPAM\")\n    d5.add_author(\"Marianthi\")\n    d5.add_author(\"Vasilis\")\n    d5.add_recipient(\"Maria\")\n    d5.add_recipient(\"Christos\")\n    d5.add_recipient(\"Vasilis\")\n    d5.add_recipient(\"Sofia\")\n\n    documents.append(d1)\n    documents.append(d2)\n    documents.append(d3)\n    documents.append(d4)\n    documents.append(d5)\n\n    for d in documents:\n        print(d)\n</code></pre> <p>\u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03ad\u03be\u03bf\u03b4\u03bf\u03c2 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7: </p> <pre><code>Document created at 2022-03-24 09:30:00 authors=Nikos\nDocument created at 2022-03-24 10:20:00 authors=Petros, Maria\nDocument created at 2021-01-01 00:00:00 authors=Socrates, Descartes, Nietschie title=Philosophy 101 type=BOOK\nDocument created at 2022-03-26 10:30:00 authors=Panayiotis sender=Panayiotis subject=Important notice recipients=Maria type=EMAIL\nDocument created at 2022-03-21 22:45:00 authors=Marianthi, Vasilis sender=Marianthi subject=SPAM recipients=Maria, Christos, Vasilis, Sofia type=EMAIL\n</code></pre> <ul> <li>\u03a3\u03c5\u03bc\u03c0\u03bb\u03b7\u03c1\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf\u03bd \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c3\u03c4\u03b7 <code>main</code> \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03b5\u03b3\u03b3\u03c1\u03ac\u03c6\u03c9\u03bd \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03b7 \u03c3\u03b5 \u03b1\u03cd\u03be\u03bf\u03c5\u03c3\u03b1 \u03c3\u03b5\u03b9\u03c1\u03ac \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03ce\u03c1\u03b1\u03c2 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1\u03c2. </li> </ul> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A4 <p>template4_4_sol.py<pre><code>import datetime\n\n\nclass Document:\n    def __init__(self, creation_date):\n        self.authors = []\n        self.creation_date = creation_date\n\n    def add_author(self, name):\n        self.authors.append(name)\n\n    def __str__(self):\n        return f\"Document created at {self.creation_date} authors={', '.join(self.authors)}\"\n\n\nclass Book(Document):\n    def __init__(self, creation_date, title):\n        Document.__init__(self, creation_date)\n        self.title = title\n\n    def __str__(self):\n        return f\"{Document.__str__(self)} title={self.title} type=BOOK\"\n\n\nclass Email(Document):\n    def __init__(self, creation_date, sender, subject):\n        Document.__init__(self, creation_date)\n        self.sender = sender\n        self.subject = subject\n        self.recipients = []\n\n    def add_recipient(self, name):\n        self.recipients.append(name)\n\n    def __str__(self):\n        return f\"{Document.__str__(self)} sender={self.sender} subject={self.subject} recipients={', '.join(self.recipients)} type=EMAIL\"\n\n\nif __name__ == \"__main__\":\n    documents = []\n    d1 = Document(datetime.datetime(2022, 3, 24, 9, 30))\n    d1.add_author(\"Nikos\")\n    d2 = Document(datetime.datetime(2022, 3, 24, 10, 20))\n    d2.add_author(\"Petros\")\n    d2.add_author(\"Maria\")\n\n    d3 = Book(datetime.datetime(2021, 1, 1, 0, 0), \"Philosophy 101\")\n    d3.add_author(\"Socrates\")\n    d3.add_author(\"Descartes\")\n    d3.add_author(\"Nietschie\")\n\n    d4 = Email(datetime.datetime(2022, 3, 26, 10, 30), \"Panayiotis\", \"Important notice\")\n    d4.add_author(\"Panayiotis\")\n    d4.add_recipient(\"Maria\")\n\n    d5 = Email(datetime.datetime(2022, 3, 21, 22, 45), \"Marianthi\", \"SPAM\")\n    d5.add_author(\"Marianthi\")\n    d5.add_author(\"Vasilis\")\n    d5.add_recipient(\"Maria\")\n    d5.add_recipient(\"Christos\")\n    d5.add_recipient(\"Vasilis\")\n    d5.add_recipient(\"Sofia\")\n\n    documents.append(d1)\n    documents.append(d2)\n    documents.append(d3)\n    documents.append(d4)\n    documents.append(d5)\n\n    for d in documents:\n        print(d)\n\n    # \u0395\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03b5\u03b3\u03b3\u03c1\u03ac\u03c6\u03c9\u03bd \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03c9\u03bd \u03ba\u03b1\u03c4\u03ac \u03b7\u03bc\u03b5\u03c1\u03bf\u03bc\u03b7\u03bd\u03af\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1\u03c2\n    print(\"#\" * 80)\n    for d in sorted(documents, key=lambda x: x.creation_date):\n        print(d)\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>Document created at 2022-03-24 09:30:00 authors=Nikos\nDocument created at 2022-03-24 10:20:00 authors=Petros, Maria\nDocument created at 2021-01-01 00:00:00 authors=Socrates, Descartes, Nietschie title=Philosophy 101 type=BOOK\nDocument created at 2022-03-26 10:30:00 authors=Panayiotis sender=Panayiotis subject=Important notice recipients=Maria type=EMAIL\nDocument created at 2022-03-21 22:45:00 authors=Marianthi, Vasilis sender=Marianthi subject=SPAM recipients=Maria, Christos, Vasilis, Sofia type=EMAIL\n################################################################################\nDocument created at 2021-01-01 00:00:00 authors=Socrates, Descartes, Nietschie title=Philosophy 101 type=BOOK\nDocument created at 2022-03-21 22:45:00 authors=Marianthi, Vasilis sender=Marianthi subject=SPAM recipients=Maria, Christos, Vasilis, Sofia type=EMAIL\nDocument created at 2022-03-24 09:30:00 authors=Nikos\nDocument created at 2022-03-24 10:20:00 authors=Petros, Maria\nDocument created at 2022-03-26 10:30:00 authors=Panayiotis sender=Panayiotis subject=Important notice recipients=Maria type=EMAIL\n</code></pre></p>"},{"location":"lab4_python/#_2","title":"\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03b5\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E4A5 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03ba\u03bb\u03ac\u03c3\u03b7 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>Cylinder</code> (\u03ba\u03cd\u03bb\u03b9\u03bd\u03b4\u03c1\u03bf\u03c2) \u03c0\u03bf\u03c5: </p> <ol> <li>N\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03c9\u03c2 \u00ab\u03b9\u03b4\u03b9\u03c9\u03c4\u03b9\u03ba\u03ac \u03bc\u03ad\u03bb\u03b7\u00bb \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c4\u03b1 \u03c0\u03b5\u03b4\u03af\u03b1 <code>_height</code> (\u03cd\u03c8\u03bf\u03c2 \u03ba\u03c5\u03bb\u03af\u03bd\u03b4\u03c1\u03bf\u03c5) \u03ba\u03b1\u03b9 <code>_radius</code> (\u03b1\u03ba\u03c4\u03af\u03bd\u03b1 \u03b2\u03ac\u03c3\u03b7\u03c2 \u03ba\u03c5\u03bb\u03af\u03bd\u03b4\u03c1\u03bf\u03c5). </li> <li>\u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03bc\u03b5 \u03c4\u03b7\u03bd <code>__init__</code> \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03b1\u03c3\u03c4\u03ae \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b8\u03ad\u03c4\u03b5\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03b4\u03cd\u03bf \u03c4\u03b7\u03c2 \u03bc\u03ad\u03bb\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03bc\u03ad\u03c3\u03c9 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9. </li> <li>\u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>volume</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf\u03bd \u03cc\u03b3\u03ba\u03bf \u03c4\u03bf\u03c5 \u03ba\u03c5\u03bb\u03af\u03bd\u03b4\u03c1\u03bf\u03c5 \u03bc\u03b5 \u03b2\u03ac\u03c3\u03b7 \u03c4\u03bf\u03bd \u03c4\u03cd\u03c0\u03bf \\(V=\\pi r^2h\\), \u03cc\u03c0\u03bf\u03c5 \\(r\\) \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b1\u03ba\u03c4\u03af\u03bd\u03b1 \u03c4\u03b7\u03c2 \u03b2\u03ac\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \\(h\\) \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03cd\u03c8\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03c5\u03bb\u03af\u03bd\u03b4\u03c1\u03bf\u03c5 (\u03ba\u03b1\u03b9 \\(\\pi = 3.14\\)). </li> <li>\u03a3\u03c5\u03bc\u03c0\u03bb\u03b7\u03c1\u03ce\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>__str__</code> \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03b5\u03bd\u03cc\u03c2 \u03ba\u03c5\u03bb\u03af\u03bd\u03b4\u03c1\u03bf\u03c5 \u03c3\u03c4\u03b7 \u03bc\u03bf\u03c1\u03c6\u03ae (\u03b1\u03ba\u03c4\u03af\u03bd\u03b1, \u03cd\u03c8\u03bf\u03c2, \u03cc\u03b3\u03ba\u03bf\u03c2). </li> <li>\u03a3\u03c4\u03b7 <code>__main__</code> \u03b3\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 <code>Cylinder</code> \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03c4\u03b5 5 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 <code>Cylinder</code> \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03cd\u03c8\u03bf\u03c5\u03c2 \u03ba\u03c5\u03bb\u03af\u03bd\u03b4\u03c1\u03bf\u03c5 \u03ba\u03b1\u03b9 \u03b1\u03ba\u03c4\u03af\u03bd\u03b1\u03c2 \u03b2\u03ac\u03c3\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b4\u03af\u03bd\u03b5\u03b9 \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2. \u03a4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>sort</code>  \u03c4\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03b1 \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03c3\u03b5 \u03c6\u03b8\u03af\u03bd\u03bf\u03c5\u03c3\u03b1 \u03c3\u03b5\u03b9\u03c1\u03ac \u03b2\u03ac\u03c3\u03b5\u03b9 \u03cc\u03b3\u03ba\u03bf\u03c5 \u03ba\u03b1\u03b9 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c0\u03c1\u03bf\u03ba\u03b1\u03bb\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03b7\u03bd \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 <code>__str__</code> \u03b3\u03b9\u03b1 \u03ba\u03b1\u03b8\u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2.</li> </ol> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A5 e4a5.py<pre><code>import math\n\n\nclass Cylinder:\n    def __init__(self, radius, height):\n        self._radius = radius\n        self._height = height\n\n    def __str__(self):\n        return (\n            f\"(\u03b1\u03ba\u03c4\u03af\u03bd\u03b1={self._radius}, \u03cd\u03c8\u03bf\u03c2={self._height}, \u03cc\u03b3\u03ba\u03bf\u03c2={self.volume():.2f})\"\n        )\n\n    def volume(self):\n        return math.pi * self._radius**2 * self._height\n\n\nif __name__ == \"__main__\":\n    list_of_cylinders = []\n    for i in range(5):\n        while True:\n            try:\n                r, h = input(f\"\u0394\u03ce\u03c3\u03b5 \u03b1\u03ba\u03c4\u03af\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03cd\u03c8\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03ba\u03cd\u03bb\u03b9\u03b4\u03c1\u03bf {i+1}: \").split()\n                r = float(r)\n                h = float(h)\n                if r &gt; 0 and h &gt; 0:\n                    break\n                else:\n                    print(\"\u039b\u03ac\u03b8\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ae, \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03b8\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2\")\n            except ValueError:\n                print(\"\u039b\u03ac\u03b8\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ae, \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03bc\u03b5 \u03c5\u03c0\u03bf\u03b4\u03b9\u03b1\u03c3\u03c4\u03bf\u03bb\u03ae \u03c4\u03b7\u03bd .\")\n        list_of_cylinders.append(Cylinder(r, h))\n\n    list_of_cylinders.sort(reverse=True, key=lambda c: c.volume())\n\n    for cyl in list_of_cylinders:\n        print(cyl)\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>\u0394\u03ce\u03c3\u03b5 \u03b1\u03ba\u03c4\u03af\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03cd\u03c8\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03ba\u03cd\u03bb\u03b9\u03b4\u03c1\u03bf 1: 2 3.4\n\u0394\u03ce\u03c3\u03b5 \u03b1\u03ba\u03c4\u03af\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03cd\u03c8\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03ba\u03cd\u03bb\u03b9\u03b4\u03c1\u03bf 2: 1.2 4.5\n\u0394\u03ce\u03c3\u03b5 \u03b1\u03ba\u03c4\u03af\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03cd\u03c8\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03ba\u03cd\u03bb\u03b9\u03b4\u03c1\u03bf 3: 12.5 8.9\n\u0394\u03ce\u03c3\u03b5 \u03b1\u03ba\u03c4\u03af\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03cd\u03c8\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03ba\u03cd\u03bb\u03b9\u03b4\u03c1\u03bf 4: 3.3 6.7\n\u0394\u03ce\u03c3\u03b5 \u03b1\u03ba\u03c4\u03af\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03cd\u03c8\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03ba\u03cd\u03bb\u03b9\u03b4\u03c1\u03bf 5: 12.1 90.1\n(\u03b1\u03ba\u03c4\u03af\u03bd\u03b1=12.1, \u03cd\u03c8\u03bf\u03c2=90.1, \u03cc\u03b3\u03ba\u03bf\u03c2=41442.45)\n(\u03b1\u03ba\u03c4\u03af\u03bd\u03b1=12.5, \u03cd\u03c8\u03bf\u03c2=8.9, \u03cc\u03b3\u03ba\u03bf\u03c2=4368.78)\n(\u03b1\u03ba\u03c4\u03af\u03bd\u03b1=3.3, \u03cd\u03c8\u03bf\u03c2=6.7, \u03cc\u03b3\u03ba\u03bf\u03c2=229.22)\n(\u03b1\u03ba\u03c4\u03af\u03bd\u03b1=2.0, \u03cd\u03c8\u03bf\u03c2=3.4, \u03cc\u03b3\u03ba\u03bf\u03c2=42.73)\n(\u03b1\u03ba\u03c4\u03af\u03bd\u03b1=1.2, \u03cd\u03c8\u03bf\u03c2=4.5, \u03cc\u03b3\u03ba\u03bf\u03c2=20.36)\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E4A6 - \u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03ba\u03bb\u03ac\u03c3\u03b7 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>Interval</code> (\u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1) \u03c0\u03bf\u03c5:</p> <ol> <li>\u039d\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03c9\u03c2 \u00ab\u03b9\u03b4\u03b9\u03c9\u03c4\u03b9\u03ba\u03ac\u00bb \u03bc\u03ad\u03bb\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c4\u03b1 \u03c0\u03b5\u03b4\u03af\u03b1 <code>_from</code> (\u03b1\u03c0\u03cc) \u03ba\u03b1\u03b9 <code>_to</code> (\u03ad\u03c9\u03c2) \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b9\u03c3\u03c4\u03bf\u03cd\u03bd \u03ad\u03bd\u03b1 \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1, \u03c0.\u03c7. \u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 <code>[3, 7)</code> \u03c0\u03bf\u03c5 \u03ad\u03c7\u03b5\u03b9 \u03bc\u03ae\u03ba\u03bf\u03c2 4. </li> <li>\u039d\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1\u03bd \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03b1\u03c3\u03c4\u03ae \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b8\u03ad\u03c4\u03b5\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03b4\u03cd\u03bf \u03b9\u03b4\u03b9\u03c9\u03c4\u03b9\u03ba\u03ac \u03c4\u03b7\u03c2 \u03bc\u03ad\u03bb\u03b7, \u03bc\u03ad\u03c3\u03c9 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b1\u03bd \u03b3\u03af\u03bd\u03b5\u03b9 \u03b1\u03c0\u03cc\u03c0\u03b5\u03b9\u03c1\u03b1 \u03bd\u03b1 \u03b5\u03b9\u03c3\u03b1\u03c7\u03b8\u03b5\u03af \u03c4\u03b9\u03bc\u03ae \u03c3\u03c4\u03bf <code>_from</code> \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03ae \u03af\u03c3\u03b7 \u03c4\u03bf\u03c5 <code>_to</code>, \u03c4\u03cc\u03c4\u03b5 \u03bd\u03b1 \u03c0\u03c1\u03bf\u03ba\u03b1\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b5\u03be\u03b1\u03af\u03c1\u03b5\u03c3\u03b7 (exception) \u03c4\u03cd\u03c0\u03bf\u03c5 <code>ValueError</code>.</li> <li>\u039d\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>length</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf \u03bc\u03ae\u03ba\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2. \u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf <code>length</code> \u03c9\u03c2 <code>property</code> \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03b1\u03bd \u03b5\u03ba\u03c7\u03c9\u03c1\u03b7\u03b8\u03b5\u03af \u03c4\u03b9\u03bc\u03ae \u03c3\u03c4\u03bf <code>length</code> \u03c4\u03cc\u03c4\u03b5 \u03bd\u03b1 \u03c0\u03c1\u03bf\u03c3\u03b1\u03c1\u03bc\u03cc\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 \u03c0\u03b5\u03b4\u03af\u03bf\u03c5 <code>_to</code>.</li> <li>\u03a0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03c4\u03b5 \u03c4\u03b9\u03c2 magic \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5\u03c2 <code>__str__</code> \u03ba\u03b1\u03b9 <code>__repr__</code>.</li> <li>\u039d\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03ba\u03bb\u03ac\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>_cnt</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03bc\u03b5\u03c4\u03c1\u03ac \u03c4\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 <code>Interval</code> \u03c0\u03bf\u03c5 \u03ad\u03c7\u03bf\u03c5\u03bd \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b7\u03b8\u03b5\u03af \u03bc\u03b5 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03c0\u03b5\u03b4\u03af\u03b1 <code>_from</code> \u03ba\u03b1\u03b9 <code>_to</code>. \u039d\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 <code>_cnt</code> \u03bc\u03ad\u03c3\u03c9 \u03bc\u03b9\u03b1\u03c2 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5 \u03c4\u03b7\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>number_of_intervals</code>.  </li> <li>\u03a3\u03c4\u03b7 <code>__main__</code> \u03b3\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b6\u03b7\u03c4\u03ac \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03bd\u03b1 \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03b9 5 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03b4\u03b9\u03b1\u03c3\u03c4\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03ba\u03b1\u03b9 \u03b1\u03bd \u03c0\u03c1\u03bf\u03ba\u03b1\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03b5\u03be\u03b1\u03af\u03c1\u03b5\u03c3\u03b7, \u03b7 \u03b5\u03be\u03b1\u03af\u03c1\u03b5\u03c3\u03b7 \u03bd\u03b1 \u00ab\u03c3\u03c5\u03bb\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9\u00bb \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03ae\u03bd\u03c5\u03bc\u03b1, \u03b1\u03bb\u03bb\u03b9\u03ce\u03c2 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c4\u03bf \u03bc\u03ae\u03ba\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 (\u03bc\u03b5 \u03c4\u03b7\u03bd  <code>__str__</code>), \u03bd\u03b1 \u03b1\u03bb\u03bb\u03ac\u03b6\u03b5\u03b9 \u03c3\u03b5 10 \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b5\u03ba \u03bd\u03ad\u03bf\u03c5 \u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 \u03bc\u03b5 \u03c4\u03b7\u03bd <code>__repr__</code>. \u039c\u03b5 \u03c4\u03b7\u03bd \u03bf\u03bb\u03bf\u03ba\u03bb\u03ae\u03c1\u03c9\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2 \u03c4\u03c9\u03bd \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd <code>Interval</code>.</li> </ol> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A6 <p>e4a6.py<pre><code>class Interval:\n    _cnt = 0\n\n    @staticmethod\n    def number_of_intervals():\n        return Interval._cnt\n\n    def __init__(self, f, t):\n        if f &gt;= t:\n            raise ValueError('To \"\u03b1\u03c0\u03cc\" \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03bf \u03c4\u03bf\u03c5 \"\u03bc\u03ad\u03c7\u03c1\u03b9\"')\n        self._from = f\n        self._to = t\n        Interval._cnt += 1\n\n    @property\n    def length(self):\n        return self._to - self._from\n\n    @length.setter\n    def length(self, new_length):\n        self._to = self._from + new_length\n\n    def __str__(self):\n        return f\"[{self._from},{self._to})\"\n\n    def __repr__(self):\n        return f\"{self._from=} {self._to=}\"\n\n\ndef main():\n    for _ in range(5):\n        try:\n            f, t = input('\u0394\u03ce\u03c3\u03b5 \"\u03b1\u03c0\u03cc\", \"\u03bc\u03ad\u03c7\u03c1\u03b9\" \u03cc\u03c1\u03b9\u03b1 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2: ').split()\n            f = int(f)\n            t = int(t)\n            an_interval = Interval(f, t)\n            print(an_interval)\n            an_interval.length = 10\n            print(repr(an_interval))\n        except ValueError as ve:\n            print(ve)\n    print(\n        f\"\u03a4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ad\u03b3\u03ba\u03c5\u03c1\u03c9\u03bd \u03b4\u03b9\u03b1\u03c3\u03c4\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b5\u03b9\u03c3\u03ae\u03c7\u03b8\u03b7\u03c3\u03b1\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 {Interval.number_of_intervals()}\"\n    )\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>\u0394\u03ce\u03c3\u03b5 \"\u03b1\u03c0\u03cc\", \"\u03bc\u03ad\u03c7\u03c1\u03b9\" \u03cc\u03c1\u03b9\u03b1 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2: 1 5\n[1,5)\nself._from=1 self._to=11\n\u0394\u03ce\u03c3\u03b5 \"\u03b1\u03c0\u03cc\", \"\u03bc\u03ad\u03c7\u03c1\u03b9\" \u03cc\u03c1\u03b9\u03b1 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2: 4 6\n[4,6)\nself._from=4 self._to=14\n\u0394\u03ce\u03c3\u03b5 \"\u03b1\u03c0\u03cc\", \"\u03bc\u03ad\u03c7\u03c1\u03b9\" \u03cc\u03c1\u03b9\u03b1 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2: 4 2\nTo \"\u03b1\u03c0\u03cc\" \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03bf \u03c4\u03bf\u03c5 \"\u03bc\u03ad\u03c7\u03c1\u03b9\"\n\u0394\u03ce\u03c3\u03b5 \"\u03b1\u03c0\u03cc\", \"\u03bc\u03ad\u03c7\u03c1\u03b9\" \u03cc\u03c1\u03b9\u03b1 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2: 5 1\nTo \"\u03b1\u03c0\u03cc\" \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03bf \u03c4\u03bf\u03c5 \"\u03bc\u03ad\u03c7\u03c1\u03b9\"\n\u0394\u03ce\u03c3\u03b5 \"\u03b1\u03c0\u03cc\", \"\u03bc\u03ad\u03c7\u03c1\u03b9\" \u03cc\u03c1\u03b9\u03b1 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2: 1 100\n[1,100)\nself._from=1 self._to=11\n\u03a4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03ad\u03b3\u03ba\u03c5\u03c1\u03c9\u03bd \u03b4\u03b9\u03b1\u03c3\u03c4\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b5\u03b9\u03c3\u03ae\u03c7\u03b8\u03b7\u03c3\u03b1\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 3\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E4A7<sup>4</sup> - \u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03b7\u03bd \u03ba\u03bb\u03ac\u03c3\u03b7 <code>Length</code> \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03bc\u03b5 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03c4\u03b7\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2:</p> <pre><code>Length(5.5, \"cm\")\nLength(5.5, \"in\")\n</code></pre> <p>\u039f\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5\u03c2 <code>__str__</code> \u03ba\u03b1\u03b9 <code>__repr__</code> \u03c4\u03b7\u03c2 <code>Length</code>. \u03a5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae <code>+</code> \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b1\u03b8\u03c1\u03bf\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b4\u03cd\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 <code>Length</code> \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03bd\u03ad\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf. \u0391\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b1 \u03b4\u03cd\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03af\u03b4\u03b9\u03b1 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1 \u03bc\u03ae\u03ba\u03bf\u03c5\u03c2 (\u03b5\u03af\u03c4\u03b5 cm \u03b5\u03af\u03c4\u03b5 in) \u03c4\u03bf \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03b5 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1 \u03bc\u03ae\u03ba\u03bf\u03c5\u03c2. \u0391\u03bd \u03b7 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1 \u03bc\u03ae\u03ba\u03bf\u03c5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ae \u03b1\u03bd\u03ac\u03bc\u03b5\u03c3\u03b1 \u03c3\u03c4\u03b1 \u03b4\u03cd\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03c4\u03cc\u03c4\u03b5 \u03c4\u03bf \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03b5 \u03b5\u03ba\u03b1\u03c4\u03bf\u03c3\u03c4\u03ac. \u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b9 1 \u03af\u03bd\u03c4\u03c3\u03b1 \u03b9\u03c3\u03bf\u03cd\u03c4\u03b1\u03b9 \u03bc\u03b5 2.54 \u03b5\u03ba\u03b1\u03c4\u03bf\u03c3\u03c4\u03ac. \u0391\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03b5\u03af \u03ad\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03cc\u03c0\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b9\u03ba\u03ac \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf <code>Length</code> (\u03bc\u03b5 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1 \u03bc\u03ae\u03ba\u03bf\u03c5\u03c2 \u03c4\u03b1 \u03b5\u03ba\u03b1\u03c4\u03bf\u03c3\u03c4\u03ac) \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03b7\u03bd <code>__str__</code>, \u03bc\u03b5\u03c4\u03ac \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03ac\u03bb\u03bb\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf <code>Length</code> (\u03bc\u03b5 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1 \u03bc\u03ae\u03ba\u03bf\u03c5\u03c2 \u03c4\u03b9\u03c2 \u03af\u03bd\u03c4\u03c3\u03b5\u03c2) \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03b7\u03bd <code>__repr__</code> \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c4\u03ac \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae <code>+</code> \u03c0\u03c1\u03bf\u03c3\u03c4\u03af\u03b8\u03b5\u03bd\u03c4\u03b1\u03b9 \u03c4\u03b1 \u03b4\u03cd\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03bd\u03ad\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf: </p> <pre><code>$ python e4a7.py\n\u0395\u03ba\u03c4\u03cd\u03c0\u03c9\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bc\u03b5 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf __str__ (3 \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9)\n5.50cm\n5.50cm\n5.50cm\n\u0395\u03ba\u03c4\u03cd\u03c0\u03c9\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bc\u03b5 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf __repr__ (2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9)\nvalue=3.0 unit=in\nvalue=3.0 unit=in\n\u03a5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae +\n5.50cm + 3.00in = 13.12cm\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A7 e4a7.py<pre><code>class Length:\n    def __init__(self, value, unit):\n        self.value = value\n        self.unit = unit\n\n    def __str__(self):\n        return f\"{self.value:.2f}{self.unit}\"\n\n    def __repr__(self):\n        return f\"value={self.value} unit={self.unit}\"\n\n    def __add__(self, another_length):\n        if self.unit == another_length.unit:\n            return Length(self.unit, self.value + another_length.value)\n        total_length = 0\n        if self.unit == \"in\":\n            total_length += self.value * 2.54\n        else:\n            total_length += self.value\n        if another_length.unit == \"in\":\n            total_length += another_length.value * 2.54\n        else:\n            total_length += another_length.value\n        return Length(total_length, \"cm\")\n\n\ndef main():\n    a = Length(5.5, \"cm\")\n    b = Length(3.0, \"in\")\n\n    print(\"\u0395\u03ba\u03c4\u03cd\u03c0\u03c9\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bc\u03b5 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf __str__ (3 \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9)\")\n    print(a)\n    print(str(a))\n    print(a.__str__())\n\n    print(\"\u0395\u03ba\u03c4\u03cd\u03c0\u03c9\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bc\u03b5 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf __repr__ (2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9)\")\n    print(repr(b))\n    print(b.__repr__())\n\n    print(\"\u03a5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae +\")\n    c = a + b\n    print(f\"{a} + {b} = {c}\")\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 8<sup>4</sup> - \u0388\u03c3\u03c4\u03c9 \u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03c6\u03bf\u03c1\u03ac \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03b4\u03c1\u03b1\u03c3\u03c4\u03b7\u03c1\u03b9\u03bf\u03c4\u03ae\u03c4\u03c9\u03bd (TO DO LIST). \u03a3\u03c5\u03bc\u03c0\u03bb\u03b7\u03c1\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf\u03bd \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03c3\u03c4\u03b9\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 print \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c5\u03c4\u03cc \u03c0\u03bf\u03c5 \u03ad\u03c7\u03b5\u03b9 \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03bb\u03b7\u03c6\u03b8\u03b5\u03af \u03c9\u03c2 \u03c3\u03c7\u03cc\u03bb\u03b9\u03bf \u03b4\u03b5\u03be\u03b9\u03ac \u03c4\u03b7\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae\u03c2. </p> <pre><code>tdl = TodoList(\"groceries\")\ntdl.add(\"milk\")\ntdl.add(\"bread\")\nprint(tdl.todos) # [description=milk completed=False, description=bread completed=False]\ntdl.todos[0].toggle()\ntdl.stats() # {'open': 1, 'completed': 1}\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A8 e4a8.py<pre><code>class TodoList:\n    def __init__(self, title):\n        self.title = title\n        self.todos = []\n\n    def add(self, item_description):\n        todo = Todo(item_description)\n        self.todos.append(todo)\n\n    def stats(self):\n        stats_dict = {\"open\": 0, \"completed\": 0}\n        for todo in self.todos:\n            if todo.completed:\n                stats_dict[\"completed\"] += 1\n            else:\n                stats_dict[\"open\"] += 1\n        print(stats_dict)\n\n\nclass Todo:\n    def __init__(self, description):\n        self.description = description\n        self.completed = False\n\n    def toggle(self):\n        self.completed = not self.completed\n\n    def __repr__(self):\n        return f\"description={self.description} completed={self.completed}\"\n\n\ndef main():\n    tdl = TodoList(\"groceries\")\n    tdl.add(\"milk\")\n    tdl.add(\"bread\")\n    print(tdl.todos)\n    tdl.todos[0].toggle()\n    tdl.stats()\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 9<sup>5</sup> - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03ba\u03bb\u03ac\u03c3\u03b7 \u03b6\u03b1\u03c1\u03b9\u03bf\u03cd (<code>Dice</code>). \u03a5\u03bb\u03bf\u03c0\u03bf\u03af\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1:</p> <ul> <li>\u039f \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03b1\u03c3\u03c4\u03ae\u03c2 \u03bd\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>probs</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03bb\u03b5\u03be\u03b9\u03ba\u03cc \u03cc\u03c0\u03bf\u03c5 \u03ba\u03bb\u03b5\u03b9\u03b4\u03af \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c4\u03b7\u03c2 \u03c0\u03bb\u03b5\u03c5\u03c1\u03ac\u03c2 \u03c4\u03bf\u03c5 \u03b6\u03b1\u03c1\u03b9\u03bf\u03cd \u03ba\u03b1\u03b9 \u03c4\u03b9\u03bc\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c0\u03b9\u03b8\u03b1\u03bd\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03bf \u03b6\u03ac\u03c1\u03b9 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03b1\u03c5\u03c4\u03cc \u03c4\u03bf \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03c1\u03af\u03c8\u03b7 \u03c4\u03bf\u03c5. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c4\u03bf \u03bb\u03b5\u03be\u03b9\u03ba\u03cc <code>{1: 1/6, 2: 1/6, 3: 1/6, 4: 1/6, 5: 1/6, 6: 1/6}</code> \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03c3\u03c5\u03bd\u03b7\u03b8\u03b9\u03c3\u03bc\u03ad\u03bd\u03bf \u03b4\u03af\u03ba\u03b1\u03b9\u03bf \u03b6\u03ac\u03c1\u03b9.</li> <li>\u03a0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf <code>roll</code> \u03c0\u03bf\u03c5 \u03bd\u03b1  \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03bc\u03b5 \u03cc\u03bd\u03bf\u03bc\u03b1 <code>n</code> \u03bc\u03b5 \u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b7 \u03c4\u03b9\u03bc\u03ae 1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c0\u03cc <code>n</code> \u03c1\u03af\u03c8\u03b5\u03b9\u03c2 \u03c4\u03bf\u03c5 \u03b6\u03b1\u03c1\u03b9\u03bf\u03cd.</li> <li>\u03a0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf <code>expected_value</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b1\u03bd\u03b1\u03bc\u03b5\u03bd\u03cc\u03bc\u03b5\u03bd\u03b7 \u03c4\u03b9\u03bc\u03ae \u03ba\u03b1\u03b9 \u03bf\u03c1\u03af\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c9\u03c2 <code>@property</code>.</li> <li>\u03a0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf \u03ba\u03bb\u03ac\u03c3\u03b7\u03c2 <code>from_sides</code> \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03c0\u03bb\u03b5\u03c5\u03c1\u03ce\u03bd \u03b5\u03bd\u03cc\u03c2 \u03b6\u03b1\u03c1\u03b9\u03bf\u03cd \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03b6\u03b1\u03c1\u03b9\u03bf\u03cd \u03bc\u03b5 \u03af\u03c3\u03b7 \u03c0\u03b9\u03b8\u03b1\u03bd\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03c0\u03bb\u03b5\u03c5\u03c1\u03ac \u03c4\u03bf\u03c5 (\u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf\u03bd decorator <code>@classmethod</code>).</li> <li>\u03a0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf <code>__len__</code> \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03b3\u03b9\u03b1 \u03ad\u03bd\u03b1 \u03b6\u03ac\u03c1\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03c0\u03bb\u03b5\u03c5\u03c1\u03ce\u03bd \u03c4\u03bf\u03c5.</li> <li>\u03a5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae <code>+</code> \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03ad\u03bd\u03b1 \u03bd\u03ad\u03bf \u03b6\u03ac\u03c1\u03b9 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03c0\u03b9\u03b8\u03b1\u03bd\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 \u03bd\u03b1 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c8\u03b5\u03b9 \u03c4\u03bf \u03ba\u03b1\u03b8\u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c0\u03cc \u03c4\u03bf \u03c3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc \u03c4\u03c9\u03bd \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03c9\u03bd \u03b4\u03cd\u03bf \u03b6\u03b1\u03c1\u03b9\u03ce\u03bd. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c4\u03bf\u03bd\u03c4\u03b1\u03c2 \u03b4\u03cd\u03bf \u03b6\u03ac\u03c1\u03b9\u03b1 \u03bc\u03b5 6 \u03c0\u03bb\u03b5\u03c5\u03c1\u03ad\u03c2 \u03c4\u03bf \u03ba\u03b1\u03b8\u03ad\u03bd\u03b1 \u03b8\u03b1 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c8\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03bd\u03ad\u03bf \"\u03b6\u03ac\u03c1\u03b9\" \u03bc\u03b5 \u03c0\u03b9\u03b8\u03b1\u03bd\u03ac \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c0\u03cc \u03c4\u03bf 2 \u03bc\u03ad\u03c7\u03c1\u03b9 \u03c4\u03bf 12, \u03cc\u03c0\u03bf\u03c5 \u03c4\u03bf 2 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9 \u03bc\u03cc\u03bd\u03bf \u03bc\u03b5 (1,1) \u03ba\u03b1\u03b9 \u03ad\u03c7\u03b5\u03b9 \u03c0\u03b9\u03b8\u03b1\u03bd\u03cc\u03c4\u03b7\u03c4\u03b1 <code>1/6 * 1/6</code> \u03bd\u03b1 \u03c3\u03c5\u03bc\u03b2\u03b5\u03af, \u03c4\u03bf 3 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c8\u03b5\u03b9 \u03bc\u03b5 (1,2) \u03ba\u03b1\u03b9 (2,1) \u03ba\u03b1\u03b9 \u03ad\u03c7\u03b5\u03b9 \u03c0\u03b9\u03b8\u03b1\u03bd\u03cc\u03c4\u03b7\u03c4\u03b1 <code>1/6 * 1/6 + 1/6 * 1/6</code> \u03bd\u03b1 \u03c3\u03c5\u03bc\u03b2\u03b5\u03af \u03ba.\u03bf.\u03ba.</li> </ul> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A9 e4a9.py<pre><code>import random\n\n\nclass Dice:\n    def __init__(self, probs):\n        self.probs = probs\n\n    @classmethod\n    def from_sides(cls, n=6):\n        return Dice({i: 1 / n for i in range(1, n + 1)})\n\n    def roll(self, n=1):\n        sides = list(self.probs.keys())\n        probabilities = list(self.probs.values())\n        return random.choices(sides, weights=probabilities, k=n)\n\n    @property\n    def expected_value(self):\n        return sum(i * p for i, p in self.probs.items())\n\n    def __len__(self):\n        return len(self.probs)\n\n    def __add__(self, other):\n        if not isinstance(other, Dice):\n            raise ValueError(\"Only dice + dice is allowed!\")\n        new_probs = {}\n        for s1, p1 in self.probs.items():\n            for s2, p2 in other.probs.items():\n                new_key = s1 + s2\n                if new_key not in new_probs:\n                    new_probs[new_key] = 0\n                new_probs[new_key] += p1 * p2\n        return Dice(new_probs)\n\n    def __repr__(self):\n        return f\"Dice({self.probs})\"\n\n    def __str__(self):\n        sides = \", \".join(map(str, self.probs.keys()))\n        return f\"Dice with sides: {sides}\"\n\n\nif __name__ == \"__main__\":\n    d6 = Dice({1: 1 / 6, 2: 1 / 6, 3: 1 / 6, 4: 1 / 6, 5: 1 / 6, 6: 1 / 6})\n    print(repr(d6))\n    print(str(d6))\n    print(f\"Rolls: {d6.roll(5)}\")\n    print(f\"Expected value of d6 = {d6.expected_value}, sides = {len(d6)}\")\n\n    d4 = Dice.from_sides(4)\n    print(repr(d4))\n    print(str(d4))\n    print(f\"Rolls: {d4.roll(5)}\")\n    print(f\"Expected value of d4 = {d4.expected_value}, sides = {len(d4)}\")\n\n    d6_d4 = d6 + d4\n    print(repr(d6_d4))\n    print(str(d6_d4))\n    print(f\"Rolls: {d6_d4.roll(5)}\")\n    print(f\"Expected value of d6_d4 = {d6_d4.expected_value}, sides = {len(d6_d4)}\")\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python e4a9.py\nDice({1: 0.16666666666666666, 2: 0.16666666666666666, 3: 0.16666666666666666, 4: 0.16666666666666666, 5: 0.16666666666666666, 6: 0.16666666666666666})\nDice with sides: 1, 2, 3, 4, 5, 6\nRolls: [2, 4, 1, 5, 6]\nExpected value of d6 = 3.5, sides = 6\nDice({1: 0.25, 2: 0.25, 3: 0.25, 4: 0.25})\nDice with sides: 1, 2, 3, 4\nRolls: [3, 1, 2, 4, 1]\nExpected value of d4 = 2.5, sides = 4\nDice({2: 0.041666666666666664, 3: 0.08333333333333333, 4: 0.125, 5: 0.16666666666666666, 6: 0.16666666666666666, 7: 0.16666666666666666, 8: 0.125, 9: 0.08333333333333333, 10: 0.041666666666666664})\nDice with sides: 2, 3, 4, 5, 6, 7, 8, 9, 10\nRolls: [5, 8, 5, 5, 2]\nExpected value of d6_d4 = 6.0, sides = 9\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 10 \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd (\u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd 2). \u0391\u03bd \u03c4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf sum \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03bf\u03cd\u03bd. \u0391\u03bd \u03c4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 reverse \u03c4\u03cc\u03c4\u03b5 \u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c0\u03bf\u03c5 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03b5\u03af.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A10 e4a10.py<pre><code>import sys\n\ndef main():\n    if len(sys.argv) &lt; 2:\n        print(\"\u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bb\u03ce \u03b4\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd 2 \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1\")\n        print(\"\u03a7\u03c1\u03ae\u03c3\u03b7: python program.py [sum|reverse] \u03c4\u03b9\u03bc\u03ae1 \u03c4\u03b9\u03bc\u03ae2 ...\")\n        return\n\n    action = sys.argv[1] \n\n    if action == \"sum\":\n        if len(sys.argv) &lt; 3:\n            print(\"\u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bb\u03ce \u03b4\u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd \u03ad\u03bd\u03b1\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc \u03b3\u03b9\u03b1 \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1\")\n            return\n\n        total = 0\n        try:\n            for num in sys.argv[2:]:\n                total += float(num)\n            print(f\"\u03a4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9: {total}\")\n        except ValueError:\n            print(\"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1: \u038c\u03bb\u03b1 \u03c4\u03b1 \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03af\")\n\n    elif action == \"reverse\":\n        if len(sys.argv) &lt; 3:\n            print(\"\u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bb\u03ce \u03b4\u03ce\u03c3\u03c4\u03b5 \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03b3\u03b9\u03b1 \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae\")\n            return\n\n        text = \" \".join(sys.argv[2:])\n        reversed_text = text[::-1]\n        print(f\"\u0391\u03bd\u03c4\u03b5\u03c3\u03c4\u03c1\u03b1\u03bc\u03bc\u03ad\u03bd\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf: {reversed_text}\")\n\n    else:\n        print(f\"\u0386\u03b3\u03bd\u03c9\u03c3\u03c4\u03b7 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae: {action}\")\n        print(\"\u0394\u03b9\u03b1\u03b8\u03ad\u03c3\u03b9\u03bc\u03b5\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2: sum, reverse\")\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python e4a10.py sum 5 10 15\n\u03a4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9: 30.0\n$ python e4a10.py reverse Hello\nolleH\n</code></pre></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A10 \u03bc\u03b5 \u03c4\u03bf argparse e4a10b.py<pre><code>import argparse\n\ndef main():\n    parser = argparse.ArgumentParser(description=\"Process some inputs with different operations.\")\n\n    subparsers = parser.add_subparsers(dest='command', required=True, help='Available commands')\n\n    sum_parser = subparsers.add_parser('sum', help='Sum all the provided numbers')\n    sum_parser.add_argument('numbers', type=float, nargs='+', help='Numbers to sum')\n\n    reverse_parser = subparsers.add_parser('reverse', help='Reverse the provided text')\n    reverse_parser.add_argument('text', nargs='+', help='Text to reverse')\n\n    args = parser.parse_args()\n\n    if args.command == 'sum':\n        total = sum(args.numbers)\n        print(f\"The sum is: {total}\")\n    elif args.command == 'reverse':\n        reversed_text = ' '.join(args.text)[::-1]\n        print(f\"Reversed text: {reversed_text}\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python e4a10b.py -h\nusage: e4a10b.py [-h] {sum,reverse} ...\n\nProcess some inputs with different operations.\n\npositional arguments:\n{sum,reverse}  Available commands\n    sum          Sum all the provided numbers\n    reverse      Reverse the provided text\n\noptions:\n-h, --help     show this help message and exit\n$ python e4a10b.py sum -h \nusage: e4a10b.py sum [-h] numbers [numbers ...]\n\npositional arguments:\nnumbers     Numbers to sum\n\noptions:\n-h, --help  show this help message and exit\n$ python e4a10b.py reverse -h\nusage: e4a10b.py reverse [-h] text [text ...]\n\npositional arguments:\ntext        Text to reverse\n\noptions:\n-h, --help  show this help message and exit\n$ python e4a10b.py revers     \nusage: e4a10b.py [-h] {sum,reverse} ...\ne4a10b.py: error: argument command: invalid choice: 'revers' (choose from 'sum', 'reverse')\n$ python e4a10b.py sum 10 20 30 \nThe sum is: 60.0\n$ python e4a10b.py reverse Hello\nReversed text: olleH\n</code></pre></p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 11 \u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c1\u03c5\u03b8\u03bc\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf logging \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03bc\u03b7\u03bd\u03cd\u03bc\u03b1\u03c4\u03b1 INFO \u03c3\u03c4\u03b7\u03bd \u03bf\u03b8\u03cc\u03bd\u03b7 (\u03bc\u03b5 format %(levelname)s - %(message)s) \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03b5\u03b9 \u03c4\u03b1 \u03bc\u03b7\u03bd\u03cd\u03bc\u03b1\u03c4\u03b1 (\u03b1\u03c0\u03cc DEBUG \u03ba\u03b1\u03b9 \u03c0\u03ac\u03bd\u03c9) \u03c3\u03b5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf e4a11.log (\u03bc\u03b5 format %(asctime)s - %(levelname)s - %(message)s). \u03a5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 calculate_division(x, y) \u03c0\u03bf\u03c5: (1) \u03ba\u03b1\u03c4\u03b1\u03b3\u03c1\u03ac\u03c6\u03b5\u03b9 DEBUG \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03b5\u03b9\u03c3\u03cc\u03b4\u03bf\u03c5, (2) \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 \u03c4\u03b7\u03c2 \u03b4\u03b9\u03b1\u03af\u03c1\u03b5\u03c3\u03b7\u03c2 (INFO \u03b3\u03b9\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c5\u03c7\u03af\u03b1), (3) \u03ba\u03b1\u03c4\u03b1\u03b3\u03c1\u03ac\u03c6\u03b5\u03b9 ERROR \u03bc\u03b5 stack trace \u03b1\u03bd y=0. \u039a\u03b1\u03bb\u03ad\u03c3\u03c4\u03b5 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b4\u03cd\u03bf \u03c6\u03bf\u03c1\u03ad\u03c2 (\u03ad\u03b3\u03ba\u03c5\u03c1\u03b7 \u03ba\u03b1\u03b9 \u03bc\u03b7 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b7 \u03b4\u03b9\u03b1\u03af\u03c1\u03b5\u03c3\u03b7) \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b1\u03bb\u03b7\u03b8\u03b5\u03cd\u03c3\u03c4\u03b5 \u03c4\u03b1 logs \u03c3\u03c4\u03b7\u03bd \u03bf\u03b8\u03cc\u03bd\u03b7 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E4A11 e4a11.py<pre><code>import logging\n\nlogging.basicConfig(\n    level=logging.INFO,\n    format=\"%(levelname)s - %(message)s\",\n    handlers=[logging.StreamHandler(), logging.FileHandler(\"e4a11.log\", mode=\"w\")],\n)\n\nlogger = logging.getLogger()\nlogger.handlers[1].setFormatter(\n    logging.Formatter(\"%(asctime)s - %(levelname)s - %(message)s\")\n)\nlogger.handlers[1].setLevel(logging.DEBUG)\n\n\ndef calculate_division(x, y):\n    logger.debug(f\"Calculating {x} / {y}\")\n    try:\n        result = x / y\n        logger.info(f\"Result: {result}\")\n        return result\n    except ZeroDivisionError:\n        logger.exception(\"Division by zero!\")\n        return None\n\n\ncalculate_division(10, 2)\ncalculate_division(5, 0)\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 <pre><code>$ python e4a11.py\nINFO - Result: 5.0\nERROR - Division by zero!\nTraceback (most recent call last):\nFile \"/Users/chgogos/git_repos/dituoi_ARCHES_GLOSSON_PROGRAMMATISMOU/docs/src/python/lab4/e4a11.py\", line 20, in calculate_division\n    result = x / y\nZeroDivisionError: division by zero\n</code></pre></p> <ol> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03bf\u03cd\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u21a9</p> </li> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd \u21a9</p> </li> <li> <p>Notebook \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd \u21a9</p> </li> <li> <p>https://marko-knoebl.github.io/slides/python-intermediate-collection-en.html - Object Oriented Programming and Classes \u21a9\u21a9</p> </li> <li> <p>\u03a0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b1\u03c0\u03cc \u03c4\u03bf https://calmcode.io/course/objects - calmcode.io - objects \u21a9</p> </li> </ol>"},{"location":"lab5_python/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 5 \u03c3\u03c4\u03b7\u03bd Python","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: \u0393\u03c1\u03b1\u03c6\u03b9\u03ba\u03ac \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03b1 \u03b4\u03b9\u03b5\u03c0\u03b1\u03c6\u03ae\u03c2 \u03bc\u03b5 \u03c4\u03bf tkinter<sup>1</sup>, APIs, matplotlib<sup>2</sup>, MVC (Model View Controller)<sup>3</sup></p>"},{"location":"lab5_python/#_1","title":"\u0395\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7 (\u03b5\u03ba\u03c6\u03c9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bb\u03cd\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03c9\u03bd)","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E5A1 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03bd\u03b1 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03b9\u03ce\u03bd (todo list) \u03bc\u03ad\u03c3\u03c9 \u03b5\u03bd\u03cc\u03c2 \u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03bf\u03cd \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03bf\u03c2 \u03b4\u03b9\u03b5\u03c0\u03b1\u03c6\u03ae\u03c2. \u039f \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03bd\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03b9 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b5\u03c2 \u03c3\u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b4\u03b9\u03b1\u03b3\u03c1\u03ac\u03c6\u03b5\u03b9 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b5\u03c2 \u03b1\u03c0\u03cc \u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1. \u039d\u03b1 \u03bc\u03b7\u03bd \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c4\u03b7\u03c2 \u03af\u03b4\u03b9\u03b1\u03c2 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03c0\u03ac\u03bd\u03c9 \u03b1\u03c0\u03cc \u03bc\u03b9\u03b1 \u03c6\u03bf\u03c1\u03ac \u03c3\u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03b9\u03ce\u03bd.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A1 <p>5_1_sol.py<pre><code>import tkinter as tk\nfrom tkinter import ttk  # ttk = themed widgets\nfrom tkinter.messagebox import showwarning\n\n\ndef add_task():\n    task = entry_task.get()\n    if task == \"\":\n        showwarning(title=\"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1!\", message=\"\u0398\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\")\n    elif task in tasks.get():\n        showwarning(title=\"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1!\", message=\"H \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03ae\u03b4\u03b7 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c3\u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1\")\n    else:\n        listbox_tasks.insert(tk.END, task)\n        entry_task.delete(0, tk.END)\n\n\ndef delete_task():\n    try:\n        task_index = listbox_tasks.curselection()[0]  # \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2\n        listbox_tasks.delete(task_index)\n    except:\n        showwarning(title=\"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1!\", message=\"\u0398\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03bb\u03ad\u03be\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\")\n\n\n#  \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 GUI\nroot = tk.Tk()  # \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b8\u03cd\u03c1\u03bf\u03c5\nroot.title(\"\u039b\u03af\u03c3\u03c4\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03b9\u03ce\u03bd\")\ntasks = tk.Variable(value=[])\n\nframe_tasks = ttk.Frame(root)  # \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 frame \u03b3\u03b9\u03b1 \u03c4\u03bf listbox \u03ba\u03b1\u03b9 \u03c4\u03bf scrollbar\nframe_tasks.pack()  # \u03c4\u03bf\u03c0\u03bf\u03b8\u03ad\u03c4\u03b7\u03c3\u03b7 frame \u03c3\u03c4\u03bf \u03c0\u03b1\u03c1\u03ac\u03b8\u03c5\u03c1\u03bf\n\nlistbox_tasks = tk.Listbox(\n    frame_tasks, height=10, width=50, listvariable=tasks\n)  # \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 listbox\nlistbox_tasks.pack(side=tk.LEFT)  # \u03c4\u03bf\u03c0\u03bf\u03b8\u03ad\u03c4\u03b7\u03c3\u03b7 listbox \u03c3\u03c4\u03bf frame\n\nscrollbar_tasks = ttk.Scrollbar(frame_tasks)  # \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 scrollbar \u03b3\u03b9\u03b1 \u03c4\u03bf listbox\nscrollbar_tasks.pack(side=tk.RIGHT, fill=tk.Y)  # \u03c4\u03bf\u03c0\u03bf\u03b8\u03ad\u03c4\u03b7\u03c3\u03b7 scrollbar \u03c3\u03c4\u03bf frame\n\nlistbox_tasks.config(yscrollcommand=scrollbar_tasks.set)  # \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 listbox \u03bc\u03b5 scrollbar\nscrollbar_tasks.config(command=listbox_tasks.yview)  # \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 scrollbar \u03bc\u03b5 listbox\n\nentry_task = ttk.Entry(root)\nentry_task.pack(\n    fill=\"x\", expand=True\n)  # fill=\"x\" \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b3\u03b5\u03bc\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ac\u03c4\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03b1\u03c1\u03b1\u03b8\u03cd\u03c1\u03bf\u03c5\n\nbutton_add_task = ttk.Button(root, text=\"\u039d\u03ad\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\")\nbutton_add_task[\"command\"] = add_task  # \u03ae button_add_task.config(command=add_task)\nbutton_add_task.pack(fill=\"x\", expand=True)\n\nbutton_delete_task = ttk.Button(root, text=\"\u0394\u03b9\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2\", command=delete_task)\nbutton_delete_task.pack(fill=\"x\", expand=True)\n\nroot.eval(\"tk::PlaceWindow . center\")  # \u03c4\u03bf\u03c0\u03bf\u03b8\u03ad\u03c4\u03b7\u03c3\u03b7 \u03c0\u03b1\u03c1\u03b1\u03b8\u03cd\u03c1\u03bf\u03c5 \u03c3\u03c4\u03bf \u03ba\u03ad\u03bd\u03c4\u03c1\u03bf \u03c4\u03b7\u03c2 \u03bf\u03b8\u03cc\u03bd\u03b7\u03c2\nroot.mainloop()  # \u03ad\u03bd\u03b1\u03c1\u03be\u03b7 \u03b2\u03c1\u03cc\u03c7\u03bf\u03c5 \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03ce\u03bd\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 5_1_sol.py\n</code></pre> </p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A1 \u03bc\u03b5 OOP <p>5_1_sol_oop.py<pre><code>import tkinter as tk\nfrom tkinter import ttk  # themed widgets\nfrom tkinter.messagebox import showwarning\n\n\nclass App(tk.Tk):\n    def __init__(self):\n        super().__init__()\n        self.title(\"\u039b\u03af\u03c3\u03c4\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03b9\u03ce\u03bd\")\n        self.frame_tasks = ttk.Frame(self)\n        self.frame_tasks.pack()\n\n        self.tasks = tk.Variable(value=[])\n        self.listbox_tasks = tk.Listbox(\n            self.frame_tasks, height=10, width=50, listvariable=self.tasks\n        )\n        self.listbox_tasks.pack(side=tk.LEFT)\n\n        self.scrollbar_tasks = ttk.Scrollbar(self.frame_tasks)\n        self.scrollbar_tasks.pack(side=tk.RIGHT, fill=tk.Y)\n\n        # \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 listbox \u03bc\u03b5 scrollbar\n        self.listbox_tasks.config(yscrollcommand=self.scrollbar_tasks.set)\n        self.scrollbar_tasks.config(command=self.listbox_tasks.yview)\n\n        self.entry_task = ttk.Entry(self)\n        self.entry_task.pack(fill=\"x\", expand=True)\n\n        self.button_add_task = ttk.Button(\n            self, text=\"\u039d\u03ad\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\", command=self.add_task\n        )\n        self.button_add_task.pack(fill=\"x\", expand=True)\n\n        self.button_delete_task = ttk.Button(\n            self, text=\"\u0394\u03b9\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2\", command=self.delete_task\n        )\n        self.button_delete_task.pack(fill=\"x\", expand=True)\n\n    def add_task(self):\n        task = self.entry_task.get()\n        if task == \"\":\n            showwarning(title=\"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1!\", message=\"\u0398\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\")\n        elif task in self.tasks.get():\n            showwarning(title=\"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1!\", message=\"H \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03ae\u03b4\u03b7 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c3\u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1\")\n        else:\n            self.listbox_tasks.insert(tk.END, task)\n            self.entry_task.delete(0, tk.END)\n\n    def delete_task(self):\n        try:\n            task_index = self.listbox_tasks.curselection()[0]\n            self.listbox_tasks.delete(task_index)\n        except:\n            showwarning(title=\"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1!\", message=\"\u0398\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03bb\u03ad\u03be\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\")\n\n\nif __name__ == \"__main__\":\n    app = App()\n    app.mainloop()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 5_1_sol_oop.py\n</code></pre> </p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E5A2 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b4\u03b9\u03b1\u03c7\u03b5\u03b9\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b5\u03c0\u03b1\u03c6\u03ad\u03c2 (contacts). \u0393\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03b5\u03c0\u03b1\u03c6\u03ae \u03bd\u03b1 \u03b4\u03b9\u03b1\u03c4\u03b7\u03c1\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03bf\u03b9 \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b5\u03c2, \u03b5\u03c0\u03ce\u03bd\u03c5\u03bc\u03bf, \u03cc\u03bd\u03bf\u03bc\u03b1, \u03c4\u03b7\u03bb\u03ad\u03c6\u03c9\u03bd\u03bf. \u039d\u03b1 \u03c0\u03b1\u03c1\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 CRUD (Create, Retrieve, Update, Delete). \u03a4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf contacts.csv \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03b1\u03bd\u03b1\u03ba\u03b1\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03b1\u03c5\u03c4\u03cc \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A2 <p>5_2_sol.py<pre><code># \u039b\u03cd\u03c3\u03b7 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c6\u03bf\u03b9\u03c4\u03b7\u03c4\u03ae \u03a1\u03ac\u03bd\u03c4\u03bf \u039a\u03c9\u03bd\u03c3\u03c4\u03b1\u03bd\u03c4\u03af\u03bd\u03bf\n# \u03c4\u03bf\u03c5 \u03a4\u03bc\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03a4\u03b7\u03bb\u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03b9\u03ce\u03bd\n# \u03c4\u03bf\u03c5 \u03a0\u03b1\u03bd\u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03af\u03bf\u03c5 \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd \u03c4\u03bf\u03bd \u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf \u03c4\u03bf\u03c5 2024\n\nimport csv\nimport tkinter as tk\nfrom tkinter import messagebox, ttk\n\n\nclass ContactManager:\n    def __init__(self, root):\n        self.root = root\n        self.root.title(\"\u0394\u03b9\u03b1\u03c7\u03b5\u03af\u03c1\u03b9\u03c3\u03b7 \u0395\u03c0\u03b1\u03c6\u03ce\u03bd\")\n        self.contacts = (\n            self.load_contacts()\n        )  # \u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b5\u03c0\u03b1\u03c6\u03ce\u03bd \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b1\u03c1\u03c7\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7.\n        self.deleted_contacts = []\n        self.create_widgets()\n        self.root.eval(\n            \"tk::PlaceWindow . center\"\n        )  # \u039a\u03b5\u03bd\u03c4\u03c1\u03b1\u03c1\u03b9\u03c3\u03bc\u03b1 \u03c4\u03bf\u03c5 \u03c0\u03b1\u03c1\u03b1\u03b8\u03cd\u03c1\u03bf\u03c5 \u03c3\u03c4\u03b7\u03bd \u03bf\u03b8\u03cc\u03bd\u03b7.\n\n    def create_widgets(self):\n        tree_frame = tk.Frame(self.root)\n        tree_frame.pack(side=tk.TOP, fill=tk.BOTH, expand=True)\n\n        # \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 Treeview \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b5\u03c0\u03b1\u03c6\u03ce\u03bd.\n        self.tree = ttk.Treeview(\n            tree_frame, columns=(\"lastname\", \"firstname\", \"phone\"), show=\"headings\"\n        )\n        self.tree.heading(\"lastname\", text=\"\u0395\u03c0\u03ce\u03bd\u03c5\u03bc\u03bf\")\n        self.tree.heading(\"firstname\", text=\"\u038c\u03bd\u03bf\u03bc\u03b1\")\n        self.tree.heading(\"phone\", text=\"\u03a4\u03b7\u03bb\u03ad\u03c6\u03c9\u03bd\u03bf\")\n        self.tree.column(\"lastname\", width=120)\n        self.tree.column(\"firstname\", width=120)\n        self.tree.column(\"phone\", width=120)\n        self.tree.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)\n\n        scrollbar = ttk.Scrollbar(\n            tree_frame, orient=tk.VERTICAL, command=self.tree.yview\n        )\n        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)\n        self.tree.configure(\n            yscrollcommand=scrollbar.set\n        )  # \u03a3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 scrollbar \u03bc\u03b5 \u03c4\u03bf treeview.\n\n        btn_frame = tk.Frame(self.root)  # \u03a0\u03bb\u03b1\u03af\u03c3\u03b9\u03bf \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03ba\u03bf\u03c5\u03bc\u03c0\u03b9\u03ac.\n        btn_frame.pack(side=tk.BOTTOM, fill=tk.X)\n\n        # \u039a\u03bf\u03c5\u03bc\u03c0\u03b9\u03ac \u03b3\u03b9\u03b1 \u03b4\u03b9\u03b1\u03c7\u03b5\u03af\u03c1\u03b9\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b5\u03c0\u03b1\u03c6\u03ce\u03bd.\n        tk.Button(btn_frame, text=\"\u03a0\u03c1\u03bf\u03c3\u03b8\u03ae\u03ba\u03b7 \u0395\u03c0\u03b1\u03c6\u03ae\u03c2\", command=self.add_contact).pack(\n            side=tk.TOP, fill=tk.X\n        )\n        tk.Button(btn_frame, text=\"\u0395\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u0395\u03c0\u03b1\u03c6\u03ae\u03c2\", command=self.edit_contact).pack(\n            side=tk.TOP, fill=tk.X\n        )\n        tk.Button(btn_frame, text=\"\u0394\u03b9\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae \u0395\u03c0\u03b1\u03c6\u03ae\u03c2\", command=self.delete_contact).pack(\n            side=tk.TOP, fill=tk.X\n        )\n        tk.Button(\n            btn_frame, text=\"\u0391\u03bd\u03ac\u03ba\u03c4\u03b7\u03c3\u03b7 \u0395\u03c0\u03b1\u03c6\u03ae\u03c2\", command=self.show_retrieve_dialog\n        ).pack(side=tk.TOP, fill=tk.X)\n        tk.Button(btn_frame, text=\"\u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u0395\u03c0\u03b1\u03c6\u03ce\u03bd\", command=self.save_contacts).pack(\n            side=tk.TOP, fill=tk.X\n        )\n\n        self.display_contacts()  # \u0391\u03c1\u03c7\u03b9\u03ba\u03ae \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 \u03b5\u03c0\u03b1\u03c6\u03ce\u03bd \u03ba\u03b1\u03bb\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03b7\u03bd display_contacts.\n\n    def load_contacts(self):\n        # \u03a6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b5\u03c0\u03b1\u03c6\u03ce\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf CSV \u03b1\u03c1\u03c7\u03b5\u03af\u03bf.\n        try:\n            with open(\"contacts.csv\", mode=\"r\", newline=\"\", encoding=\"utf-8\") as file:\n                reader = csv.reader(file)\n                return sorted(\n                    [tuple(contact) for contact in reader], key=lambda x: x[0].lower()\n                )\n        except FileNotFoundError:\n            return []\n\n    def save_contacts(self):\n        # \u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b5\u03c0\u03b1\u03c6\u03ce\u03bd \u03c3\u03c4\u03bf CSV \u03b1\u03c1\u03c7\u03b5\u03af\u03bf.\n        with open(\"contacts.csv\", mode=\"w\", newline=\"\", encoding=\"utf-8\") as file:\n            writer = csv.writer(file)\n            for contact in sorted(self.contacts, key=lambda x: x[0].lower()):\n                writer.writerow(contact)\n        messagebox.showinfo(\"\u0395\u03c0\u03b9\u03c4\u03c5\u03c7\u03af\u03b1!\", \"\u039f\u03b9 \u03b5\u03c0\u03b1\u03c6\u03ad\u03c2 \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03c4\u03b7\u03ba\u03b1\u03bd \u03c3\u03c4\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf.\")\n\n    def add_contact(self):\n        self.create_dialog(\"\u039d\u03ad\u03b1 \u0395\u03c0\u03b1\u03c6\u03ae\")\n\n    def edit_contact(self):\n        try:\n            selected_item = self.tree.selection()[0]\n            contact = self.tree.item(selected_item, \"values\")\n            self.create_dialog(\"\u0395\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u0395\u03c0\u03b1\u03c6\u03ae\u03c2\", contact)\n        except IndexError:\n            messagebox.showerror(\"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1!\", \"\u0394\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03b5\u03af \u03ba\u03b1\u03bc\u03af\u03b1 \u03b5\u03c0\u03b1\u03c6\u03ae\")\n\n    def create_dialog(self, title, contact=None):\n        # \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b8\u03cd\u03c1\u03bf\u03c5 \u03b4\u03b9\u03b1\u03bb\u03cc\u03b3\u03bf\u03c5 \u03b3\u03b9\u03b1 \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03ae \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03b5\u03c0\u03b1\u03c6\u03ae\u03c2.\n        dialog = tk.Toplevel(self.root)\n        dialog.title(title)\n        dialog.geometry(\n            \"+{}+{}\".format(self.root.winfo_x() + 50, self.root.winfo_y() + 50)\n        )\n        dialog.transient(self.root)\n        dialog.grab_set()\n        dialog.focus_set()\n\n        tk.Label(dialog, text=\"\u0395\u03c0\u03ce\u03bd\u03c5\u03bc\u03bf:\").pack()\n        last_name_entry = tk.Entry(dialog)\n        last_name_entry.pack(fill=tk.X)\n        last_name_entry.insert(0, contact[0] if contact else \"\")\n\n        tk.Label(dialog, text=\"\u038c\u03bd\u03bf\u03bc\u03b1:\").pack()\n        first_name_entry = tk.Entry(dialog)\n        first_name_entry.pack(fill=tk.X)\n        first_name_entry.insert(0, contact[1] if contact else \"\")\n\n        tk.Label(dialog, text=\"\u03a4\u03b7\u03bb\u03ad\u03c6\u03c9\u03bd\u03bf:\").pack()\n        phone_number_entry = tk.Entry(dialog)\n        phone_number_entry.pack(fill=tk.X)\n        phone_number_entry.insert(0, contact[2] if contact else \"\")\n\n        def save_contact():\n            # \u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bd\u03ad\u03b1\u03c2 \u03ae \u03c4\u03b7\u03c2 \u03c4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03b7\u03c2 \u03b5\u03c0\u03b1\u03c6\u03ae\u03c2.\n            last_name = last_name_entry.get()\n            first_name = first_name_entry.get()\n            phone_number = phone_number_entry.get()\n            if last_name and first_name and phone_number:\n                new_contact = (last_name, first_name, phone_number)\n                if contact:\n                    idx = self.contacts.index(contact)\n                    self.contacts[idx] = new_contact\n                else:\n                    self.contacts.append(new_contact)\n                self.display_contacts()\n                dialog.destroy()\n            else:\n                messagebox.showerror(\n                    \"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1!\",\n                    \"\u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bb\u03ce \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03c4\u03b5 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03bb\u03b5\u03c0\u03c4\u03bf\u03bc\u03ad\u03c1\u03b5\u03b9\u03b5\u03c2 \u03c4\u03b7\u03c2 \u03b5\u03c0\u03b1\u03c6\u03ae\u03c2\",\n                    parent=dialog,\n                )\n\n        tk.Button(dialog, text=\"\u0391\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7\", command=save_contact).pack()\n\n    def display_contacts(self):\n        # \u0395\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 \u03b5\u03c0\u03b1\u03c6\u03ce\u03bd \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03b5\u03c2 \u03b1\u03bb\u03c6\u03b1\u03b2\u03b7\u03c4\u03b9\u03ba\u03ac \u03ba\u03b1\u03c4\u03ac \u03b5\u03c0\u03ce\u03bd\u03c5\u03bc\u03bf.\n        self.tree.delete(*self.tree.get_children())\n        for contact in sorted(self.contacts, key=lambda x: x[0].lower()):\n            self.tree.insert(\"\", tk.END, values=contact)\n\n    def delete_contact(self):\n        # \u0394\u03b9\u03b1\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03b7\u03c2 \u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03b7\u03c2 \u03b5\u03c0\u03b1\u03c6\u03ae\u03c2.\n        try:\n            selected_item = self.tree.selection()[0]\n            contact = self.tree.item(selected_item, \"values\")\n            self.deleted_contacts.append(contact)\n            self.contacts.remove(contact)\n            self.tree.delete(selected_item)\n        except IndexError:\n            messagebox.showerror(\"\u03a3\u03c6\u03ac\u03bb\u03bc\u03b1!\", \"\u0394\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03b5\u03af \u03ba\u03b1\u03bc\u03af\u03b1 \u03b5\u03c0\u03b1\u03c6\u03ae\")\n\n    def show_retrieve_dialog(self):\n        # \u0394\u03b9\u03ac\u03bb\u03bf\u03b3\u03bf\u03c2 \u03b1\u03bd\u03ac\u03ba\u03c4\u03b7\u03c3\u03b7\u03c2 \u03b4\u03b9\u03b1\u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03bd\u03c9\u03bd \u03b5\u03c0\u03b1\u03c6\u03ce\u03bd.\n        if not self.deleted_contacts:\n            messagebox.showinfo(\n                \"\u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b1\", \"\u0394\u03b5\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03b4\u03b9\u03b1\u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03bd\u03b5\u03c2 \u03b5\u03c0\u03b1\u03c6\u03ad\u03c2 \u03b3\u03b9\u03b1 \u03b1\u03bd\u03ac\u03ba\u03c4\u03b7\u03c3\u03b7.\"\n            )\n            return\n\n        retrieve_window = tk.Toplevel(self.root)\n        retrieve_window.title(\"\u0391\u03bd\u03ac\u03ba\u03c4\u03b7\u03c3\u03b7 \u0395\u03c0\u03b1\u03c6\u03ae\u03c2\")\n        retrieve_window.geometry(\n            \"300x300+450+450\"\n        )  # \u0398\u03ad\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03b1\u03c1\u03b1\u03b8\u03cd\u03c1\u03bf\u03c5, \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03bc\u03b7\u03bd \u03c3\u03c5\u03bc\u03c0\u03af\u03c0\u03c4\u03b5\u03b9 \u03bc\u03b5 \u03c4\u03bf \u03ba\u03b5\u03bd\u03c4\u03c1\u03b9\u03ba\u03cc.\n\n        list_frame = tk.Frame(retrieve_window)\n        list_frame.pack(side=tk.TOP, fill=tk.BOTH, expand=True)\n\n        listbox = tk.Listbox(list_frame)\n        listbox.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)\n\n        scrollbar = ttk.Scrollbar(list_frame, orient=tk.VERTICAL, command=listbox.yview)\n        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)\n        listbox.configure(yscrollcommand=scrollbar.set)\n\n        for idx, contact in enumerate(self.deleted_contacts):\n            listbox.insert(tk.END, f\"{idx+1}. {contact[0]} {contact[1]} - {contact[2]}\")\n\n        def retrieve_selected_contact():\n            # \u0391\u03bd\u03ac\u03ba\u03c4\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03b7\u03c2 \u03b4\u03b9\u03b1\u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03bd\u03b7\u03c2 \u03b5\u03c0\u03b1\u03c6\u03ae\u03c2.\n            selected_idx = listbox.curselection()\n            if selected_idx:\n                selected_contact = self.deleted_contacts.pop(selected_idx[0])\n                self.contacts.append(selected_contact)\n                self.display_contacts()\n                retrieve_window.destroy()\n            else:\n                messagebox.showerror(\"\u03a0\u03c1\u03bf\u03c3\u03bf\u03c7\u03ae!\", \"\u0394\u03b5\u03bd \u03ad\u03c7\u03b5\u03c4\u03b5 \u03b5\u03c0\u03b9\u03bb\u03ad\u03be\u03b5\u03b9 \u03ba\u03b1\u03bc\u03af\u03b1 \u03b5\u03c0\u03b1\u03c6\u03ae\")\n\n        retrieve_button = tk.Button(\n            retrieve_window,\n            text=\"\u0391\u03bd\u03ac\u03ba\u03c4\u03b7\u03c3\u03b7 \u0395\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03b7\u03c2 \u0395\u03c0\u03b1\u03c6\u03ae\u03c2\",\n            command=retrieve_selected_contact,\n        )\n        retrieve_button.pack(side=tk.BOTTOM, fill=tk.X)\n\n\nif __name__ == \"__main__\":\n    root = tk.Tk()\n    app = ContactManager(root)\n    root.mainloop()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 5_2_sol.py\n</code></pre> </p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E5A3 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b1\u03c0\u03b5\u03b9\u03ba\u03bf\u03bd\u03af\u03b6\u03b5\u03b9 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b3\u03c1\u03ac\u03c6\u03b7\u03bc\u03b1 \u03c4\u03b9\u03c2 \u03b8\u03b5\u03c1\u03bc\u03bf\u03ba\u03c1\u03b1\u03c3\u03af\u03b5\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 5 \u03c4\u03b5\u03bb\u03b5\u03c5\u03c4\u03b1\u03af\u03b5\u03c2 \u03b7\u03bc\u03ad\u03c1\u03b5\u03c2 \u03c3\u03c4\u03b7\u03bd \u0386\u03c1\u03c4\u03b1 [39.1606, 20.9853]. \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf module matplotlib \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b3\u03c1\u03b1\u03c6\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03ba\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03bb\u03ae\u03c8\u03b7 \u03c4\u03c9\u03bd \u03b8\u03b5\u03c1\u03bc\u03bf\u03ba\u03c1\u03b1\u03c3\u03b9\u03ce\u03bd \u03c4\u03bf OpenWeathermap API (\u03c0\u03c1\u03bf\u03c3\u03bf\u03c7\u03ae \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03bb\u03ac\u03b2\u03b5\u03c4\u03b5 API key \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03c4\u03bf \u03c3\u03c5\u03bc\u03c0\u03bb\u03b7\u03c1\u03ce\u03c3\u03b5\u03c4\u03b5 \u03bc\u03ad\u03c3\u03b1 \u03c3\u03c4\u03bf\u03bd \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1).</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A3 <p>5_3_sol.py<pre><code>import calendar\nimport datetime\nfrom tkinter import *\n\nimport requests\nfrom matplotlib.backends.backend_tkagg import FigureCanvasTkAgg, NavigationToolbar2Tk\nfrom matplotlib.figure import Figure\n\n\ndef plot():\n    api_key = \"\u03a3\u03a5\u039c\u03a0\u039b\u0397\u03a1\u03a9\u03a3\u03a4\u0395 \u03a4\u039f \u0394\u0399\u039a\u039f \u03a3\u0391\u03a3 API \u039a\u039b\u0395\u0399\u0394\u0399 \u0395\u0394\u03a9\"\n\n    lat = latitude_entry.get()\n    lon = longitude_entry.get()\n\n    date_time = datetime.datetime.now() - datetime.timedelta(days=5)\n    utc_time = calendar.timegm(date_time.utctimetuple())\n\n    timezone = \"\"\n    temperatures = []\n    dates = []\n\n    for _ in range(5):\n        temp_date = str(date_time).split(\" \")[0]\n        temp_date = temp_date.split(\"-\")\n        dates.append(temp_date[2] + \"/\" + temp_date[1] + \"/\" + temp_date[0])\n\n        weather_url = f\"https://api.openweathermap.org/data/2.5/onecall/timemachine?lat={lat}&amp;lon={lon}&amp;units=metric&amp;dt={utc_time}&amp;appid={api_key}\"\n        response = requests.get(weather_url)\n        weather_data = response.json()\n\n        if timezone == \"\":\n            timezone = weather_data[\"timezone\"]\n\n        for i in range(24):\n            temp = int(weather_data[\"hourly\"][i][\"temp\"])\n            temperatures.append(temp)\n\n        date_time = date_time + datetime.timedelta(days=1)\n        utc_time = calendar.timegm(date_time.utctimetuple())\n\n    temp_date = str(date_time).split(\" \")[0]\n    temp_date = temp_date.split(\"-\")\n    dates.append(temp_date[2] + \"/\" + temp_date[1] + \"/\" + temp_date[0])\n\n    fig = Figure(figsize=(10, 5), dpi=100)\n    plot1 = fig.add_subplot(111)\n    plot1.plot(temperatures)\n    plot1.set_title(f\"\u0398\u03b5\u03c1\u03bc\u03bf\u03ba\u03c1\u03b1\u03c3\u03af\u03b1 \u03c3\u03c4\u03b9\u03c2 \u03b3\u03b5\u03c9\u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03c4\u03b5\u03c4\u03b1\u03b3\u03bc\u03ad\u03bd\u03b5\u03c2 {lat=} {lon=}\")\n    plot1.set_ylabel(\"\u0398\u03b5\u03c1\u03bc\u03bf\u03ba\u03c1\u03b1\u03c3\u03af\u03b1 (\u00b0C)\")\n    plot1.set_xticks([0, 24, 48, 72, 96, 120])\n    plot1.set_xticklabels(dates)\n\n    canvas = FigureCanvasTkAgg(fig, master=plot_frame)\n    canvas.draw()\n    canvas.get_tk_widget().pack()\n    toolbar = NavigationToolbar2Tk(canvas, plot_frame)\n    toolbar.update()\n    canvas.get_tk_widget().pack()\n\n\nwindow = Tk()\nwindow.title(\"\u0394\u03b9\u03ac\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03b8\u03b5\u03c1\u03bc\u03bf\u03ba\u03c1\u03b1\u03c3\u03b9\u03ce\u03bd \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 5 \u03c4\u03b5\u03bb\u03b5\u03c5\u03c4\u03b1\u03af\u03b5\u03c2 \u03b7\u03bc\u03ad\u03c1\u03b5\u03c2\")\nwindow.geometry(\"1000x500\")\n\nframe = Frame(window)\nframe.pack()\n\nplot_frame = Frame(window)\nplot_frame.pack(side=BOTTOM)\n\nLabel(frame, text=\"\u0393\u03b5\u03c9\u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03cc \u03c0\u03bb\u03ac\u03c4\u03bf\u03c2 (latitude)\").grid(row=0, sticky=\"w\")\nLabel(frame, text=\"\u0393\u03b5\u03c9\u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03cc \u03bc\u03ae\u03ba\u03bf\u03c2 (longitude)\").grid(row=1, sticky=\"w\")\n\ndefault_lat = StringVar(window, value=\"39.1606\")\ndefault_lon = StringVar(window, value=\"20.9853\")\n\nlatitude_entry = Entry(frame, textvariable=default_lat)\nlongitude_entry = Entry(frame, textvariable=default_lon)\n\nlatitude_entry.grid(row=0, column=1, sticky=\"w\")\nlongitude_entry.grid(row=1, column=1, sticky=\"w\")\n\nplot_button = Button(master=frame, command=plot, height=2, width=10, text=\"Plot\")\nplot_button.grid(row=2, column=0, columnspan=2, sticky=\"news\")\n\nif __name__ == \"__main__\":\n    window.mainloop()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python 5_3_sol.py\n</code></pre> </p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E5A4 - \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf pattern MVC \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03b1\u03bd\u03b1\u03c0\u03c4\u03cd\u03be\u03b5\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03c0\u03c1\u03ac\u03be\u03b5\u03b9\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b8\u03b5\u03c3\u03b7\u03c2, \u03b1\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b7\u03c2, \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03b1\u03c3\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd \u03ba\u03b1\u03b9 \u03b4\u03b9\u03b1\u03af\u03c1\u03b5\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2. \u03a3\u03c4\u03bf \u03c1\u03cc\u03bb\u03bf \u03c4\u03bf\u03c5 view \u03bd\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03bd\u03b1\u03bb\u03bb\u03ac\u03c3\u03c3\u03b5\u03c4\u03b1\u03b9 \u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03cc \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd (GUI=Graphical User Interface) \u03ba\u03b1\u03b9 \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 (TUI=Text User Interface).</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A4 <p>5_4_sol.py<pre><code># \u039b\u03cd\u03c3\u03b7 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c6\u03bf\u03b9\u03c4\u03b7\u03c4\u03ae \u0393\u03b9\u03ac\u03bd\u03bd\u03b7 \u03a1\u03bf\u03b4\u03bf\u03c5\u03c3\u03ac\u03ba\u03b7\n# \u03c4\u03bf\u03c5 \u03a4\u03bc\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03a4\u03b7\u03bb\u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03b9\u03ce\u03bd\n# \u03c4\u03bf\u03c5 \u03a0\u03b1\u03bd\u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03af\u03bf\u03c5 \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd \u03c4\u03bf\u03bd \u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf \u03c4\u03bf\u03c5 2022\n\n\nimport sys\nimport tkinter as tk\nfrom tkinter import messagebox\n\n\nclass Complex:\n    def __init__(self, real: float, imag: float):\n        self.real = real\n        self.imag = imag\n\n    # \u03a5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd \u03b3\u03b9\u03b1 \u03c0\u03c1\u03ac\u03be\u03b5\u03b9\u03c2 \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd\n    def __add__(self, other_complex: \"Complex\"):\n        real_new = self.real + other_complex.real\n        imag_new = self.imag + other_complex.imag\n        return Complex(real_new, imag_new)\n\n    def __sub__(self, other_complex: \"Complex\"):\n        real_new = self.real - other_complex.real\n        imag_new = self.imag - other_complex.imag\n        return Complex(real_new, imag_new)\n\n    def __mul__(self, other_complex: \"Complex\"):\n        real_new = self.real * other_complex.real - self.imag * other_complex.imag\n        imag_new = self.imag * other_complex.real + self.real * other_complex.imag\n        return Complex(real_new, imag_new)\n\n    def __truediv__(self, other_complex: \"Complex\"):\n        temp_real = self.real * other_complex.real + self.imag * other_complex.imag\n        temp_imag = other_complex.real * self.imag - self.real * other_complex.imag\n        denum = other_complex.real**2 + other_complex.imag**2\n        real_new = temp_real / denum\n        imag_new = temp_imag / denum\n        return Complex(real_new, imag_new)\n\n    def __str__(self):\n        return f\"({self.real}, {self.imag}i)\"\n\n\nclass ViewGui(tk.Frame):\n    def __init__(self, parent):\n        super().__init__(parent)\n\n        # 1\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae -&gt; \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c0\u03c1\u03ce\u03c4\u03bf\u03c5 \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03bf\u03cd \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\n        self.real1_label = tk.Label(self, text=\"Real 1: \")\n        self.real1_label.grid(row=0, column=0)\n        self.real1_var = tk.DoubleVar()\n        self.real1_entry = tk.Entry(self, textvariable=self.real1_var, justify=\"right\")\n        self.real1_entry.grid(row=0, column=1)\n        self.imag1_label = tk.Label(self, text=\"Imaginary 1: \")\n        self.imag1_label.grid(row=0, column=2)\n        self.imag1_var = tk.DoubleVar()\n        self.imag1_entry = tk.Entry(self, textvariable=self.imag1_var, justify=\"right\")\n        self.imag1_entry.grid(row=0, column=3)\n\n        # 2\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae -&gt; \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf\u03c5 \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03bf\u03cd \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\n        self.real2_label = tk.Label(self, text=\"Real 2: \")\n        self.real2_label.grid(row=1, column=0)\n        self.real2_var = tk.DoubleVar()\n        self.real2_entry = tk.Entry(self, textvariable=self.real2_var, justify=\"right\")\n        self.real2_entry.grid(row=1, column=1)\n        self.imag2_label = tk.Label(self, text=\"Imaginary 2: \")\n        self.imag2_label.grid(row=1, column=2)\n        self.imag2_var = tk.DoubleVar()\n        self.imag2_entry = tk.Entry(self, textvariable=self.imag2_var, justify=\"right\")\n        self.imag2_entry.grid(row=1, column=3)\n\n        # 3\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae -&gt; \u039a\u03bf\u03c5\u03bc\u03c0\u03b9\u03ac \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03c0\u03c1\u03ac\u03be\u03b5\u03c9\u03bd \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd\n        self.add_button = tk.Button(self, text=\"Add\", command=self.add_clicked)\n        self.add_button.grid(row=2, column=0, sticky=tk.W)\n        self.substract_button = tk.Button(\n            self, text=\"Substract\", command=self.substract_clicked\n        )\n        self.substract_button.grid(row=2, column=1, sticky=tk.W)\n        self.multiply_button = tk.Button(\n            self, text=\"Multiply\", command=self.multiply_clicked\n        )\n        self.multiply_button.grid(row=2, column=2, sticky=tk.W)\n        self.divide_button = tk.Button(self, text=\"Divide\", command=self.divide_clicked)\n        self.divide_button.grid(row=2, column=3, sticky=tk.W)\n\n        # 4\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ae -&gt; \u0395\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c0\u03c1\u03ac\u03be\u03b7\u03c2 \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd\n        self.real_result_label = tk.Label(self, text=\"\")\n        self.real_result_label.grid(row=3, column=0)\n        self.imag_result_label = tk.Label(self, text=\"\")\n        self.imag_result_label.grid(row=3, column=1)\n\n        self.controller = None\n\n    # \u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd controller\n    def set_controller(self, controller):\n        self.controller = controller\n\n    # \u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ce\u03bd\n    def handle_input_event(self):\n        self.complex1 = Complex(\n            float(self.real1_entry.get()), float(self.imag1_entry.get())\n        )\n        self.complex2 = Complex(\n            float(self.real2_entry.get()), float(self.imag2_entry.get())\n        )\n\n    # \u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b5\u03bd\u03b7\u03bc\u03ad\u03c1\u03c9\u03c3\u03b7\u03c2 label \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03bf\u03cd \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\n    def show_result(self, complex_result: Complex):\n        # \u039c\u03bf\u03c1\u03c6\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 2 \u03b4\u03b5\u03ba\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03c8\u03b7\u03c6\u03af\u03c9\u03bd\n        complex_result.real = \"{:.3f}\".format(complex_result.real)\n        complex_result.imag = \"{:.3f}\".format(complex_result.imag)\n        # \u0391\u03bd\u03b1\u03bd\u03ad\u03c9\u03c3\u03b7 label \u03b3\u03b9\u03b1 \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2\n        self.real_result_label[\"text\"] = \"Real Result: {}\".format(\n            str(complex_result.real)\n        )\n        self.imag_result_label[\"text\"] = \"Imaginary Result: {}\".format(\n            str(complex_result.imag)\n        )\n\n    # \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd event \u03c0\u03c1\u03ac\u03be\u03b5\u03c9\u03bd \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd\n    def add_clicked(self):\n        self.handle_input_event()\n        if self.controller:\n            self.controller.add(self.complex1, self.complex2)\n\n    def substract_clicked(self):\n        self.handle_input_event()\n        if self.controller:\n            self.controller.substract(self.complex1, self.complex2)\n\n    def multiply_clicked(self):\n        self.handle_input_event()\n        if self.controller:\n            self.controller.multiply(self.complex1, self.complex2)\n\n    def divide_clicked(self):\n        self.handle_input_event()\n        if self.controller:\n            self.controller.divide(self.complex1, self.complex2)\n\n\nclass ViewTui:\n    def __init__(self):\n        print(\"~\" * 82)\n        print(\"~\" * 30 + \"  Complex Calculator  \" + \"~\" * 30)\n        print(\"~\" * 82 + \"\\n\")\n\n        print(\"Choose operation::\")\n        self.operation_selection = int(\n            input(\"1.Addition  2.Substraction  3.Multiplication  4.Division \\n5.Quit\\n\")\n        )\n\n        self.controller = Controller(Complex(1, 2), self)\n\n        if self.operation_selection == 1:\n            # check which function needs to be called\n            self.add_clicked()\n        elif self.operation_selection == 2:\n            self.substract_clicked()\n        elif self.operation_selection == 3:\n            self.multiply_clicked()\n        elif self.operation_selection == 4:\n            self.divide_clicked()\n        elif self.operation_selection == 5:\n            print(\"Quitting ...\")\n        else:\n            print(\"Wrong Input!!!\")\n\n    # \u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2 \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd\n    def handle_input_event(self):\n        print(\"Input of 1st complex number:\")\n        print(\"Give real part of 1st complex number: \")\n        self.real1 = float(input())\n        print(\"Give imaginary part of 1st complex number: \")\n        self.imag1 = float(input())\n\n        print(\"Input of 2nd complex number:\")\n        print(\"Give real part of 2nd complex number: \")\n        self.real2 = float(input())\n        print(\"Give imaginary part of 2nd complex number: \")\n        self.imag2 = float(input())\n\n    def handle_modelling_stage(self):\n        self.complex1 = Complex(self.real1, self.imag1)\n        self.complex2 = Complex(self.real2, self.imag2)\n\n    def show_result(self, complex_result: Complex):\n        print(\n            \"Real Result: {:.3f}, Imaginary Result: {:.3f}\".format(\n                complex_result.real, complex_result.imag\n            )\n        )\n\n    # \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd event \u03c0\u03c1\u03ac\u03be\u03b5\u03c9\u03bd \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd\n    def add_clicked(self):\n        self.handle_input_event()\n        self.handle_modelling_stage()\n        self.controller.add(self.complex1, self.complex2)\n\n    def substract_clicked(self):\n        self.handle_input_event()\n        self.handle_modelling_stage()\n        self.controller.substract(self.complex1, self.complex2)\n\n    def multiply_clicked(self):\n        self.handle_input_event()\n        self.handle_modelling_stage()\n\n        self.controller.multiply(self.complex1, self.complex2)\n\n    def divide_clicked(self):\n        self.handle_input_event()\n        self.handle_modelling_stage()\n\n        self.controller.divide(self.complex1, self.complex2)\n\n\nclass Controller:\n    def __init__(self, model: Complex = None, view=None):\n        self.model = model\n        self.view = view\n\n    # \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03c0\u03c1\u03ac\u03be\u03b5\u03c9\u03bd \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd\n    def add(self, complex1: Complex, complex2: Complex):\n        self.model = complex1\n        complex_result = self.model + complex2\n        self.view.show_result(complex_result)\n\n    def substract(self, complex1: Complex, complex2: Complex):\n        self.model = complex1\n        complex_result = self.model - complex2\n        self.view.show_result(complex_result)\n\n    def multiply(self, complex1: Complex, complex2: Complex):\n        self.model = complex1\n        complex_result = self.model * complex2\n        self.view.show_result(complex_result)\n\n    def divide(self, complex1: Complex, complex2: Complex):\n        self.model = complex1\n\n        # try catch, \u03b3\u03b9\u03b1 GUI \u03b4\u03b9\u03b5\u03c0\u03b1\u03c6\u03ae\n        if sys.argv[1].upper() == \"GUI\":\n            try:\n                complex_result = self.model / complex2\n                self.view.show_result(complex_result)\n            except ZeroDivisionError:\n                messagebox.showwarning(\n                    title=\"Division Error\",\n                    message=\" Can't divide by zero!!! \\n Please input valid numbers!\",\n                )\n\n        # try catch, \u03b3\u03b9\u03b1 TUI \u03b4\u03b9\u03b5\u03c0\u03b1\u03c6\u03ae\n        if sys.argv[1].upper() == \"TUI\":\n            try:\n                complex_result = self.model / complex2\n                self.view.show_result(complex_result)\n            except ZeroDivisionError:\n                print(\" Can't divide by zero!!! \\n Please input valid numbers!\")\n\n\nclass App(tk.Tk):\n    def __init__(self):\n        super().__init__()\n        self.title(\"Complex Calculator\")\n        # \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03bc\u03bf\u03bd\u03c4\u03ad\u03bb\u03bf\u03c5\n        model = Complex(1, 2)\n        # \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03bf\u03cd \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03bf\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03bf\u03c0\u03bf\u03b8\u03ad\u03c4\u03b7\u03c3\u03b7 \u03c3\u03c4\u03b7\u03bd \u03bf\u03b8\u03cc\u03bd\u03b7\n        view_gui = ViewGui(self)\n        view_gui.grid(row=0, column=0, padx=10, pady=10)\n        # \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 controller\n        controller_gui = Controller(model, view_gui)\n        # \u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c4\u03bf\u03c5 controller \u03c3\u03c4\u03bf \u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03cc \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\n        view_gui.set_controller(controller_gui)\n\n\nif __name__ == \"__main__\":\n    # try catch block, \u03b3\u03b9\u03b1 \u03b1\u03c0\u03bf\u03c6\u03c5\u03b3\u03ae IndexError exception, \u03b1\u03bd \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03b4\u03b5\u03bd \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03b9 \u03c4\u03cd\u03c0\u03bf \u03b4\u03b9\u03b5\u03c0\u03b1\u03c6\u03ae\u03c2\n    try:\n        if sys.argv[1].upper() == \"GUI\":\n            app = App()\n            app.mainloop()\n        elif sys.argv[1].upper() == \"TUI\":\n            while True:\n                view = ViewTui()\n                if view.operation_selection == 5:\n                    break\n\n        # \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 exception \u03b1\u03bd \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03b9 \u03bb\u03ac\u03b8\u03bf\u03c2 \u03c4\u03cd\u03c0\u03bf \u03b4\u03b9\u03b5\u03c0\u03b1\u03c6\u03ae\u03c2\n        if sys.argv[1].upper() not in [\"GUI\", \"TUI\"]:\n            raise Exception(\"Wrong interface command line parameter\")\n    except IndexError:\n        print(\"Input interface type, as command line parameter\")\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03b3\u03b9\u03b1 TUI: <pre><code>$ python 5_4_sol.py TUI\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Complex Calculator  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nChoose operation::\n1.Addition  2.Substraction  3.Multiplication  4.Division\n5.Quit\n3\nInput of 1st complex number:\nGive real part of 1st complex number:\n2\nGive imaginary part of 1st complex number:\n4\nInput of 2nd complex number:\nGive real part of 2nd complex number:\n3\nGive imaginary part of 2nd complex number:\n5\nReal Result: -14.000, Imaginary Result: 22.000\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~  Complex Calculator  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nChoose operation::\n1.Addition  2.Substraction  3.Multiplication  4.Division\n5.Quit\n5\nQuitting ...\n</code></pre></p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03b3\u03b9\u03b1 GUI: <pre><code>$ python 5_4_sol.py GUI\n</code></pre> </p>"},{"location":"lab5_python/#_2","title":"\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03b5\u03be\u03ac\u03c3\u03ba\u03b7\u03c3\u03b7","text":"<p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 E5A5 - \u03a5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b5 \u03c4\u03bf tkinter \u03c4\u03b7\u03bd 1\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 (Counter) \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b9\u03c3\u03c4\u03bf\u03c3\u03b5\u03bb\u03af\u03b4\u03b1 7GUIs. \u0394\u03b7\u03bb\u03b1\u03b4\u03ae, \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b8\u03c5\u03c1\u03bf \u03cc\u03c0\u03c9\u03c2 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03ba\u03b1\u03b9 \u03ba\u03ac\u03b8\u03b5 \u03c6\u03bf\u03c1\u03ac \u03c0\u03bf\u03c5 \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03c0\u03b1\u03c4\u03ac \u03c4\u03bf \u03c0\u03bb\u03ae\u03ba\u03c4\u03c1\u03bf Count \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c3\u03c4\u03bf \u03c0\u03b5\u03b4\u03af\u03bf \u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03ba\u03af\u03bd\u03b7\u03c3\u03b7 \u03ad\u03c7\u03b5\u03b9 \u03c4\u03b9\u03bc\u03ae 0 \u03bd\u03b1 \u03b1\u03c5\u03be\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac 1.</p> <p></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A5 <p>e5a5.py<pre><code>import tkinter as tk\n\n\ndef increment():\n    x = int(count_label[\"text\"])\n    x += 1\n    count_label[\"text\"] = str(x)\n\n\nroot = tk.Tk()\nroot.geometry(\"200x30\")\nroot.title(\"Counter\")\ncount_label = tk.Label(root, text=\"0\", width=10, background=\"white\")\ncount_label.pack(side=tk.LEFT)\nincrement_button = tk.Button(root, text=\"Count\", width=10)\nincrement_button.pack(side=tk.RIGHT)\nincrement_button.config(command=increment)\n\nroot.eval(\"tk::PlaceWindow . center\")\nroot.mainloop()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python e5a5.py\n</code></pre> </p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 \u03955\u03916 - \u03a5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b5 \u03c4\u03bf tkinter \u03c4\u03b7 2\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 (Temperature Converter) \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b9\u03c3\u03c4\u03bf\u03c3\u03b5\u03bb\u03af\u03b4\u03b1 7GUIs. \u0394\u03b7\u03bb\u03b1\u03b4\u03ae, \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b8\u03c5\u03c1\u03bf \u03cc\u03c0\u03c9\u03c2 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf: </p> <p></p> <p>\u03ba\u03b1\u03b9 \u03ba\u03ac\u03b8\u03b5 \u03c6\u03bf\u03c1\u03ac \u03c0\u03bf\u03c5 \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03b5\u03b9\u03c3\u03ac\u03b3\u03b5\u03b9 \u03b8\u03b5\u03c1\u03bc\u03bf\u03ba\u03c1\u03b1\u03c3\u03af\u03b1 \u03b5\u03af\u03c4\u03b5 \u03c3\u03b5 \u03b2\u03b1\u03b8\u03bc\u03bf\u03cd\u03c2 \u039a\u03b5\u03bb\u03c3\u03af\u03bf\u03c5 \u03b5\u03af\u03c4\u03b5 \u03c3\u03b5 \u03b2\u03b1\u03b8\u03bc\u03bf\u03cd\u03c2 \u03a6\u03ac\u03c1\u03b5\u03bd\u03b1\u03ca\u03c4 \u03bd\u03b1 \u03b5\u03bd\u03b7\u03bc\u03b5\u03c1\u03ce\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03b9 \u03b7 \u03b8\u03b5\u03c1\u03bc\u03bf\u03ba\u03c1\u03b1\u03c3\u03af\u03b1 \u03c3\u03c4\u03b7\u03bd \u03ac\u03bb\u03bb\u03b7 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1 \u03bc\u03ad\u03c4\u03c1\u03b7\u03c3\u03b7\u03c2. \u0395\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03c4\u03b5 \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b5\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd <code>StringVar</code><sup>4</sup> \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd <code>trace_add</code><sup>5</sup>.</p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A6 <p>e5a6.py<pre><code>import tkinter as tk\n\nroot = tk.Tk()\ncelsius_var = tk.StringVar()\ncelsius_var.set(\"0.0\")\nfahr_var = tk.StringVar()\nfahr_var.set(\"32.0\")\n\n\ndef celcius_callback(*args):\n    if root.focus_get() != celsius_entry:\n        return\n    try:\n        celcius_temperature = celsius_var.get()\n        c = float(celcius_temperature)\n        f = c * (9 / 5) + 32\n        celsius_entry.config(background=\"white\")\n        fahr_var.set(f\"{f:.1f}\")\n    except ValueError:\n        celsius_entry.config(background=\"pink\")\n\n\ndef fahr_callback(*args):\n    if root.focus_get() != fahr_entry:\n        return\n    try:\n        fahr_temperature = fahr_var.get()\n        f = float(fahr_temperature)\n        c = (f - 32) * 5 / 9\n        fahr_entry.config(background=\"white\")\n        celsius_var.set(f\"{c:.1f}\")\n    except ValueError:\n        fahr_entry.config(background=\"pink\")\n\n\nroot.geometry(\"350x30\")\nroot.title(\"TempConv\")\n\ncelsius_var.trace_add(\"write\", celcius_callback)\nfahr_var.trace_add(\"write\", fahr_callback)\ncelsius_entry = tk.Entry(root, width=10, textvariable=celsius_var)\ncelsius_entry.grid(row=0, column=0)\n\nlabel1 = tk.Label(root, text=\"Celsius = \")\nlabel1.grid(row=0, column=1)\nfahr_entry = tk.Entry(root, width=10, textvariable=fahr_var)\nfahr_entry.grid(row=0, column=2)\nlabel2 = tk.Label(root, text=\"Fahrenheit\")\nlabel2.grid(row=0, column=3)\n\nroot.eval(\"tk::PlaceWindow . center\")\nroot.mainloop()\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python e5a6.py\n</code></pre> </p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 \u03955\u03917 - \u03a5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b5 \u03c4\u03bf tkinter \u03c4\u03b7\u03bd 3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 (Book Flight) \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b9\u03c3\u03c4\u03bf\u03c3\u03b5\u03bb\u03af\u03b4\u03b1 7GUIs. \u0394\u03b7\u03bb\u03b1\u03b4\u03ae, \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b8\u03c5\u03c1\u03bf \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03c6\u03ad\u03c1\u03b5\u03c4\u03b1\u03b9 \u03cc\u03c0\u03c9\u03c2 \u03c4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf: </p> <p></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A7 <p>e5a7.py<pre><code># \u039b\u03cd\u03c3\u03b7 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c6\u03bf\u03b9\u03c4\u03b7\u03c4\u03ae \u039c\u03c0\u03b1\u03ba\u03bf\u03b3\u03b9\u03ac\u03bd\u03bd\u03b7 \u0398\u03c9\u03bc\u03ac\n# \u03c4\u03bf\u03c5 \u03a4\u03bc\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03a4\u03b7\u03bb\u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03b9\u03ce\u03bd\n# \u03c4\u03bf\u03c5 \u03a0\u03b1\u03bd\u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03af\u03bf\u03c5 \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd \u03c4\u03bf\u03bd \u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf \u03c4\u03bf\u03c5 2024\n\nimport tkinter as tk\nfrom tkinter import ttk\nfrom tkinter import messagebox\nfrom datetime import datetime\n\nclass Application(tk.Tk):\n    def __init__(self):\n        super().__init__()\n\n        # Set up main window\n        self.title(\"Book Flight\")\n        self.geometry(\"300x120\")\n        for x in range(4):\n            self.rowconfigure(x, weight=1)\n        self.columnconfigure(0, weight=1)\n\n        # Set up combo box\n        options = [\"one-way flight\", \"return flight\"]\n        self.flight_options = ttk.Combobox(self, values=options, state=\"readonly\")\n        self.flight_options.set(\"one-way flight\")\n        self.flight_options.bind(\"&lt;&lt;ComboboxSelected&gt;&gt;\", self.on_combobox_select)\n        self.flight_options.grid(row=0, sticky=\"nesw\", padx=3, pady=3)\n\n        # Set up start date entry\n        self.entry_val1 = tk.StringVar()\n        self.entry_val1.trace_add(\"write\", self.validate_date)\n        self.start_date = tk.Entry(self, textvariable=self.entry_val1)\n        self.start_date.grid(row=1, sticky=\"nesw\", padx=3, pady=3)\n\n        # Set up return date entry\n        self.entry_val2 = tk.StringVar()\n        self.entry_val2.trace_add(\"write\", self.validate_date)\n        self.return_date = tk.Entry(self, textvariable=self.entry_val2)\n        self.return_date[\"state\"] = \"disabled\"\n        self.return_date.grid(row=2, sticky=\"nesw\", padx=4, pady=4)\n\n        # Set up book button\n        self.book_button = tk.Button(self, text=\"Book\", command=self.display_message, state=\"disabled\", foreground=\"gray\")\n        self.book_button.grid(row=3, sticky=\"nesw\", padx=5, pady=5)\n\n    def check_box1(self):\n        try:\n            datetime.strptime(self.start_date.get(), '%d.%m.%Y')\n            return True\n        except ValueError:\n            return False\n\n    def check_box2(self):\n        try:\n            datetime.strptime(self.return_date.get(), '%d.%m.%Y')\n            return True\n        except ValueError:\n            return False\n\n    def on_combobox_select(self, event):\n        # Extra checks for boxes\n        if self.flight_options.get() == \"one-way flight\":\n            self.return_date[\"state\"] = \"disabled\"\n            if self.check_box1():\n                self.book_button.configure(state=\"normal\", foreground=\"black\")\n            else:\n                self.book_button.configure(state=\"disabled\", foreground=\"gray\")\n        else:\n            self.return_date[\"state\"] = \"normal\"\n            if self.check_box1() and self.check_box2():\n                self.book_button.configure(state=\"normal\", foreground=\"black\")\n            else:\n                self.book_button.configure(state=\"disabled\", foreground=\"gray\")\n\n    def validate_date(self, *args):\n        focused_widget = self.focus_get()\n\n        # Validate date entries\n        if focused_widget in [self.start_date, self.return_date]:\n            if not focused_widget.get():\n                focused_widget[\"bg\"] = \"white\"\n                self.book_button.configure(state=\"disabled\", foreground=\"gray\")\n            else:\n                try:\n                    datetime.strptime(focused_widget.get(), '%d.%m.%Y')\n                    focused_widget[\"bg\"] = \"white\"\n                    self.book_button.configure(state=\"normal\", foreground=\"black\")\n                except ValueError:\n                    focused_widget[\"bg\"] = \"red\"\n                    self.book_button.configure(state=\"disabled\", foreground=\"gray\")\n\n        # Compare dates if return flight is selected\n        if self.flight_options.get() == \"return flight\":\n            self.compare_dates()\n\n    def compare_dates(self):\n        date_str1 = self.start_date.get()\n        date_str2 = self.return_date.get()\n\n        # Compare start and return dates\n        try:\n            date1 = datetime.strptime(date_str1, \"%d.%m.%Y\")\n            date2 = datetime.strptime(date_str2, \"%d.%m.%Y\")\n            if date2 &lt; date1:\n                self.book_button.configure(state=\"disabled\", fg=\"gray\")\n            else:\n                self.book_button.configure(state=\"normal\", fg=\"black\")\n        except ValueError:\n            self.book_button.configure(state=\"disabled\", fg=\"gray\")\n\n    def display_message(self):\n        # Display booking information\n        if self.flight_options.get() == \"one-way flight\":\n            messagebox.showinfo(\"Booking information\", f\"You have booked a one-way flight for {self.start_date.get()}\")\n        else:\n            messagebox.showinfo(\"Booking information\", f\"You have booked a return flight departing on {self.start_date.get()} and returning on {self.return_date.get()}\")\n\nif __name__ == \"__main__\":\n    app = Application()\n    app.mainloop()\n</code></pre> </p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 \u03955\u03918 - \u03a5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b5 \u03c4\u03bf tkinter \u03c4\u03b7\u03bd 4\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 (Timer) \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b9\u03c3\u03c4\u03bf\u03c3\u03b5\u03bb\u03af\u03b4\u03b1 7GUIs. \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b8\u03c5\u03c1\u03bf \u03cc\u03c0\u03c9\u03c2 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf:</p> <p></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A8 <p>e5a8.py<pre><code># \u039b\u03cd\u03c3\u03b7 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c6\u03bf\u03b9\u03c4\u03b7\u03c4\u03ae \u039c\u03c0\u03b1\u03ba\u03bf\u03b3\u03b9\u03ac\u03bd\u03bd\u03b7 \u0398\u03c9\u03bc\u03ac\n# \u03c4\u03bf\u03c5 \u03a4\u03bc\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03a0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03a4\u03b7\u03bb\u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03b9\u03ce\u03bd\n# \u03c4\u03bf\u03c5 \u03a0\u03b1\u03bd\u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03af\u03bf\u03c5 \u0399\u03c9\u03b1\u03bd\u03bd\u03af\u03bd\u03c9\u03bd \u03c4\u03bf\u03bd \u0391\u03c0\u03c1\u03af\u03bb\u03b9\u03bf \u03c4\u03bf\u03c5 2024\n\nimport tkinter as tk\nfrom tkinter import ttk\n\nclass Application(tk.Tk):\n    def __init__(self):\n        super().__init__()\n\n        # Setting up mainwindow\n        self.title(\"Timer\")\n        self.geometry(\"300x150\")\n        for x in range(4):\n            self.grid_rowconfigure(x, weight=1)\n        self.grid_columnconfigure(0, weight=1)\n        self.grid_columnconfigure(1, weight=3)\n\n        self.et_label = ttk.Label(self, text=\"Elapsed Time:\")\n        self.et_label.grid(row=0, column=0)\n\n        self.et_time = ttk.Label(self, text=\"0\")\n        self.et_time.grid(row=1, column=0)\n\n        self.progress_bar = ttk.Progressbar(self, orient=\"horizontal\", length=200, mode=\"determinate\")\n        self.progress_bar.grid(row=0, column=1, padx=3, pady=10)\n\n        self.d_label = ttk.Label(self, text=\"Duration:\")\n        self.d_label.grid(row=2, column=0)\n\n        self.d_time = 10\n        self.elapsed_ms = 0\n        self.timer_id = None # Initialize variable for the id of the timer\n        self.d_slider = ttk.Scale(self, from_=0, to=100, orient=\"horizontal\", command=self.update_duration)\n        self.d_slider.set(10)\n        self.d_slider.grid(row=2, column=1, sticky=\"nswe\", padx=10)\n\n        self.reset_button = ttk.Button(self, text=\"Reset\", command=self.reset)\n        self.reset_button.grid(row=3, column=0, columnspan=2, sticky=\"nswe\", padx=10, pady=10)\n\n        # Start the timer\n        self.timer()\n\n    # Main timer function\n    def timer(self): \n        self.et_time['text'] = \"{:.1f}\".format(self.elapsed_ms/1000) + \"s\"  # Display elapsed time with one decimal place\n        diff =  self.d_time - (self.elapsed_ms/1000)\n\n        if not (self.elapsed_ms/1000) &gt;= self.d_time:\n            self.progress_bar[\"value\"] = ((self.d_time - diff) / self.d_time) * 100 if self.d_time else 0\n            self.elapsed_ms += 1\n            # Run every 1 ms\n            self.timer_id = self.after(1, self.timer)\n        else:\n            self.progress_bar[\"value\"] = 100\n\n    # Reset the timer\n    def reset(self):\n        self.elapsed_ms = 0\n        self.after_cancel(self.timer_id) # Stop all instances of timer\n        self.timer()\n\n    # Update the duration based on the slider\n    def update_duration(self, value):\n        self.d_time = float(value)\n        if self.d_time &gt; self.elapsed_ms/1000 and self.progress_bar[\"value\"] == 100:\n            self.timer()\n\nif __name__ == \"__main__\":\n    app = Application()\n    app.mainloop()\n</code></pre> </p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 \u03955\u03919 - \u0388\u03c3\u03c4\u03c9 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 3 \u03b5\u03c1\u03b3\u03b1\u03c3\u03b9\u03ce\u03bd \u03c3\u03c4\u03b9\u03c2 3 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ad\u03c2 \u03b5\u03bd\u03cc\u03c2 \u03b5\u03c1\u03b3\u03bf\u03c3\u03c4\u03b1\u03c3\u03af\u03bf\u03c5. \u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bf \u03c7\u03c1\u03cc\u03bd\u03bf\u03c2 \u03ad\u03bd\u03b1\u03c1\u03be\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03bf \u03c7\u03c1\u03cc\u03bd\u03bf\u03c2 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03ba\u03ac\u03b8\u03b5 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03c3\u03b5 \u03ba\u03ac\u03b8\u03b5 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae:</p> \u039c\u03b7\u03c7\u03b1\u03bd\u03ae \u0395\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u0388\u03bd\u03b1\u03c1\u03be\u03b7 \u03a4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 0 0 0 20 0 1 20 25 0 2 30 45 1 0 30 58 1 1 90 110 1 2 120 170 2 0 100 220 2 1 200 340 2 2 340 420 <p>\u03a3\u03c7\u03b5\u03b4\u03b9\u03ac\u03c3\u03c4\u03b5 \u03bc\u03b5 \u03c4\u03bf matplotlib \u03ad\u03bd\u03b1 \u03b4\u03b9\u03ac\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 Gantt \u03c0\u03b1\u03c1\u03cc\u03bc\u03bf\u03b9\u03bf \u03bc\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf:</p> <p></p> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 E5A9 e5a9.py<pre><code>import matplotlib.pyplot as plt\n\ndef visualize():\n    sample_schedule = [\n        {\"machine\": 0, \"job\": 0, \"start\": 0, \"finish\": 20},\n        {\"machine\": 0, \"job\": 1, \"start\": 20, \"finish\": 25},\n        {\"machine\": 0, \"job\": 2, \"start\": 30, \"finish\": 45},\n        {\"machine\": 1, \"job\": 0, \"start\": 30, \"finish\": 58},\n        {\"machine\": 1, \"job\": 1, \"start\": 90, \"finish\": 110},\n        {\"machine\": 1, \"job\": 2, \"start\": 120, \"finish\": 170},\n        {\"machine\": 2, \"job\": 0, \"start\": 100, \"finish\": 220},\n        {\"machine\": 2, \"job\": 1, \"start\": 200, \"finish\": 340},\n        {\"machine\": 2, \"job\": 2, \"start\": 340, \"finish\": 420},\n    ]\n\n    plt.figure(figsize=(10, 6))    \n    ax = plt.gca()\n    for row in sample_schedule:\n        ax.barh(\n            y=row[\"machine\"],\n            width=row[\"finish\"] - row[\"start\"],\n            left=row[\"start\"],\n            color=f\"C{row['job']}\",\n        )\n    ax.set_xlabel(\"Time\")\n    ax.set_ylabel(\"Machine\")\n    ax.set_yticks(range(3))\n    plt.show()\n\n\nif __name__ == \"__main__\":\n    visualize()\n</code></pre> <ol> <li> <p>Tkinter Tutorial \u21a9</p> </li> <li> <p>Tkinter Matplotlib \u21a9</p> </li> <li> <p>Tkinter MVC \u21a9</p> </li> <li> <p>StringVar \u21a9</p> </li> <li> <p>trace_add \u21a9</p> </li> </ol>"},{"location":"lab6_python/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 6 \u03c3\u03c4\u03b7\u03bd Python","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: NumPy</p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 \u03956\u03911 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03c3\u03cd\u03bd\u03bf\u03bb\u03b1 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03b5\u03c0\u03b9\u03bb\u03ad\u03b3\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c4\u03c5\u03c7\u03b1\u03af\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c3\u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 <code>[0, 1_000)</code>. \u0393\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c4\u03c1\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03c7\u03c1\u03cc\u03bd\u03bf \u03c0\u03bf\u03c5 \u03b1\u03c0\u03b1\u03b9\u03c4\u03ae\u03b8\u03b7\u03ba\u03b5 (\u03bc\u03cc\u03bd\u03bf \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7). \u03a3\u03c5\u03b3\u03ba\u03c1\u03af\u03bd\u03b1\u03c4\u03b5 \u03c4\u03b7\u03bd \u03b1\u03c0\u03cc\u03b4\u03bf\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 <code>sort</code> \u03c4\u03b7\u03c2 Python \u03ba\u03b1\u03b9 \u03c4\u03b7\u03c2 <code>numpy.sort</code>. \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b5\u03b3\u03ad\u03b8\u03b7 \u03c3\u03c5\u03bd\u03cc\u03bb\u03c9\u03bd: 100_000, 1_000_000, 10_000_000 \u03ba\u03b1\u03b9 100_000_000. \u039a\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03b3\u03c1\u03ac\u03c6\u03b7\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03bc\u03b5 \u03b5\u03cd\u03bb\u03b7\u03c0\u03c4\u03bf \u03c4\u03c1\u03cc\u03c0\u03bf \u03c4\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03b1.</p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 \u03956\u03912 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1\u03bd \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03bc\u03b5 200 \u03c4\u03c5\u03c7\u03b1\u03af\u03b5\u03c2 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03b4\u03b5\u03af\u03ba\u03c4\u03b5\u03c2 \u03c4\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03b1\u03bd \u03b5\u03bc\u03c6\u03b1\u03bd\u03b9\u03c3\u03c4\u03bf\u03cd\u03bd \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03b1 \u03c3\u03b5 \u03b1\u03cd\u03be\u03bf\u03c5\u03c3\u03b1 \u03c3\u03b5\u03b9\u03c1\u03ac. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b1\u03bd \u03bf \u03c0\u03af\u03bd\u03b1\u03ba\u03b1\u03c2 \u03c0\u03b5\u03c1\u03b9\u03b5\u03af\u03c7\u03b5 \u03bc\u03cc\u03bd\u03bf \u03c4\u03b1 5 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1: <code>7, 1, 4, 3, 2</code> \u03c4\u03cc\u03c4\u03b5 \u03b5\u03c6\u03cc\u03c3\u03bf\u03bd \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03b8\u03bf\u03cd\u03bd \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9: <code>1, 2, 3, 4, 7</code> \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03b8\u03ad\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03af\u03c7\u03b1\u03bd \u03c3\u03c4\u03bf\u03bd \u03b1\u03c1\u03c7\u03b9\u03ba\u03cc \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9: <code>1, 4, 3, 2, 0</code>. \u0394\u03b5\u03af\u03c4\u03b5 \u03c4\u03bf <code>numpy.argsort</code>.</p>"},{"location":"lab7_python/","title":"\u0395\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf 6 \u03c3\u03c4\u03b7\u03bd Python","text":"<p>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03bf: NumPy</p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 \u03956\u03911 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03c3\u03cd\u03bd\u03bf\u03bb\u03b1 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03b5\u03c0\u03b9\u03bb\u03ad\u03b3\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c4\u03c5\u03c7\u03b1\u03af\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c3\u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 <code>[0, 1_000)</code>. \u0393\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03ae\u03c3\u03c4\u03b5 \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c4\u03c1\u03ae\u03c3\u03c4\u03b5 \u03c4\u03bf \u03c7\u03c1\u03cc\u03bd\u03bf \u03c0\u03bf\u03c5 \u03b1\u03c0\u03b1\u03b9\u03c4\u03ae\u03b8\u03b7\u03ba\u03b5 (\u03bc\u03cc\u03bd\u03bf \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7). \u03a3\u03c5\u03b3\u03ba\u03c1\u03af\u03bd\u03b1\u03c4\u03b5 \u03c4\u03b7\u03bd \u03b1\u03c0\u03cc\u03b4\u03bf\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 <code>sort</code> \u03c4\u03b7\u03c2 Python \u03ba\u03b1\u03b9 \u03c4\u03b7\u03c2 <code>numpy.sort</code>. \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03c4\u03b5 \u03bc\u03b5\u03b3\u03ad\u03b8\u03b7 \u03c3\u03c5\u03bd\u03cc\u03bb\u03c9\u03bd: 100_000, 1_000_000, 10_000_000 \u03ba\u03b1\u03b9 100_000_000. \u039a\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1 \u03b3\u03c1\u03ac\u03c6\u03b7\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 \u03bc\u03b5 \u03b5\u03cd\u03bb\u03b7\u03c0\u03c4\u03bf \u03c4\u03c1\u03cc\u03c0\u03bf \u03c4\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03b1.</p> <p>\u0386\u03c3\u03ba\u03b7\u03c3\u03b7 \u03956\u03912 - \u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03c3\u03c4\u03b5 \u03ad\u03bd\u03b1\u03bd \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03bc\u03b5 200 \u03c4\u03c5\u03c7\u03b1\u03af\u03b5\u03c2 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03c4\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03b4\u03b5\u03af\u03ba\u03c4\u03b5\u03c2 \u03c4\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03b1\u03bd \u03b5\u03bc\u03c6\u03b1\u03bd\u03b9\u03c3\u03c4\u03bf\u03cd\u03bd \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03b1 \u03c3\u03b5 \u03b1\u03cd\u03be\u03bf\u03c5\u03c3\u03b1 \u03c3\u03b5\u03b9\u03c1\u03ac. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b1\u03bd \u03bf \u03c0\u03af\u03bd\u03b1\u03ba\u03b1\u03c2 \u03c0\u03b5\u03c1\u03b9\u03b5\u03af\u03c7\u03b5 \u03bc\u03cc\u03bd\u03bf \u03c4\u03b1 5 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1: <code>7, 1, 4, 3, 2</code> \u03c4\u03cc\u03c4\u03b5 \u03b5\u03c6\u03cc\u03c3\u03bf\u03bd \u03c4\u03b1\u03be\u03b9\u03bd\u03bf\u03bc\u03b7\u03b8\u03bf\u03cd\u03bd \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9: <code>1, 2, 3, 4, 7</code> \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03b8\u03ad\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03af\u03c7\u03b1\u03bd \u03c3\u03c4\u03bf\u03bd \u03b1\u03c1\u03c7\u03b9\u03ba\u03cc \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9: <code>1, 4, 3, 2, 0</code>. \u0394\u03b5\u03af\u03c4\u03b5 \u03c4\u03bf <code>numpy.argsort</code>.</p>"},{"location":"theory/","title":"Theory","text":""},{"location":"theory/#_1","title":"\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03c1\u03bf\u03b5\u03c4\u03bf\u03b9\u03bc\u03b1\u03c3\u03af\u03b1\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03b5\u03be\u03b5\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2","text":"<ul> <li>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c0\u03cc \u03cc\u03bb\u03b7 \u03c4\u03b7\u03bd \u03cd\u03bb\u03b7 </li> <li>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03c9\u03bd \u03b5\u03be\u03b5\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd 1</li> <li>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03c9\u03bd \u03b5\u03be\u03b5\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd 2</li> <li>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03c9\u03bd \u03b5\u03be\u03b5\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd 3</li> <li>\u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03c9\u03bd \u03b5\u03be\u03b5\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd 4</li> </ul>"},{"location":"theory/#2025","title":"\u0395\u03be\u03b5\u03c4\u03b1\u03c3\u03c4\u03ad\u03b1 \u03cd\u03bb\u03b7 \u0399\u03bf\u03c5\u03bd\u03af\u03bf\u03c5 2025","text":"<ul> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 1</li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 3 (\u038c\u03a7\u0399 \u03b1\u03c0\u03cc 3.3.2 \u03bc\u03ad\u03c7\u03c1\u03b9 \u03c4\u03bf \u03c4\u03ad\u03bb\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b5\u03c6\u03b1\u03bb\u03b1\u03af\u03bf\u03c5)</li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 5</li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 6</li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 7</li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 8 (\u038c\u03a7\u0399)</li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 9 (\u038c\u03a7\u0399)</li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 12 (\u038c\u03a7\u0399 \u03b1\u03c0\u03cc 12.6 \u03bc\u03ad\u03c7\u03c1\u03b9 \u03c4\u03bf \u03c4\u03ad\u03bb\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b5\u03c6\u03b1\u03bb\u03b1\u03af\u03bf\u03c5)</li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 14 </li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 15 (\u038c\u03a7\u0399 15.4, 15.5, 15.6, 15.7, 15.9)</li> <li>\u039a\u0395\u03a6\u0391\u039b\u0391\u0399\u039f 16</li> </ul> <p>\u0395\u03c0\u03af\u03c3\u03b7\u03c2, \u03b5\u03bd\u03c4\u03cc\u03c2 \u03cd\u03bb\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03b1 \u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c1\u03b9\u03b1 \u03b3\u03b9\u03b1 Python, Haskell, Prolog</p>"},{"location":"theory/#_2","title":"\u0394\u03b9\u03b4\u03b1\u03ba\u03c4\u03ad\u03b1 \u038e\u03bb\u03b7","text":"<p>\u038e\u03bb\u03b7 \u03b1\u03c0\u03cc \u03c4\u03bf \u03c3\u03cd\u03b3\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \"\u0391\u03c1\u03c7\u03ad\u03c2 \u0393\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd 11\u03b7 \u03b5\u03ba\u03b4., Robert W. Sebesta\"</p>"},{"location":"theory/#1","title":"1. \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2, \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#2","title":"2. \u0395\u03be\u03ad\u03bb\u03b9\u03be\u03b7 \u03c4\u03c9\u03bd \u03c3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03cc\u03c4\u03b5\u03c1\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2, \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d</p>"},{"location":"theory/#3","title":"3. \u03a0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03ba\u03b1\u03b9 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2, \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#5","title":"5. \u039f\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b5\u03c2","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2 \u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#6","title":"6. \u03a4\u03cd\u03c0\u03bf\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2 \u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#7","title":"7. \u0395\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2 \u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#8","title":"8. \u0394\u03bf\u03bc\u03ad\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03c3\u03b5 \u03b5\u03c0\u03af\u03c0\u03b5\u03b4\u03bf \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd","text":"<p>\u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d</p>"},{"location":"theory/#9","title":"9. \u03a5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2 \u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#12","title":"12. \u03a5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03bf\u03cd\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2 \u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#14","title":"14. \u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd \u03ba\u03b1\u03b9 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c3\u03c5\u03bc\u03b2\u03ac\u03bd\u03c4\u03c9\u03bd","text":"<p>\u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#15","title":"15. \u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2 \u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#16","title":"16. \u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2\u03a0\u03b1\u03c1\u03bf\u03c5\u03c3\u03af\u03b1\u03c3\u03b7: \u0395\u039d | \u0395\u039b</p>"},{"location":"theory/#_3","title":"\u0394\u03b9\u03ac\u03c6\u03bf\u03c1\u03b1 \u03b8\u03ad\u03bc\u03b1\u03c4\u03b1","text":"<ul> <li>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03c0\u03b7\u03b3\u03b1\u03af\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c3\u03c4\u03b7 C</li> <li>\u0395\u03c3\u03c0\u03b5\u03c5\u03c3\u03bc\u03ad\u03bd\u03b7 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ce\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd \u03c3\u03c4\u03b7 C</li> <li>\u0395\u03c0\u03b9\u03b2\u03b5\u03b2\u03b1\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2 - assertions</li> <li>\u0395\u03c0\u03b9\u03c1\u03c1\u03bf\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03b5 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 </li> </ul>"},{"location":"theory/#_4","title":"\u0395\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03bf\u03bd\u03b9\u03ba\u03ac \u03ac\u03c1\u03b8\u03c1\u03b1","text":"<ul> <li>Matuszek, D. (1976). The case for the assert statement. ACM SIGPLAN Notices, 11(8), 36-37.</li> <li>Hughes, J. (1989). Why functional programming matters. The computer journal, 32(2), 98-107.</li> <li>Lu, K. C., &amp; Krishnamurthi, S. (2024). Identifying and correcting programming language behavior misconceptions. Proceedings of the ACM on Programming Languages, 8(OOPSLA1), 334-361.</li> <li>You should be reading academic computer science papers</li> </ul>"},{"location":"theory_ch1/","title":"\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf \u039a\u03b5\u03c6\u03ac\u03bb\u03b1\u03b9\u03bf 1 - \u03a0\u03c1\u03bf\u03ba\u03b1\u03c4\u03b1\u03c1\u03ba\u03c4\u03b9\u03ba\u03ac","text":""},{"location":"theory_ch1/#1","title":"1. \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae","text":"<ul> <li>\u0393\u03b9\u03b1\u03c4\u03af \u03b4\u03b5\u03bd \u03b1\u03c1\u03ba\u03b5\u03af \u03b7 \u03ba\u03b1\u03bb\u03ae \u03b3\u03bd\u03ce\u03c3\u03b7 1-2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd;<ul> <li>Polyglot Programming</li> </ul> </li> <li>\u039f\u03b9 \u03b4\u03cd\u03bf \u03b2\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03b5\u03c0\u03b9\u03c1\u03c1\u03bf\u03ad\u03c2 \u03c3\u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd: <ul> <li>\u0391\u03c1\u03c7\u03b9\u03c4\u03b5\u03ba\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae \u0397/\u03a5</li> <li>\u039c\u03b5\u03b8\u03bf\u03b4\u03bf\u03bb\u03bf\u03b3\u03af\u03b5\u03c2 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd</li> </ul> </li> </ul>"},{"location":"theory_ch1/#11","title":"1.1 \u039b\u03cc\u03b3\u03bf\u03b9 \u03bc\u03b5\u03bb\u03ad\u03c4\u03b7\u03c2 \u03b5\u03bd\u03bd\u03bf\u03b9\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<ul> <li>\u0391\u03c5\u03be\u03b7\u03bc\u03ad\u03bd\u03b7 \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7\u03c2 \u03b9\u03b4\u03b5\u03ce\u03bd. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ae\u03c2 \u03c4\u03b7\u03c2 C \u03c0\u03bf\u03c5 \u03b3\u03bd\u03c9\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03c9\u03bd \u03bb\u03b5\u03be\u03b9\u03ba\u03ce\u03bd \u03c3\u03c4\u03b7\u03bd Python \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c3\u03c7\u03b5\u03b4\u03b9\u03ac\u03c3\u03b5\u03b9 \u03c0\u03b1\u03c1\u03cc\u03bc\u03bf\u03b9\u03b5\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03ae \u03bd\u03b1 \u03b1\u03bd\u03b1\u03b6\u03b7\u03c4\u03ae\u03c3\u03b5\u03b9 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd \u03c0\u03b1\u03c1\u03cc\u03bc\u03bf\u03b9\u03b5\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03c3\u03c4\u03b7 C \u03cc\u03c0\u03c9\u03c2 \u03b7 GLib - Hash Tables.</li> <li>\u0392\u03b5\u03bb\u03c4\u03b9\u03c9\u03bc\u03ad\u03bd\u03bf \u03c5\u03c0\u03cc\u03b2\u03b1\u03b8\u03c1\u03bf \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae \u03ba\u03b1\u03c4\u03ac\u03bb\u03bb\u03b7\u03bb\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b3\u03b9\u03b1 \u03bd\u03ad\u03b1 \u03ad\u03c1\u03b3\u03b1. </li> <li>\u0395\u03c5\u03ba\u03bf\u03bb\u03af\u03b1 \u03b5\u03ba\u03bc\u03ac\u03b8\u03b7\u03c3\u03b7\u03c2 \u03bd\u03ad\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b7 \u03b5\u03ba\u03bc\u03ac\u03b8\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 Ruby \u03b1\u03c0\u03cc \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03ba\u03b1\u03c4\u03b1\u03bd\u03bf\u03bf\u03cd\u03bd \u03c4\u03b9\u03c2 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03b1\u03c1\u03c7\u03ad\u03c2 \u03c4\u03bf\u03c5 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03bf\u03cd\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03ba\u03b1\u03b8\u03af\u03c3\u03c4\u03b1\u03c4\u03b1\u03b9 \u03b5\u03c5\u03ba\u03bf\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7 \u03ba\u03b1\u03b8\u03ce\u03c2 \u03b7 Ruby \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2.</li> <li>\u0397 \u03b4\u03b7\u03bc\u03bf\u03c6\u03b9\u03bb\u03af\u03b1 \u03c4\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03b5\u03b9 \u03c3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b4\u03b9\u03b1\u03ba\u03c5\u03bc\u03ac\u03bd\u03c3\u03b5\u03b9\u03c2 <ul> <li>TIOBE index</li> <li>PYPL PopularitY of Programming Language</li> <li>Redmonk</li> </ul> </li> <li>\u0393\u03bd\u03ce\u03c3\u03b7 \u03bb\u03b5\u03be\u03b9\u03bb\u03bf\u03b3\u03af\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ad\u03c2, \u03c0.\u03c7. dynamic binding (\u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7), scope (\u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1), \u03c5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03ba.\u03b1.</li> <li>\u039a\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03ba\u03b1\u03c4\u03b1\u03bd\u03cc\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03af\u03b1\u03c2 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b7 \u03b3\u03bd\u03ce\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c5 \u03bc\u03b5 \u03c4\u03bf\u03bd \u03bf\u03c0\u03bf\u03af\u03bf \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b7 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03be\u03b7\u03b3\u03ae\u03c3\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b5\u03bd\u03b4\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03b7 \u03b1\u03c1\u03b3\u03ae \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03b7 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03bc\u03b9\u03ba\u03c1\u03bf\u03cd \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c0\u03bf\u03bb\u03bb\u03ad\u03c2 \u03c6\u03bf\u03c1\u03ad\u03c2.</li> <li>\u039a\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03bf\u03c5 \u03ae\u03b4\u03b7 \u03b3\u03bd\u03c9\u03c1\u03af\u03b6\u03bf\u03c5\u03bc\u03b5.</li> <li>\u0391\u03bd\u03b1\u03b2\u03ac\u03b8\u03bc\u03b9\u03c3\u03b7 \u03b3\u03bd\u03ce\u03c3\u03b5\u03c9\u03bd \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7 \u03b9\u03ba\u03b1\u03bd\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03b5\u03c0\u03b9\u03c7\u03b5\u03b9\u03c1\u03b7\u03bc\u03b1\u03c4\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2 \u03b3\u03b9\u03b1 \u03bb\u03cc\u03b3\u03bf\u03c5\u03c2 \u03b5\u03c0\u03b9\u03ba\u03c1\u03ac\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03ad\u03bd\u03b1\u03bd\u03c4\u03b9 \u03ac\u03bb\u03bb\u03c9\u03bd, \u03c0.\u03c7. FORTRAN vs. ALGOL.</li> </ul>"},{"location":"theory_ch1/#12","title":"1.2 \u03a4\u03bf\u03bc\u03b5\u03af\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u039f\u03b9 \u0397/\u03a5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03c0\u03ac\u03c1\u03b1 \u03c0\u03bf\u03bb\u03bb\u03bf\u03cd\u03c2 \u03ba\u03b1\u03b9 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03bc\u03b5\u03c4\u03b1\u03be\u03cd \u03c4\u03bf\u03c5\u03c2 \u03ba\u03bb\u03ac\u03b4\u03bf\u03c5\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03bf\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2, \u03bf\u03b9 \u03b5\u03c0\u03b9\u03c7\u03b5\u03b9\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2, \u03bf\u03b9 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2 \u03c4\u03b5\u03c7\u03bd\u03b7\u03c4\u03ae\u03c2 \u03bd\u03bf\u03b7\u03bc\u03bf\u03c3\u03cd\u03bd\u03b7\u03c2, \u03bf\u03b9 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c0\u03b1\u03b3\u03ba\u03cc\u03c3\u03bc\u03b9\u03bf \u03b9\u03c3\u03c4\u03cc, \u03bf\u03b9 \u03c4\u03b7\u03bb\u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03af\u03b5\u03c2, \u03c4\u03b1 \u03b2\u03b9\u03bd\u03c4\u03b5\u03bf\u03c0\u03b1\u03b9\u03c7\u03bd\u03af\u03b4\u03b9\u03b1 \u03ba.\u03b1. \u03a3\u03c5\u03bd\u03b5\u03c0\u03ce\u03c2, \u03b7 \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03bc\u03b5 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03c3\u03c4\u03cc\u03c7\u03bf\u03c5\u03c2 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1.</p> <ul> <li>\u0395\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2. \u0397 \u03b1\u03c1\u03c7\u03b9\u03ba\u03ae \u03b1\u03c0\u03b1\u03af\u03c4\u03b7\u03c3\u03b7 \u03ae\u03c4\u03b1\u03bd \u03b3\u03b9\u03b1 \u03c0\u03c1\u03ac\u03be\u03b5\u03b9\u03c2 \u03bc\u03b5 \u03b4\u03b5\u03ba\u03b1\u03b4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03ba\u03b9\u03bd\u03b7\u03c4\u03ae\u03c2 \u03c5\u03c0\u03bf\u03b4\u03b9\u03b1\u03c3\u03c4\u03bf\u03bb\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c3\u03b5 \u03b4\u03b9\u03b1\u03bd\u03cd\u03c3\u03bc\u03b1\u03c4\u03b1 \u03ba\u03b1\u03b9 \u03b4\u03b9\u03c3\u03b4\u03b9\u03ac\u03c3\u03c4\u03b1\u03c4\u03bf\u03c5\u03c2 \u03c0\u03af\u03bd\u03b1\u03ba\u03b5\u03c2. \u03a3\u03c4\u03bf \u03c0\u03b1\u03c1\u03b5\u03bb\u03b8\u03cc\u03bd \u03ba\u03c5\u03c1\u03af\u03b1\u03c1\u03c7\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03b3\u03b9\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2 \u03ae\u03c4\u03b1\u03bd \u03b7 FORTRAN \u03b7 \u03bf\u03c0\u03bf\u03af\u03b1 \u03ad\u03c0\u03c1\u03b5\u03c0\u03b5 \u03bd\u03b1 \u03b1\u03bd\u03c4\u03b1\u03b3\u03c9\u03bd\u03b9\u03c3\u03b8\u03b5\u03af \u03c3\u03b5 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b7\u03bd ASSEMBLY. \u03a3\u03ae\u03bc\u03b5\u03c1\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03b7\u03bc\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2 \u03c0\u03bf\u03bb\u03bb\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03bc\u03b5 \u03c3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c4\u03b9\u03c2 FORTRAN, C, C++, Python, R, Java, MATLAB, Julia \u03ba.\u03b1.</li> <li>\u0395\u03c0\u03b9\u03c7\u03b5\u03b9\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2. \u039a\u03b1\u03bb\u03cd\u03c0\u03c4\u03bf\u03c5\u03bd \u03b1\u03c0\u03b1\u03b9\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2  \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ce\u03bd (reports), \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03b4\u03b5\u03ba\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03ce\u03bd \u03ba\u03b1\u03b9 \u03b1\u03bb\u03c6\u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ce\u03bd.<ul> <li>COBOL (1960)<ul> <li>COBOL Programmers are Back In Demand. Seriously. </li> </ul> </li> </ul> </li> <li>\u03a4\u03b5\u03c7\u03bd\u03b7\u03c4\u03ae \u03bd\u03bf\u03b7\u03bc\u03bf\u03c3\u03cd\u03bd\u03b7. \u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bc\u03c6\u03b1\u03c3\u03b7 \u03c3\u03b5 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03ba\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03cc\u03c7\u03b9 \u03c3\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c0\u03c1\u03ac\u03be\u03b5\u03b9\u03c2, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03c0\u03c1\u03ac\u03be\u03b5\u03b9\u03c2 \u03c0\u03ac\u03bd\u03c9 \u03c3\u03b5 \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03b1 \u03c0\u03bf\u03c5 \u03b4\u03b9\u03b1\u03c4\u03b7\u03c1\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03c3\u03c5\u03bd\u03b4\u03b5\u03b4\u03b5\u03bc\u03ad\u03bd\u03b5\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd.<ul> <li>Lisp (1959)</li> <li>Prolog (1970)</li> <li>Python, C, C++, Java \u03ba.\u03b1.</li> </ul> </li> <li>\u03a0\u03b1\u03b3\u03ba\u03cc\u03c3\u03bc\u03b9\u03bf\u03c2 \u03b9\u03c3\u03c4\u03cc\u03c2.<ul> <li>HTML (markup language) + CSS</li> <li>\u0395\u03bd\u03c3\u03c9\u03bc\u03ac\u03c4\u03c9\u03c3\u03b7 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 (JavaScript, PHP) \u03c3\u03b5 \u03ad\u03b3\u03b3\u03c1\u03b1\u03c6\u03b1 HTML</li> </ul> </li> </ul>"},{"location":"theory_ch1/#13","title":"1.3 \u039a\u03c1\u03b9\u03c4\u03ae\u03c1\u03b9\u03b1 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":""},{"location":"theory_ch1/#_1","title":"\u039a\u03c1\u03b9\u03c4\u03ae\u03c1\u03b9\u03b1:","text":"<ul> <li>\u0395\u03c5\u03ba\u03bf\u03bb\u03af\u03b1 \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7\u03c2 (readability)</li> <li>\u0395\u03c5\u03ba\u03bf\u03bb\u03af\u03b1 \u03c3\u03c5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd </li> <li>\u0391\u03be\u03b9\u03bf\u03c0\u03b9\u03c3\u03c4\u03af\u03b1</li> <li>\u039a\u03cc\u03c3\u03c4\u03bf\u03c2<ul> <li>\u039a\u03cc\u03c3\u03c4\u03bf\u03c2 \u03b5\u03ba\u03c0\u03b1\u03af\u03b4\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c3\u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd.</li> <li>\u039a\u03cc\u03c3\u03c4\u03bf\u03c2 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd. \u039f\u03b9 \u03b1\u03c1\u03c7\u03b9\u03ba\u03ad\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c0\u03ac\u03b8\u03b5\u03b9\u03b5\u03c2 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b2\u03b1\u03c3\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03bd \u03c3\u03c4\u03b7\u03bd \u03b5\u03c0\u03b9\u03b8\u03c5\u03bc\u03af\u03b1 \u03bc\u03b5\u03af\u03c9\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03cc\u03c3\u03c4\u03bf\u03c5\u03c2 \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03b9\u03ba\u03bf\u03cd.</li> <li>\u039a\u03cc\u03c3\u03c4\u03bf\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2.</li> <li>\u039a\u03cc\u03c3\u03c4\u03bf\u03c2 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2. \u039c\u03bf\u03bb\u03bf\u03bd\u03cc\u03c4\u03b9 \u03c3\u03c4\u03bf \u03c0\u03b1\u03c1\u03b5\u03bb\u03b8\u03cc\u03bd \u03b7 \u03b1\u03c0\u03bf\u03b4\u03bf\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b7\u03c2 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03ae\u03c4\u03b1\u03bd \u03bf \u03ba\u03cd\u03c1\u03b9\u03bf\u03c2 \u03c0\u03b1\u03c1\u03ac\u03b3\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c0\u03bf\u03c5 \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03bd\u03c4\u03b1\u03bd \u03c5\u03c0\u03cc\u03c8\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03c4\u03c9\u03bd \u03c0\u03c1\u03ce\u03c4\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd, \u03c3\u03ae\u03bc\u03b5\u03c1\u03b1 \u03b4\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03bc\u03b5\u03b3\u03ac\u03bb\u03b7 \u03c3\u03b7\u03bc\u03b1\u03c3\u03af\u03b1 \u03c3\u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c0\u03c4\u03ce\u03c3\u03b5\u03b9\u03c2.</li> <li>\u039a\u03cc\u03c3\u03c4\u03bf\u03c2 \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd (\u03c0.\u03c7. Java-&gt;\u03b4\u03c9\u03c1\u03b5\u03ac\u03bd, Ada-&gt;\u03b1\u03ba\u03c1\u03b9\u03b2\u03bf\u03af \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ad\u03c2 \u03c0\u03c1\u03ce\u03c4\u03b7\u03c2 \u03b3\u03b5\u03bd\u03b9\u03ac\u03c2)</li> <li>\u039a\u03cc\u03c3\u03c4\u03bf\u03c2 \u03b1\u03bd\u03b1\u03be\u03b9\u03bf\u03c0\u03b9\u03c3\u03c4\u03af\u03b1\u03c2 (\u03c0\u03b9\u03b8\u03b1\u03bd\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b1\u03b3\u03c9\u03b3\u03ce\u03bd \u03b1\u03c0\u03bf\u03b6\u03b7\u03bc\u03af\u03c9\u03c3\u03b7\u03c2).</li> <li>\u039a\u03cc\u03c3\u03c4\u03bf\u03c2 \u03c3\u03c5\u03bd\u03c4\u03ae\u03c1\u03b7\u03c3\u03b7\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd. \u0395\u03ba\u03c4\u03b9\u03bc\u03ac\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b9 \u03c4\u03bf \u03ba\u03cc\u03c3\u03c4\u03bf\u03c2 \u03c3\u03c5\u03bd\u03c4\u03ae\u03c1\u03b7\u03c3\u03b7\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03c0\u03bb\u03ac\u03c3\u03b9\u03bf \u03ae \u03b1\u03ba\u03cc\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03c4\u03b5\u03c4\u03c1\u03b1\u03c0\u03bb\u03ac\u03c3\u03b9\u03bf \u03b1\u03c0\u03cc \u03c4\u03bf \u03ba\u03cc\u03c3\u03c4\u03bf\u03c2 \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03b9\u03ba\u03bf\u03cd.</li> </ul> </li> </ul>"},{"location":"theory_ch1/#_2","title":"\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac","text":""},{"location":"theory_ch1/#_3","title":"\u0391\u03c0\u03bb\u03cc\u03c4\u03b7\u03c4\u03b1","text":"<p>\u03a0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd (feature multiplicity): \u039f\u03b9 \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03bf\u03af \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9 \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03bf\u03c0\u03bf\u03af\u03bf\u03c5\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c4\u03b5\u03c5\u03c7\u03b8\u03b5\u03af \u03ad\u03bd\u03b1 \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 \u03b5\u03c0\u03b7\u03c1\u03b5\u03ac\u03b6\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03b1\u03c0\u03bb\u03cc\u03c4\u03b7\u03c4\u03b1. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03bf\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c3\u03b5 Java \u03b7 \u03bc\u03bf\u03bd\u03b1\u03b4\u03b9\u03b1\u03af\u03b1 \u03b1\u03cd\u03be\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 count \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 4 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c5\u03c2.</p> <pre><code>count = count + 1;\ncount += 1;\n++count;\ncount++;\n</code></pre> <p>\u03a5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd: \u0395\u03c1\u03bc\u03b7\u03bd\u03b5\u03af\u03b1 \u03b5\u03bd\u03cc\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae \u03bc\u03b5 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03bf\u03c5\u03c2 \u03b1\u03c0\u03cc \u03ad\u03bd\u03b1\u03bd \u03c4\u03c1\u03cc\u03c0\u03bf\u03c5\u03c2. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b7 \u03c5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae + \u03b3\u03b9\u03b1 \u03b4\u03b9\u03b1\u03bd\u03cd\u03c3\u03bc\u03b1\u03c4\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03bc\u03b5 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03ba\u03b1\u03b9 \u03bc\u03b7 \u03b4\u03b9\u03b1\u03b9\u03c3\u03b8\u03b7\u03c4\u03b9\u03ba\u03ac \u03bf\u03c1\u03b8\u03bf\u03cd\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c5\u03c2.</p> <p>\u0397 \u03c5\u03c0\u03b5\u03c1\u03b2\u03bf\u03bb\u03b9\u03ba\u03ae \u03b1\u03c0\u03bb\u03cc\u03c4\u03b7\u03c4\u03b1 \u03bc\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c5\u03c0\u03bf\u03b2\u03b1\u03b8\u03bc\u03af\u03b6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b1\u03bd\u03b1\u03b3\u03bd\u03c9\u03c3\u03b9\u03bc\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03bd\u03b1 \u03c3\u03b5 \u03b1\u03c5\u03c4\u03ae (\u03c0.\u03c7. Assembly).</p>"},{"location":"theory_ch1/#_4","title":"\u039f\u03c1\u03b8\u03bf\u03b3\u03c9\u03bd\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1","text":"<p>\u039f\u03c1\u03b8\u03bf\u03b3\u03c9\u03bd\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03bb\u03af\u03b3\u03b1 \u03bc\u03cc\u03bd\u03bf \u03c0\u03c1\u03c9\u03c4\u03bf\u03b3\u03b5\u03bd\u03ae \u03b4\u03bf\u03bc\u03b9\u03ba\u03ac \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03c3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03c4\u03bf\u03cd\u03bd \u03bc\u03b5 \u03c3\u03c7\u03b5\u03c4\u03b9\u03ba\u03ac \u03bb\u03af\u03b3\u03bf\u03c5\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c5\u03c2 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03b1\u03c3\u03c4\u03bf\u03cd\u03bd \u03bf\u03b9 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03ba\u03b1\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2. \u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd, \u03ba\u03ac\u03b8\u03b5 \u03c0\u03b9\u03b8\u03b1\u03bd\u03cc\u03c2 \u03c3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc\u03c2 \u03c4\u03c9\u03bd \u03c0\u03c1\u03c9\u03c4\u03bf\u03b3\u03b5\u03bd\u03ce\u03bd \u03b4\u03bf\u03bc\u03b9\u03ba\u03ce\u03bd \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03b3\u03ba\u03c5\u03c1\u03bf\u03c2 \u03ba\u03b1\u03b9 \u03ad\u03c7\u03b5\u03b9 \u03bd\u03cc\u03b7\u03bc\u03b1.  </p> <p>\u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03c5\u03c0\u03bf\u03b8\u03b5\u03c4\u03b9\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03bc\u03b5 \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd int, float, char \u03ba\u03b1\u03b9 \u03c4\u03bf\u03c5\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03c9\u03bd \u03ba\u03b1\u03b9 \u03b4\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd, \u03b7 \u03ad\u03bb\u03bb\u03b5\u03b9\u03c8\u03b7 \u03bf\u03c1\u03b8\u03bf\u03b3\u03c9\u03bd\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03b8\u03b1 \u03c3\u03ae\u03bc\u03b1\u03b9\u03bd\u03b5 \u03cc\u03c4\u03b9 \u03b4\u03b5\u03bd \u03b8\u03b1 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03c3\u03b5 \u03bd\u03b1 \u03bf\u03c1\u03b9\u03c3\u03c4\u03b5\u03af \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf\u03c2 \u03c3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c5 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae \u03c4\u03cd\u03c0\u03c9\u03bd \u03cc\u03c0\u03c9\u03c2 \u03bf \u03b4\u03b5\u03af\u03ba\u03c4\u03b7\u03c2 \u03c3\u03b5 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7. </p> <p>\u039c\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03bf\u03c1\u03b8\u03bf\u03b3\u03c9\u03bd\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c3\u03c5\u03bd\u03b5\u03c0\u03ac\u03b3\u03b5\u03c4\u03b1\u03b9 \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03b9\u03c2 \u03c3\u03b5 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2.</p> <p>\u039f\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 (Lisp, Scheme, Haskell, ...) \u03c0\u03c1\u03bf\u03c3\u03c6\u03ad\u03c1\u03bf\u03c5\u03bd \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03bf\u03c1\u03b8\u03bf\u03b3\u03c9\u03bd\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b1\u03c0\u03cc \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 (C, C++, Java, Python, ...), \u03b1\u03bb\u03bb\u03ac \u03c5\u03c3\u03c4\u03b5\u03c1\u03bf\u03cd\u03bd \u03c3\u03b5 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b7\u03c4\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2.</p>"},{"location":"theory_ch1/#c","title":"\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03ad\u03bb\u03bb\u03b5\u03b9\u03c8\u03b7\u03c2 \u03bf\u03c1\u03b8\u03bf\u03b3\u03c9\u03bd\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c3\u03c4\u03b7 C","text":"<p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 1: \u039c\u03bf\u03bb\u03bf\u03bd\u03cc\u03c4\u03b9 \u03b7 C \u03b4\u03b9\u03b1\u03b8\u03ad\u03c4\u03b5\u03b9 3 \u03b5\u03af\u03b4\u03b7 \u03b4\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03c9\u03bd \u03c4\u03cd\u03c0\u03c9\u03bd \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd, \u03c4\u03b9\u03c2 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 (\u03c0\u03af\u03bd\u03b1\u03ba\u03b5\u03c2), \u03c4\u03b9\u03c2 \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ad\u03c2 (struct) \u03ba\u03b1\u03b9 \u03c4\u03b9\u03c2 \u03b5\u03bd\u03ce\u03c3\u03b5\u03b9\u03c2 (union), \u03bf\u03b9 \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03b5\u03bd\u03ce\u03c3\u03b5\u03b9\u03c2 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b1\u03bb\u03bb\u03ac \u03cc\u03c7\u03b9 \u03bf\u03b9 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c3\u03b7\u03bc\u03b5\u03b9\u03c9\u03b8\u03b5\u03af \u03cc\u03c4\u03b9 \u03b7 C \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae \u03b5\u03bd\u03cc\u03c2 \u03b4\u03b5\u03af\u03ba\u03c4\u03b7 \u03c0\u03c1\u03bf\u03c2 \u03bc\u03b9\u03b1 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7 \u03ba\u03b1\u03b9 \u03b1\u03c5\u03c4\u03cc \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af \u03ad\u03bd\u03b1\u03bd \u03ad\u03bc\u03bc\u03b5\u03c3\u03bf \u03c4\u03c1\u03cc\u03c0\u03bf \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae\u03c2 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7\u03c2 \u03b1\u03c0\u03cc \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7.</p> orthogonality_violation1.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nstruct my_struct {\n  int a;\n  int b;\n};\n\n// \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03b1\u03c0\u03cc \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\nstruct my_struct fun1(int a, int b) {\n  struct my_struct x;\n  x.a = a;\n  x.b = b;\n  return x;\n}\n\n// \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b4\u03b5\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7\n// int[10] fun2(){\n//     // ...\n// }\n\n// \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae \u03b5\u03bd\u03cc\u03c2 \u03b4\u03b5\u03af\u03ba\u03c4\u03b7 \u03c0\u03c1\u03bf\u03c2 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7 n \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03c9\u03bd\nint *fun3(int v, int n) {\n  int *a = malloc(sizeof(int) * n);\n  for (int i = 0; i &lt; n; i++) {\n    a[i] = v;\n  }\n  return a;\n}\n\nint main(void) {\n  printf(\"1. Function returns struct\\n\");\n  struct my_struct r = fun1(1, 2);\n  printf(\"%d %d\\n\", r.a, r.b);\n\n  printf(\"2. Function returns array (through a pointer)\\n\");\n  int *a = fun3(42, 5);\n  for (int i = 0; i &lt; 5; i++) {\n    printf(\"a[%d]=%d\\n\", i, a[i]);\n  }\n  free(a);\n}\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1:</p> <pre><code>$ gcc orthogonality_violation1.c\n$ ./a.out\n1. Function returns struct\n1 2\n2. Function returns array (through a pointer)\na[0]=42\na[1]=42\na[2]=42\na[3]=42\na[4]=42\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 2: \u0388\u03bd\u03b1 \u03bc\u03ad\u03bb\u03bf\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b4\u03bf\u03bc\u03ae\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03c0\u03bf\u03b9\u03bf\u03c5\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c4\u03cd\u03c0\u03bf\u03c5 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03b5\u03ba\u03c4\u03cc\u03c2 \u03b1\u03c0\u03cc void \u03ae \u03bc\u03b9\u03b1 \u03b4\u03bf\u03bc\u03ae \u03c4\u03bf\u03c5 \u03af\u03b4\u03b9\u03bf\u03c5 \u03c4\u03cd\u03c0\u03bf\u03c5. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03ad\u03bd\u03b1 \u03bc\u03ad\u03bb\u03bf\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b4\u03bf\u03bc\u03ae\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b5\u03af\u03ba\u03c4\u03b7\u03c2 \u03c0\u03c1\u03bf\u03c2 void \u03ae \u03b4\u03b5\u03af\u03ba\u03c4\u03b7\u03c2 \u03c0\u03c1\u03bf\u03c2 \u03b4\u03bf\u03bc\u03ae \u03c4\u03bf\u03c5 \u03af\u03b4\u03b9\u03bf\u03c5 \u03c4\u03cd\u03c0\u03bf\u03c5.</p> orthogonality_violation2.c<pre><code>#include &lt;stdio.h&gt;\n\nstruct my_struct1 {\n  int a;\n  float b;\n  char c;\n  double d;\n  int e[3];\n};\n\n// struct my_struct2{\n//     struct my_struct2 a; // error: field 'a' has incomplete type\n// };\n\n// struct my_struct3{\n//     void a; //  error: variable or field 'a' declared void\n// };\n\nstruct my_struct3 {\n  int a;                // 4 bytes\n  float b;              // 4 bytes\n  char c;               // 1 byte\n  double d;             // 8 bytes\n  int e[3];             // 12 bytes\n  struct my_struct3 *f; // 8 bytes\n  void *g;              // 8 bytes\n};\n\nint main(void) {\n  struct my_struct3 x, y;\n  int z = 42;\n  x.a = 1;\n  x.b = 3.14;\n  x.c = 'a';\n  x.d = 2.718;\n  x.e[0] = 1;\n  x.e[1] = 2;\n  x.e[2] = 3;\n  x.f = &amp;y;\n  x.g = &amp;z;\n\n  printf(\"x.a=%d\\n\", x.a);\n  printf(\"x.b=%f\\n\", x.b);\n  printf(\"x.c=%c\\n\", x.c);\n  printf(\"x.d=%f\\n\", x.d);\n  printf(\"x.e=%d,%d,%d\\n\", x.e[0], x.e[1], x.e[2]);\n  printf(\"x.f points to a struct of size %d bytes\\n\",\n         sizeof(*x.f)); // padding occurs\n  printf(\"x.g=%d\\n\", *((int *)x.g));\n}\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1:</p> <pre><code>$ gcc orthogonality_violation2.c\n$ ./a.out\nx.a=1\nx.b=3.140000\nx.c=a\nx.d=2.718000\nx.e=1,2,3\nx.f points to a struct of size 56 bytes\nx.g=42\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 3: \u0388\u03bd\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03bc\u03b9\u03b1\u03c2 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03c0\u03bf\u03b9\u03bf\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c4\u03cd\u03c0\u03bf\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03b5\u03ba\u03c4\u03cc\u03c2 \u03b1\u03c0\u03cc void \u03ae \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b5\u03af\u03ba\u03c4\u03b7\u03c2 \u03c0\u03c1\u03bf\u03c2 void \u03ae \u03b4\u03b5\u03af\u03ba\u03c4\u03b7\u03c2 \u03c0\u03c1\u03bf\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7.</p> orthogonality_violation3.c<pre><code>#include &lt;stdio.h&gt;\n\nvoid fun(int n) {\n  for (int i = 0; i &lt; n; i++) {\n    printf(\"fun()\\n\");\n  }\n}\n\nint main(void) {\n  int a[5];\n  double b[5];\n  // void c[5]; // error: declaration of 'c' as array of voids\n  // void (d[5])(int); // error: declaration of 'd' as array of functions\n  void *e[5];\n  void (*f[5])(int);\n\n  int x = 42;\n  e[0] = &amp;x;\n  printf(\"%d\\n\", *((int *)e[0]));\n\n  f[0] = &amp;fun;\n  f[0](5);\n}\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1:</p> <pre><code>$ gcc orthogonality_violation3.c\n$ ./a.out\n42\nfun()\nfun()\nfun()\nfun()\nfun()\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 4: \u039f\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03c0\u03b5\u03c1\u03bd\u03bf\u03cd\u03bd \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ae \u03b5\u03ba\u03c4\u03cc\u03c2 \u03b1\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 \u03bf\u03c0\u03cc\u03c4\u03b5 \u03c0\u03b5\u03c1\u03bd\u03bf\u03cd\u03bd \u03bc\u03b5 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac (\u03b5\u03c0\u03b5\u03b9\u03b4\u03ae \u03b7 \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03b4\u03b5\u03af\u03ba\u03c4\u03b7 \u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03cd\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03b7 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03ce\u03c4\u03bf\u03c5 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf\u03c5 \u03c4\u03b7\u03c2 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7\u03c2)</p> orthogonality_violation4.c<pre><code>#include &lt;stdio.h&gt;\n\nvoid fun(int a, int b[], int n) {\n  a = 1;\n  b[0] = 1;\n}\n\nint main(void) {\n  int a = 0;\n  int b[3] = {0, 0, 0};\n  fun(a, b, 3);\n\n  printf(\"%d\\n\", a);\n  printf(\"%d %d %d\\n\", b[0], b[1], b[2]);\n}\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1:</p> <pre><code>$ gcc orthogonality_violation4.c\n$ ./a.out\n0\n1 0 0\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 5: \u0395\u03be\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c0\u03cc \u03c4\u03b1 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae + \u03c3\u03c4\u03b7\u03bd \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 a + b. \u0391\u03bd \u03c4\u03bf a \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b5\u03af\u03ba\u03c4\u03b7\u03c2 \u03c0\u03c1\u03bf\u03c2 \u03bc\u03b9\u03b1 \u03c4\u03b9\u03bc\u03ae float \u03c0\u03bf\u03c5 \u03ba\u03b1\u03c4\u03b1\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 4 bytes \u03c4\u03cc\u03c4\u03b5 \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 b \u03b8\u03b1 \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03b1\u03c3\u03b9\u03b1\u03c3\u03c4\u03b5\u03af \u03b5\u03c0\u03af 4 \u03c0\u03c1\u03b9\u03bd \u03c0\u03c1\u03bf\u03c3\u03c4\u03b5\u03b8\u03b5\u03af \u03c3\u03c4\u03bf a.</p> orthogonality_violation5.c<pre><code>#include &lt;stdio.h&gt;\n\nvoid fun1(void) {\n  int a = 0;\n  int b = 4;\n  a = a + b;\n  printf(\"%d\\n\", a);\n}\n\nvoid fun2(void) {\n  float array[5] = {1.1, 1.2, 1.3, 1.4, 1.5};\n  float *a = array;\n  printf(\"%p %f\\n\", a, *a);\n\n  int b = 4;\n  a = a + b;\n  printf(\"%p %f\\n\", a, *a);\n}\n\nint main(void) {\n  fun1();\n  fun2();\n}\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1:</p> <pre><code>$ gcc orthogonality_violation5.c\n$ ./a.out\n4\n0x16cea2b90 1.100000\n0x16cea2ba0 1.500000\n</code></pre>"},{"location":"theory_ch1/#_5","title":"\u03a4\u03cd\u03c0\u03bf\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd","text":"<ul> <li>\u039c\u03b9\u03b1 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03cd\u03c0\u03bf \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd Boolean \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b7 \u03b5\u03ba\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03ae \u03ad\u03bd\u03b1\u03bd\u03c4\u03b9 \u03ba\u03ac\u03c0\u03bf\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c0\u03bf\u03c5 \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03cd\u03c0\u03bf \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd Boolean \u03ba\u03b1\u03b9 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03b5\u03b9\u03b4\u03b9\u03ba\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9 \u03c4\u03bf \u03b1\u03bb\u03b7\u03b8\u03ad\u03c2 \u03ae \u03c8\u03b5\u03c5\u03b4\u03ad\u03c2.</li> </ul> boolean1.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  if (1) {\n    printf(\"1 is considered to be true\\n\");\n  }\n\n  if (-1) {\n    printf(\"-1 is considered to be true\\n\");\n  }\n\n  if (3.14) {\n    printf(\"3.14 is considered to be true\\n\");\n  }\n\n  if (-3.14) {\n    printf(\"-3.14 is considered to be true\\n\");\n  }\n\n  if ('a') {\n    printf(\"a is considered to be true\\n\");\n  }\n\n  if (!0) {\n    printf(\"0 is considered to be false\\n\");\n  }\n\n  if (!0.0) {\n    printf(\"0.0 is considered to be false\\n\");\n  }\n\n  if (!0.0f) {\n    printf(\"0.0f is considered to be false\\n\");\n  }\n\n  if (!NULL) {\n    printf(\"NULL is considered to be false\\n\");\n  }\n}\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1:</p> <pre><code>$ gcc boolean1.c\n$ ./a.out\n1 is considered to be true\n-1 is considered to be true\n3.14 is considered to be true\n-3.14 is considered to be true\na is considered to be true\n0 is considered to be false\n0.0 is considered to be false\n0.0f is considered to be false\nNULL is considered to be false\n</code></pre> boolean2.c<pre><code>#include &lt;stdbool.h&gt;\n#include &lt;stdio.h&gt;\n\nint main(void) {\n  if (true) {\n    printf(\"true value is supported in C99 or later\\n\");\n  }\n  if (!false) {\n    printf(\"false value is supported in C99 or later\\n\");\n  }\n}\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1:</p> <pre><code>$ gcc boolean2.c\n$ ./a.out\ntrue value is supported in C99 or later\nfalse value is supported in C99 or later\n</code></pre>"},{"location":"theory_ch1/#_6","title":"\u03a3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd","text":"<ul> <li>H Ada \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03c4\u03bf end if \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03af\u03c3\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03b4\u03bf\u03bc\u03ae \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03bf end loop \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03af\u03c3\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03b4\u03bf\u03bc\u03ae \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7\u03c2. \u0391\u03bd\u03c4\u03af\u03b8\u03b5\u03c4\u03b1 \u03b7 C \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03c4\u03b7\u03bd \u03b1\u03b3\u03ba\u03cd\u03bb\u03b7 } \u03b3\u03b9\u03b1 \u03c4\u03bf \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03bc\u03c0\u03bb\u03bf\u03ba \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd. \u03a0\u03bf\u03b9\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf;</li> <li>\u0397 Fortran 95 \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03b5\u03b9 \u03c4\u03bf\u03bd \u03bf\u03c1\u03b9\u03c3\u03bc\u03cc \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03bc\u03b5 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03cc\u03bd\u03bf\u03bc\u03b1 \u03bc\u03b5 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03bc\u03b5 \u03b5\u03b9\u03b4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03af\u03b1 \u03c3\u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03cc\u03c0\u03c9\u03c2 \u03bf\u03b9 Do \u03ba\u03b1\u03b9 End. \u0397 C \u03b4\u03b5\u03bd \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03b5\u03b9 \u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03cc\u03c0\u03c9\u03c2 \u03b7 for, if \u03ba\u03bb\u03c0 \u03ba\u03b1\u03b9 \u03c4\u03b9\u03c2 \u03b8\u03b5\u03c9\u03c1\u03b5\u03af \u03b4\u03b5\u03c3\u03bc\u03b5\u03c5\u03bc\u03ad\u03bd\u03b5\u03c2. \u03a0\u03bf\u03b9\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03bf;</li> </ul>"},{"location":"theory_ch1/#_7","title":"\u0395\u03ba\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1","text":"<ul> <li>\u0397 Ada \u03b4\u03b9\u03b1\u03b8\u03ad\u03c4\u03b5\u03b9 \u03c4\u03bf\u03c5\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2 and then \u03ba\u03b1\u03b9 \u03bfr else \u03c0\u03bf\u03c5 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd \u03c0\u03c1\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c5\u03c2 \u03c3\u03cd\u03bd\u03c4\u03bf\u03bc\u03b7\u03c2 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 \u03bc\u03b9\u03b1\u03c2 boolean \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7\u03c2 <ul> <li>https://en.wikibooks.org/wiki/Ada_Programming/Keywords/and#Boolean_shortcut_operator </li> <li>https://en.wikibooks.org/wiki/Ada_Programming/Keywords/or#Boolean_shortcut_operator</li> </ul> </li> </ul>"},{"location":"theory_ch1/#_8","title":"\u0388\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd","text":"<ul> <li>\u039f \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \"\u03b1\u03ba\u03c1\u03b9\u03b2\u03cc\u03c2\" \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c4\u03b9\u03bc\u03ac\u03c4\u03b1\u03b9 \u03bf \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7.</li> <li>linters \u03c4\u03b7\u03c2 C <ul> <li>https://invisible-island.net/personal/lint-tools.html#tool_lint</li> <li>http://cppcheck.sourceforge.net/</li> </ul> </li> </ul>"},{"location":"theory_ch1/#_9","title":"\u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd","text":"<p>\u039c\u03b5 \u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd (exceptions) \u03b4\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03bf\u03c5 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03c6\u03b1\u03bb\u03bc\u03ac\u03c4\u03c9\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b4\u03b9\u03bf\u03c1\u03b8\u03c9\u03c4\u03b9\u03ba\u03ad\u03c2 \u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03b9\u03c2. \u039c\u03b5 \u03c4\u03bf\u03bd \u03c4\u03c1\u03cc\u03c0\u03bf \u03b1\u03c5\u03c4\u03cc \u03b1\u03c5\u03be\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03b1\u03be\u03b9\u03bf\u03c0\u03b9\u03c3\u03c4\u03af\u03b1 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2.</p> <ul> <li>\u039f\u03b9 C++, C#, Java, Python \u03ba.\u03b1. \u03ad\u03c7\u03bf\u03c5\u03bd \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd.</li> <li>\u0397 C \u03b4\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03cc \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd.</li> </ul>"},{"location":"theory_ch1/#_10","title":"\u03a8\u03b5\u03c5\u03b4\u03c9\u03bd\u03c5\u03bc\u03af\u03b1","text":"<p>\u0397 \u03c8\u03b5\u03c5\u03b4\u03c9\u03bd\u03c5\u03bc\u03af\u03b1 \u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b4\u03cd\u03bf \u03ae \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03c9\u03bd \u03bf\u03bd\u03bf\u03bc\u03ac\u03c4\u03c9\u03bd \u03b3\u03b9\u03b1 \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b2\u03c1\u03af\u03c3\u03ba\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03af\u03b4\u03b9\u03b1 \u03b8\u03ad\u03c3\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2.</p> <p>\u03a8\u03b5\u03c5\u03b4\u03ce\u03bd\u03c5\u03bc\u03b1 (aliases) \u03c3\u03c4\u03b7 C</p> alias.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  int x = 10;\n  int *p = &amp;x; // \u03c4\u03bf *p \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c8\u03b5\u03c5\u03b4\u03ce\u03bd\u03c5\u03bc\u03bf \u03b3\u03b9\u03b1 \u03c4\u03bf x\n  *p = 20;     // \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 x \u03b1\u03bb\u03bb\u03ac\u03b6\u03b5\u03b9\n  printf(\"x = %d\\n\", x);\n  printf(\"*p = %d\\n\", *p);\n}\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1:</p> <pre><code>$ gcc alias.c\n$ ./a.out\nx = 20\n*p = 20\n</code></pre> <p>\u03a8\u03b5\u03c5\u03b4\u03ce\u03bd\u03c5\u03bc\u03b1 (aliases) \u03c3\u03c4\u03b7 C++</p> alias.cpp<pre><code>#include &lt;iostream&gt;\n\nint main() {\n  int x = 10;\n  int &amp;y = x;\n  y = 20; // \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 x \u03b1\u03bb\u03bb\u03ac\u03b6\u03b5\u03b9\n  std::cout &lt;&lt; \"x=\" &lt;&lt; x &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"y=\" &lt;&lt; y &lt;&lt; std::endl;\n}\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1:</p> <pre><code>$ g++ alias.cpp\n$ ./a.out\nx=20\ny=20\n</code></pre> <p>\u03a8\u03b5\u03c5\u03b4\u03ce\u03bd\u03c5\u03bc\u03b1 (aliases) \u03c3\u03c4\u03b7\u03bd Python</p> <ul> <li>alias.ipynb</li> </ul>"},{"location":"theory_ch1/#14","title":"1.4 \u0395\u03c0\u03b9\u03c1\u03c1\u03bf\u03ad\u03c2 \u03c3\u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u039f\u03b9 \u03c0\u03bb\u03ad\u03bf\u03bd \u03c3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03bf\u03af \u03c0\u03b1\u03c1\u03ac\u03b3\u03bf\u03bd\u03c4\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b7\u03c1\u03b5\u03ac\u03b6\u03bf\u03c5\u03bd \u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b1\u03c1\u03c7\u03b9\u03c4\u03b5\u03ba\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae \u03c4\u03c9\u03bd \u0397/\u03a5 \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03bc\u03b5\u03b8\u03bf\u03b4\u03bf\u03bb\u03bf\u03b3\u03af\u03b5\u03c2 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd.</p>"},{"location":"theory_ch1/#141","title":"1.4.1 \u0391\u03c1\u03c7\u03b9\u03c4\u03b5\u03ba\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ce\u03bd","text":"<ul> <li>\u0397 \u03b1\u03c1\u03c7\u03b9\u03c4\u03b5\u03ba\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae von Neumann (\u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c4\u03b7\u03bd \u03af\u03b4\u03b9\u03b1 \u03bc\u03bd\u03ae\u03bc\u03b7, \u03be\u03b5\u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03ae \u039a\u03b5\u03bd\u03c4\u03c1\u03b9\u03ba\u03ae \u039c\u03bf\u03bd\u03ac\u03b4\u03b1 \u0395\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03b1\u03c0\u03cc \u03c4\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7) \u03b5\u03c0\u03b7\u03c1\u03ad\u03b1\u03c3\u03b5 \u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03c4\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03ba\u03b1\u03b9 \u03bf\u03b4\u03ae\u03b3\u03b7\u03c3\u03b5 \u03c3\u03c4\u03b9\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 (Fortran, C, C++, Java, Python).<ul> <li>\u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u2192 \u03ba\u03b5\u03bb\u03b9\u03ac \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2</li> <li>\u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7 \u2192 \u03c0\u03c1\u03bf\u03c3\u03ba\u03cc\u03bc\u03b9\u03c3\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03b1\u03c0\u03cc \u03c4\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7 \u03c3\u03c4\u03bf\u03bd \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae, \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1, \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd \u03c3\u03c4\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7</li> <li>\u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7 \u2192 \u03bc\u03ad\u03c3\u03c9 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03b4\u03b9\u03b1\u03ba\u03bb\u03ac\u03b4\u03c9\u03c3\u03b7\u03c2</li> </ul> </li> <li>\u0397 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c3\u03b5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae\u03c2 \u03c3\u03b5 \u03ad\u03bd\u03b1\u03bd \u0397/\u03a5 \u03b1\u03c1\u03c7\u03b9\u03c4\u03b5\u03ba\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae\u03c2 von Neumann \u03c3\u03c5\u03bc\u03b2\u03b1\u03af\u03bd\u03b5\u03b9 \u03b5\u03ba\u03c4\u03b5\u03bb\u03ce\u03bd\u03c4\u03b1\u03c2 \u03ba\u03cd\u03ba\u03bb\u03bf\u03c5\u03c2 \u03c0\u03c1\u03bf\u03c3\u03ba\u03cc\u03bc\u03b9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd. </li> <li>\u0397 \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03ba\u03b1\u03b8\u03af\u03c3\u03c4\u03b1\u03c4\u03b1\u03b9 \u03b5\u03cd\u03ba\u03bf\u03bb\u03b7 \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bb\u03bf\u03cd\u03c3\u03c4\u03b5\u03c1\u03bf\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03c0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7\u03c2 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae.</li> <li>\u039f\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 (\u03c0.\u03c7. Lisp, Scheme, Haskell) \u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03c3\u03b5 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c0\u03b1\u03c1\u03b1\u03c3\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2, \u03b4\u03b5\u03bd \u03ad\u03c7\u03bf\u03c5\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2, \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7\u03c2. \u03a3\u03c5\u03bd\u03b5\u03c0\u03ce\u03c2, \u03b1\u03c0\u03bf\u03bc\u03b1\u03ba\u03c1\u03cd\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b5\u03bd\u03bd\u03bf\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03ac \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b1\u03c1\u03c7\u03b9\u03c4\u03b5\u03ba\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae von Neumann \u03ba\u03b1\u03b9 \u03c4\u03bf \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c2 \u03b1\u03c5\u03c4\u03cc \u03c4\u03b9\u03c2 \u03ba\u03b1\u03b8\u03b9\u03c3\u03c4\u03ac \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03bf\u03b4\u03bf\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b5\u03c6\u03cc\u03c3\u03bf\u03bd \u03b5\u03ba\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ad\u03c2 \u03b1\u03c1\u03c7\u03b9\u03c4\u03b5\u03ba\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae\u03c2 von Neumann.</li> </ul>"},{"location":"theory_ch1/#142","title":"1.4.2 \u039c\u03b5\u03b8\u03bf\u03b4\u03bf\u03bb\u03bf\u03b3\u03af\u03b5\u03c2 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<ul> <li>\u0394\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03bf\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 </li> <li>\u03a3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03cc\u03c2 \u03b1\u03c0\u03cc \u03c0\u03ac\u03bd\u03c9 \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b1 \u03ba\u03ac\u03c4\u03c9</li> <li>\u03a0\u03c1\u03bf\u03bf\u03b4\u03b5\u03c5\u03c4\u03b9\u03ba\u03ae \u03b5\u03ba\u03bb\u03ad\u03c0\u03c4\u03c5\u03bd\u03c3\u03b7</li> <li>\u0391\u03c6\u03b7\u03c1\u03b7\u03bc\u03ad\u03bd\u03bf\u03b9 \u03a4\u03cd\u03c0\u03bf\u03b9 \u0394\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd</li> <li>\u0391\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 (\u03b1\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd, \u03b5\u03bd\u03b8\u03c5\u03bb\u03ac\u03ba\u03c9\u03c3\u03b7 \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2, \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1, \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 \u03bc\u03b5\u03b8\u03cc\u03b4\u03c9\u03bd)</li> </ul>"},{"location":"theory_ch1/#15","title":"1.5 \u039a\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03af\u03b5\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u039f\u03b9 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03af\u03b5\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03af\u03bd\u03b1\u03b9:</p> <ul> <li>\u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 (C, C++, C#, Java, Python, ...)</li> <li>\u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 (Lisp, Scheme, F#, Haskell, ...)</li> <li>\u03bb\u03bf\u03b3\u03b9\u03ba\u03ad\u03c2 (Prolog, ...)</li> <li>\u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03b5\u03af\u03c2 (C++, Java, C#, ...)</li> <li>\u03c3\u03b5\u03bd\u03b1\u03c1\u03af\u03c9\u03bd (Python, Perl, JavaScript, Ruby, ...)</li> <li>\u03c5\u03b2\u03c1\u03b9\u03b4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c3\u03b7\u03bc\u03b5\u03af\u03c9\u03c3\u03b7\u03c2/\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd (JSPTL, XSLT, ...)</li> </ul>"},{"location":"theory_ch1/#16","title":"1.6 \u03a3\u03c5\u03bc\u03b2\u03b9\u03b2\u03b1\u03c3\u03bc\u03bf\u03af \u03c3\u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u039a\u03b1\u03c4\u03ac \u03c4\u03bf \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03cc \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03c0\u03ac\u03c1\u03b1 \u03c0\u03bf\u03bb\u03bb\u03ac \u03b1\u03bd\u03c4\u03b9\u03ba\u03c1\u03bf\u03c5\u03cc\u03bc\u03b5\u03bd\u03b1 \u03ba\u03c1\u03b9\u03c4\u03ae\u03c1\u03b9\u03b1. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1:</p> <ul> <li>\u03b1\u03be\u03b9\u03bf\u03c0\u03b9\u03c3\u03c4\u03af\u03b1 \u03ad\u03bd\u03b1\u03bd\u03c4\u03b9 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b7\u03c4\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 (\u03c0.\u03c7. \u03b7 Java \u03b5\u03bb\u03ad\u03b3\u03c7\u03b5\u03b9 \u03c4\u03b7 \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7 \u03b5\u03bd\u03c4\u03cc\u03c2 \u03bf\u03c1\u03af\u03c9\u03bd \u03c3\u03b5 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 \u03b5\u03bd\u03ce \u03b7 C \u03ba\u03b1\u03b9 \u03b7 C++ \u03b3\u03b9\u03b1 \u03bb\u03cc\u03b3\u03bf\u03c5\u03c2 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b7\u03c4\u03b1\u03c2 \u03b4\u03b5\u03bd \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd \u03c4\u03ad\u03c4\u03bf\u03b9\u03bf\u03c5\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5\u03c2)</li> <li>\u03b1\u03be\u03b9\u03bf\u03c0\u03b9\u03c3\u03c4\u03af\u03b1 \u03ad\u03bd\u03b1\u03bd\u03c4\u03b9 \u03b5\u03c5\u03c7\u03ad\u03c1\u03b5\u03b9\u03b1\u03c2 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03ce\u03bd (\u03c0.\u03c7. \u03b7 Java \u03b4\u03b5\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03b4\u03b5\u03af\u03ba\u03c4\u03b5\u03c2 \u03b5\u03bd\u03ce \u03bf\u03b9 C \u03ba\u03b1\u03b9 \u03b7 C++ \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd)</li> <li>\u03c3\u03c5\u03bc\u03c0\u03c5\u03ba\u03bd\u03c9\u03bc\u03ad\u03bd\u03b7 \u03c3\u03cd\u03bd\u03c4\u03b1\u03be\u03b7 \u03ad\u03bd\u03b1\u03bd\u03c4\u03b9 \u03b5\u03c5\u03ba\u03bf\u03bb\u03af\u03b1\u03c2 \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7\u03c2 (\u03c0.\u03c7. \u03b7 APL \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03c0\u03bf\u03bb\u03bb\u03bf\u03cd\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2 \u03b3\u03b9\u03b1 \u03c0\u03c1\u03ac\u03be\u03b5\u03b9\u03c2 \u03c3\u03b5 \u03c0\u03af\u03bd\u03b1\u03ba\u03b5\u03c2 \u03b1\u03bb\u03bb\u03ac \u03c4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03bf\u03c5\u03bd \u03b4\u03c5\u03c3\u03ba\u03bf\u03bb\u03af\u03b5\u03c2 \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7\u03c2)</li> </ul>"},{"location":"theory_ch1/#17","title":"1.7 \u039c\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2","text":""},{"location":"theory_ch1/#171","title":"1.7.1 \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7","text":"<ul> <li>\u03a4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5\u03c4\u03b1\u03c6\u03c1\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1 \u03b5\u03ba\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b1\u03c4\u03b1.<ol> <li>\u03c0\u03b7\u03b3\u03b1\u03af\u03bf\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u2192 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03ae\u03c2 \u2192 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b5\u03c2 </li> <li>\u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b5\u03c2 \u2192 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03ae\u03c2 \u2192 \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2</li> <li>\u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u2192 \u03b3\u03b5\u03bd\u03bd\u03ae\u03c4\u03c1\u03b9\u03b1 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 (\u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03ae\u03c2 + \u03b2\u03b5\u03bb\u03c4\u03b9\u03c3\u03c4\u03bf\u03c0\u03bf\u03b9\u03b7\u03c4\u03ae\u03c2) \u2192 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03bf\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2</li> <li>\u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03bf\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u2192 \u03b3\u03b5\u03bd\u03bd\u03ae\u03c4\u03c1\u03b9\u03b1 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u2192 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae\u03c2</li> </ol> </li> <li>\u0397 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03c4\u03bf\u03bd \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03c3\u03c5\u03bc\u03b2\u03cc\u03bb\u03c9\u03bd \u03c0\u03bf\u03c5 \u03c3\u03c5\u03bc\u03c0\u03bb\u03b7\u03c1\u03ce\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03cc \u03ba\u03b1\u03b9 \u03c4\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03ae \u03b5\u03bd\u03ce \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03ae \u03ba\u03b1\u03b9 \u03c4\u03b7 \u03b3\u03b5\u03bd\u03bd\u03ae\u03c4\u03c1\u03b9\u03b1 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1.</li> <li>\u0397 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b1\u03c1\u03ac\u03b3\u03b5\u03b9 \u03bf \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ae\u03c2 \u03c3\u03c5\u03bd\u03ae\u03b8\u03c9\u03c2 \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03b5 \u03b8\u03ad\u03c3\u03b7 \u03bd\u03b1 \u03b5\u03ba\u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03b5\u03af \u03b1\u03c0\u03b5\u03c5\u03b8\u03b5\u03af\u03b1\u03c2 \u03b1\u03bb\u03bb\u03ac \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c3\u03c5\u03bd\u03b4\u03b5\u03b8\u03b5\u03af \u03bc\u03b5 \u03ac\u03bb\u03bb\u03b1 \u03c4\u03bc\u03ae\u03bc\u03b1\u03c4\u03b1 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c4\u03bf\u03c5 \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 (\u03c0.\u03c7. \u03b3\u03b9\u03b1 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf/\u03ad\u03be\u03bf\u03b4\u03bf) \u03ae \u03bc\u03b5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c4\u03bf\u03c5 \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7 \u03c0\u03bf\u03c5 \u03ad\u03c7\u03bf\u03c5\u03bd \u03ae\u03b4\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03b5\u03af \u03ba\u03b1\u03b9 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03bf\u03c0\u03bf\u03b8\u03b5\u03c4\u03b7\u03b8\u03b5\u03af \u03c3\u03b5 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b5\u03c2 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b1 \u03c0\u03bf\u03c5 \u03bb\u03ad\u03b3\u03b5\u03c4\u03b1\u03b9 \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7.</li> <li>\u03a4\u03bf \u03b1\u03b4\u03b9\u03ad\u03be\u03bf\u03b4\u03bf von Neumann \u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03cc\u03c1\u03b9\u03bf \u03c4\u03b1\u03c7\u03cd\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c0\u03bf\u03c5 \u03b8\u03ad\u03c4\u03b5\u03b9 \u03b7 \u03c3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 \u03b1\u03bd\u03ac\u03bc\u03b5\u03c3\u03b1 \u03c3\u03c4\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae.</li> <li>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bc\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ae: C, C++, Fortran, ...</li> </ul>"},{"location":"theory_ch1/#172","title":"1.7.2 \u039a\u03b1\u03b8\u03b1\u03c1\u03ae \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03af\u03b1","text":"<ul> <li>\u03a3\u03c4\u03b7\u03bd \u03ba\u03b1\u03b8\u03b1\u03c1\u03ae \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03af\u03b1 \u03b7 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03ad\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03c0\u03b1\u03c1\u03ad\u03c7\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03b5\u03b9\u03ba\u03bf\u03bd\u03b9\u03ba\u03ae \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1.</li> <li>\u039f \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03ad\u03b1\u03c2 \u03b5\u03ba\u03c4\u03b5\u03bb\u03b5\u03af \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03c0\u03c1\u03bf\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1, \u03b4\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf\u03c2 \u03cc\u03c0\u03bf\u03c5 \u03c7\u03c1\u03b5\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b5\u03af\u03c3\u03bf\u03b4\u03bf.</li> <li>\u0397 \u03b5\u03ba\u03c3\u03c6\u03b1\u03bb\u03bc\u03ac\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03ba\u03b1\u03b8\u03af\u03c3\u03c4\u03b1\u03c4\u03b1\u03b9 \u03b5\u03c5\u03ba\u03bf\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7.</li> <li>\u0397 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b7\u03c4\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c7\u03b1\u03bc\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7 \u03b1\u03c0\u03cc \u03c4\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03ba\u03b1\u03b8\u03ce\u03c2 \u03c7\u03c1\u03b5\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bd\u03b1 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03b1\u03c0\u03bf\u03ba\u03c9\u03b4\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03ba\u03ac\u03b8\u03b5 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2. \u0397 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b1 \u03b1\u03c5\u03c4\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03c3\u03c5\u03bd\u03b8\u03b5\u03c4\u03cc\u03c4\u03b5\u03c1\u03b7 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03bf\u03b4\u03b7\u03b3\u03b9\u03ce\u03bd \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae\u03c2.</li> <li>\u039a\u03ac\u03b8\u03b5 \u03c6\u03bf\u03c1\u03ac \u03c0\u03bf\u03c5 \u03b5\u03ba\u03c4\u03b5\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03ba\u03c9\u03b4\u03b9\u03ba\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03be\u03b1\u03bd\u03ac. </li> <li>\u0391\u03c0\u03b1\u03b9\u03c4\u03b5\u03af \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03bf \u03c7\u03ce\u03c1\u03bf \u03ba\u03b1\u03b8\u03ce\u03c2 \u03b5\u03ba\u03c4\u03cc\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf \u03c0\u03b7\u03b3\u03b1\u03af\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ba\u03b1\u03b9 \u03bf \u03c0\u03af\u03bd\u03b1\u03ba\u03b1\u03c2 \u03c3\u03c5\u03bc\u03b2\u03cc\u03bb\u03c9\u03bd.</li> <li>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bc\u03b5 \u03ba\u03b1\u03b8\u03b1\u03c1\u03cc \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03c5\u03c4\u03ae: JavaScript, PHP, ...</li> </ul>"},{"location":"theory_ch1/#173","title":"1.7.3 \u03a5\u03b2\u03c1\u03b9\u03b4\u03b9\u03ba\u03ac \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2","text":"<ul> <li>\u0391\u03c0\u03bf\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd \u03c3\u03c5\u03bc\u03b2\u03b9\u03b2\u03b1\u03c3\u03c4\u03b9\u03ba\u03ae \u03bb\u03cd\u03c3\u03b7 \u03b1\u03bd\u03ac\u03bc\u03b5\u03c3\u03b1 \u03c3\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03ba\u03b1\u03b8\u03b1\u03c1\u03bf\u03cd\u03c2 \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03c5\u03c4\u03ad\u03c2. </li> <li>\u03a4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5\u03c4\u03b1\u03c6\u03c1\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b5\u03cd\u03ba\u03bf\u03bb\u03b7 \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03af\u03b1.</li> <li>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bc\u03b5 \u03c5\u03b2\u03c1\u03b9\u03b4\u03b9\u03ba\u03cc \u03c3\u03cd\u03c3\u03c4\u03b7\u03bc\u03b1 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2: Perl, ...</li> </ul>"},{"location":"theory_ch1/#jit-just-in-time","title":"\u03a3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 JIT (Just In Time)","text":"<p>\u0388\u03bd\u03b1 \u03c3\u03cd\u03c3\u03c4\u03b7\u03bc\u03b1 JIT \u03b1\u03c1\u03c7\u03b9\u03ba\u03ac \u03bc\u03b5\u03c4\u03b1\u03c6\u03c1\u03ac\u03b6\u03b5\u03b9 \u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c3\u03b5 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1. \u03a3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1, \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03af\u03b6\u03b5\u03b9 \u03c4\u03b9\u03c2 \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5\u03c2 \u03c4\u03b7\u03c2 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c3\u03b5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae\u03c2 \u03cc\u03c4\u03b1\u03bd \u03b5\u03ba\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9, \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bc\u03b5\u03bb\u03bb\u03bf\u03bd\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c4\u03b5\u03bb\u03ad\u03c3\u03b5\u03b9\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b5\u03c1\u03b5\u03c2. \u03a3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 JIT \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7 Java \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b9\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 .NET (C#, F#, VB.NET, JScript, C++/CLI)</p>"},{"location":"theory_ch1/#174","title":"1.7.4 \u03a0\u03c1\u03bf\u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ad\u03c2","text":"<p>\u039f \u03c0\u03c1\u03bf\u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03c1\u03b9\u03bd \u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03b5\u03af. </p>"},{"location":"theory_ch1/#c_1","title":"\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c0\u03c1\u03bf\u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae \u03c4\u03b7\u03c2 C","text":"<p>\u0395\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03c0\u03c1\u03bf\u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae: #include, #define, #ifdef, #ifndef, #else, #elif, #endif, #pragma</p> preprocessor1.c<pre><code>#include &lt;stdio.h&gt;\n\n#define max(A, B) ((A) &gt; (B) ? (A) : (B)) // \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03c0\u03c1\u03bf\u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2\n\nint main(void) {\n  double x, y = 2.7, z = 13.1;\n  x = max(2 * y, z / 1.7);\n  printf(\"%.f\\n\", x);\n}\n</code></pre> <p>\u0391\u03bd \u03b4\u03bf\u03b8\u03b5\u03af \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 (\u03bc\u03b5 \u03c4\u03bf\u03bd \u03b4\u03b9\u03b1\u03ba\u03cc\u03c0\u03c4\u03b7 -E):</p> <pre><code>$ gcc -E preprocessor1.c\n</code></pre> <p>\u03c4\u03cc\u03c4\u03b5 \u03b7 \u03ad\u03be\u03bf\u03b4\u03bf\u03c2 \u03b8\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9:</p> <pre><code>...\nint main(void) {\n  double x, y=2.7, z=13.1;\n  x = ((2*y)&gt;(z/1.7) ? (2*y):(z/1.7));\n}\n</code></pre>"},{"location":"theory_ch1/#18","title":"1.8 \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03b1","text":"<p>\u0388\u03bd\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03b5\u03c1\u03b3\u03b1\u03bb\u03b5\u03af\u03c9\u03bd \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7 \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03b9\u03ba\u03bf\u03cd.</p>"},{"location":"theory_ch1/#editors","title":"Editors","text":"<ul> <li>Microsoft Visual Studio Code</li> <li>Notepad++</li> <li>Sublime Text</li> <li>vim</li> <li>emacs</li> </ul>"},{"location":"theory_ch1/#ides","title":"IDEs","text":"<ul> <li>Microsoft Visual Studio (C#, C, C++, ...)</li> <li>Jetbrains<ul> <li>IntelliJ (Java, Kotlin, Scala, Groovy)</li> <li>PyCharm (Python)</li> <li>Clion (C, C++)</li> </ul> </li> <li>Eclipse (Java, C, C++, ...)</li> <li>NetBeans (Java, C, C++, ...)</li> <li>Codelite (C, C++, PHP, JavaScript)</li> <li>Code::Blocks (C, C++, Fortran)</li> <li>Xcode (Objective-C, C, C++, Swift)</li> </ul>"},{"location":"theory_ch12/","title":"12. \u0391\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2","text":""},{"location":"theory_ch12/#121","title":"12.1 \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae","text":"<ul> <li>\u039f \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03ba\u03c5\u03c1\u03b9\u03ac\u03c1\u03c7\u03bf\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03ae\u03bc\u03b5\u03c1\u03b1. \u03a3\u03c7\u03b5\u03b4\u03cc\u03bd \u03c3\u03b5 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03c3\u03b9\u03bc\u03bf\u03cd \u03ad\u03c7\u03bf\u03c5\u03bd \u03b5\u03bc\u03c6\u03b1\u03bd\u03b9\u03c3\u03c4\u03b5\u03af \u03b4\u03b9\u03ac\u03bb\u03b5\u03ba\u03c4\u03bf\u03b9 \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c4\u03bf\u03bd \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc.</li> <li>\u0391\u03bc\u03b9\u03b3\u03ce\u03c2 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1: Smalltalk</li> <li>\u0391\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2: Java, C#, Ruby</li> <li>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c0\u03bf\u03bb\u03bb\u03ac \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03c5\u03c0\u03bf\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 (\u03c0.\u03c7. \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc, \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc): C++, Python, Objective-C</li> <li>\u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc: CLOS, OCaml, F#, Scala</li> </ul>"},{"location":"theory_ch12/#122","title":"12.2 \u0391\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2","text":"<p>\u0397 \u03c0\u03c1\u03ce\u03c4\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03ae\u03c4\u03b1\u03bd \u03b7 SIMULA 67.</p> <p>\u039c\u03b9\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03c1\u03b9\u03b1 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ac \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac:</p> <ol> <li>\u0391\u03c6\u03b7\u03c1\u03b7\u03bc\u03ad\u03bd\u03bf\u03b9 \u03a4\u03cd\u03c0\u03bf\u03b9 \u0394\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd</li> <li>\u039a\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1</li> <li>\u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03ba\u03bb\u03ae\u03c3\u03b5\u03c9\u03bd \u03bc\u03b5\u03b8\u03cc\u03b4\u03c9\u03bd \u03c3\u03b5 \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5\u03c2</li> </ol>"},{"location":"theory_ch12/#1222","title":"12.2.2 \u039a\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1","text":"<p>\u0395\u03c0\u03b1\u03bd\u03b1\u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03b9\u03ba\u03bf\u03cd \u03b3\u03b9\u03b1 \u03b1\u03cd\u03be\u03b7\u03c3\u03b7 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2. \u0397 \u03b5\u03c0\u03b1\u03bd\u03b1\u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 \u0391\u03c6\u03b7\u03c1\u03b7\u03bc\u03ad\u03bd\u03bf\u03c5\u03c2 \u03a4\u03cd\u03c0\u03bf\u03c5\u03c2 \u0394\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b7\u03bd \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1.</p> <p>\u0392\u03b1\u03c3\u03b9\u03ba\u03ae \u03bf\u03c1\u03bf\u03bb\u03bf\u03b3\u03af\u03b1:</p> <ul> <li>\u039a\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2</li> <li>\u0391\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03ae \u03c3\u03c4\u03b9\u03b3\u03bc\u03b9\u03cc\u03c4\u03c5\u03c0\u03b1 \u03ba\u03bb\u03ac\u03c3\u03b5\u03c9\u03bd</li> <li>\u03a5\u03c0\u03bf\u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ae \u03c0\u03b1\u03c1\u03b1\u03b3\u03cc\u03bc\u03b5\u03bd\u03b5\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ae \u03b8\u03c5\u03b3\u03b1\u03c4\u03c1\u03b9\u03ba\u03ad\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2</li> <li>\u03a5\u03c0\u03b5\u03c1\u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ae \u03b3\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2</li> <li>\u0399\u03b4\u03b9\u03c9\u03c4\u03b9\u03ba\u03ac, \u03b4\u03b7\u03bc\u03cc\u03c3\u03b9\u03b1 \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03c4\u03b5\u03c5\u03bc\u03ad\u03bd\u03b1 \u03bc\u03ad\u03bb\u03b7</li> <li>\u039c\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03c3\u03c4\u03b9\u03b3\u03bc\u03b9\u03bf\u03c4\u03cd\u03c0\u03c9\u03bd \u03ba\u03b1\u03b9 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03ba\u03bb\u03ac\u03c3\u03b5\u03c9\u03bd</li> <li>\u039c\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03b5\u03c2 \u03c3\u03c4\u03b9\u03b3\u03bc\u03b9\u03bf\u03c4\u03cd\u03c0\u03c9\u03bd \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b5\u03c9\u03bd</li> <li>\u039c\u03b7\u03bd\u03cd\u03bc\u03b1\u03c4\u03b1 (\u03ba\u03bb\u03ae\u03c3\u03b5\u03b9\u03c2 \u03bc\u03b5\u03b8\u03cc\u03b4\u03c9\u03bd)</li> <li>\u03a0\u03c1\u03c9\u03c4\u03cc\u03ba\u03bf\u03bb\u03bb\u03bf \u03bc\u03b7\u03bd\u03c5\u03bc\u03ac\u03c4\u03c9\u03bd \u03ae \u03b4\u03b9\u03b5\u03c0\u03b1\u03c6\u03ae \u03bc\u03b7\u03bd\u03c5\u03bc\u03ac\u03c4\u03c9\u03bd</li> <li>\u03a0\u03b1\u03c1\u03b1\u03ba\u03b1\u03bc\u03c6\u03b8\u03b5\u03af\u03c3\u03b5\u03c2 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9</li> <li>\u0391\u03c0\u03bb\u03ae \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1, \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03ae \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1</li> </ul>"},{"location":"theory_ch12/#1223-dynamic-binding","title":"12.2.3 \u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 (dynamic binding)","text":"<ul> <li>\u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03bc\u03b7\u03bd\u03c5\u03bc\u03ac\u03c4\u03c9\u03bd \u03c3\u03b5 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 \u03bc\u03b5\u03b8\u03cc\u03b4\u03c9\u03bd (\u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03b1\u03c0\u03bf\u03c3\u03c4\u03bf\u03bb\u03ae - dynamic dispatch), \u03c0\u03bf\u03bb\u03c5\u03bc\u03bf\u03c1\u03c6\u03b9\u03ba\u03ad\u03c2 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ad\u03c2</li> <li>\u0391\u03c6\u03b7\u03c1\u03b7\u03bc\u03ad\u03bd\u03b5\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2 (\u03b4\u03b5\u03bd \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03bf\u03cd\u03bd \u03c3\u03c4\u03b9\u03b3\u03bc\u03b9\u03cc\u03c4\u03c5\u03c0\u03b1)</li> <li>\u0391\u03c6\u03b7\u03c1\u03b7\u03bc\u03ad\u03bd\u03b5\u03c2 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 (\u03b4\u03b5\u03bd \u03ad\u03c7\u03bf\u03c5\u03bd \u03c3\u03ce\u03bc\u03b1 \u03c0\u03b1\u03c1\u03ac \u03bc\u03cc\u03bd\u03bf \u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c4\u03bf \u03c0\u03c1\u03c9\u03c4\u03cc\u03ba\u03bf\u03bb\u03bb\u03bf \u03c4\u03b7\u03c2 \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5) - \u03c3\u03c4\u03b7 C++ \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 pure virtual functions</li> </ul> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7\u03c2 \u03c3\u03c4\u03b7 C++</p> <p>dynamic_binding_example.cpp<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass A {\npublic:\n  virtual void draw() { cout &lt;&lt; \"Object A: \" &lt;&lt; this &lt;&lt; endl; }\n};\n\nclass B : public A {\npublic:\n  void draw() { cout &lt;&lt; \"Object B: \" &lt;&lt; this &lt;&lt; endl; }\n};\n\nint main() {\n  A *r = new A();\n  r-&gt;draw();\n  r = new B();\n  r-&gt;draw();\n}\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ g++ dynamic_binding_example.cpp\n$ ./a.out\nObject A: 0x11de05d30\nObject B: 0x11de05e80\n</code></pre></p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7\u03c2 \u03c3\u03c4\u03b7 Java DynamicBindingExample.java<pre><code>package ch12_2_3_ex1;\n\nclass A {\n    public void draw() {\n        System.out.println(\"Object A: \" + this);\n    }\n}\n\nclass B extends A {\n    public void draw() {\n        System.out.println(\"Object B: \" + this);\n    }\n\n}\n\npublic class DynamicBindingExample {\n    public static void main(String[] args) {\n        A ref = new A();\n        ref.draw();\n        ref = new B();\n        ref.draw();\n    }\n}\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ javac ch12_2_3_ex1/DynamicBindingExample.java\n$ java ch12_2_3_ex1.DynamicBindingExample\nObject A: 0x11de05d30\nObject B: 0x11de05e80\n</code></pre></p>"},{"location":"theory_ch12/#123","title":"12.3 \u0396\u03b7\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd \u03b3\u03b9\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03b5\u03af\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2","text":""},{"location":"theory_ch12/#1231","title":"12.3.1 \u0397 \u03b1\u03c0\u03bf\u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03c9\u03bd \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd","text":"<p>\u0395\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2</p> <ul> <li>\u038c\u03bb\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 (\u03c0.\u03c7. Smalltalk)</li> <li>\u0394\u03b9\u03b1\u03c4\u03ae\u03c1\u03b7\u03c3\u03b7 \u03cc\u03bb\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd \u03b1\u03c0\u03cc \u03c4\u03b7 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ae \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03ba\u03b1\u03b9 \u03c0\u03c1\u03cc\u03c3\u03b8\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03bc\u03bf\u03bd\u03c4\u03ad\u03bb\u03bf\u03c5 \u03c4\u03cd\u03c0\u03bf\u03c5 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd (\u03c0.\u03c7. C++).</li> <li>\u03a7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03cd\u03c0\u03c9\u03bd \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03c5\u03c2 \u03b2\u03b1\u03c3\u03b9\u03ba\u03bf\u03cd\u03c2 \u03b2\u03b1\u03b8\u03bc\u03c9\u03c4\u03bf\u03cd\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2, \u03b1\u03bb\u03bb\u03ac \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03b4\u03bf\u03bc\u03b7\u03bc\u03ad\u03bd\u03c9\u03bd \u03c4\u03cd\u03c0\u03c9\u03bd \u03c9\u03c2 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd (\u03c0.\u03c7. Java)</li> </ul>"},{"location":"theory_ch12/#1232","title":"12.3.2 \u0395\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03c5\u03c0\u03bf\u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c5\u03c0\u03bf\u03c4\u03cd\u03c0\u03bf\u03b9;","text":""},{"location":"theory_ch12/#1233","title":"12.3.3 \u0391\u03c0\u03bb\u03ae \u03ba\u03b1\u03b9 \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03ae \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1","text":"<ul> <li>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03ae \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1: C++, Python</li> <li>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03b1\u03c0\u03bb\u03ae \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1: Java, C#, Smalltalk</li> </ul>"},{"location":"theory_ch12/#1234","title":"12.3.4 \u039a\u03b1\u03c4\u03b1\u03bd\u03bf\u03bc\u03ae \u03ba\u03b1\u03b9 \u03ac\u03c1\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03ba\u03b1\u03c4\u03b1\u03bd\u03bf\u03bc\u03ae\u03c2 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd","text":""},{"location":"theory_ch12/#1235","title":"12.3.5 \u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7","text":""},{"location":"theory_ch12/#1236","title":"12.3.6 \u0388\u03bd\u03b8\u03b5\u03c4\u03b5\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2","text":""},{"location":"theory_ch12/#1237","title":"12.3.7 \u0391\u03c1\u03c7\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd","text":""},{"location":"theory_ch12/#124","title":"12.4 \u03a5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03bf\u03cd\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03b5 \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2","text":""},{"location":"theory_ch12/#1241-smalltalk","title":"12.4.1 Smalltalk","text":""},{"location":"theory_ch12/#1242-c","title":"12.4.2 C++","text":""},{"location":"theory_ch12/#1243-objective-c","title":"12.4.3 Objective C","text":""},{"location":"theory_ch12/#1244-java","title":"12.4.4 Java","text":""},{"location":"theory_ch12/#1245-c","title":"12.4.5 C#","text":""},{"location":"theory_ch12/#1246-ruby","title":"12.4.6 Ruby","text":""},{"location":"theory_ch12/#125","title":"12.5 \u03a5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ce\u03bd \u03b4\u03bf\u03bc\u03ce\u03bd","text":""},{"location":"theory_ch12/#126","title":"12.6 \u0391\u03bd\u03ac\u03ba\u03bb\u03b1\u03c3\u03b7","text":""},{"location":"theory_ch12/#1263-java","title":"12.6.3 \u0391\u03bd\u03ac\u03ba\u03bb\u03b1\u03c3\u03b7 \u03c3\u03c4\u03b7 Java","text":"<p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b1\u03bd\u03ac\u03ba\u03bb\u03b1\u03c3\u03b7\u03c2 \u03c3\u03c4\u03b7 Java ReflectTest.java<pre><code>package ch12_6_3_ex1;\n\nimport java.lang.reflect.*;\n\npublic class ReflectTest {\n    public static void main(String[] args) {\n        Object[] birdList = new Object[3];\n        birdList[0] = new Bird1();\n        birdList[1] = new Bird2();\n        birdList[2] = new Bird3();\n        Reflect.callDraw(birdList[2]);\n        Reflect.callDraw(birdList[0]);\n        Reflect.callDraw(birdList[1]);\n    }\n}\n\nclass Reflect {\n    public static void callDraw(Object birdObj) {\n        Class cls = birdObj.getClass();\n        try {\n            Method method = cls.getMethod(\"draw\");\n            method.invoke(birdObj);\n        } catch (NoSuchMethodException e) {\n            throw new IllegalArgumentException(cls.getName() + \" does not support draw\");\n        } catch (IllegalAccessException e) {\n            throw new IllegalArgumentException(\n                    \"Insufficient accesss permissions to call draw in class \" + cls.getName());\n        } catch (InvocationTargetException e) {\n            throw new RuntimeException();\n        }\n    }\n}\n\nclass Bird1 {\n    public void draw() {\n        System.out.println(\"This is a draw from Bird1\");\n    }\n}\n\nclass Bird2 {\n    public void draw() {\n        System.out.println(\"This is a draw from Bird2\");\n    }\n}\n\nclass Bird3 {\n    public void draw() {\n        System.out.println(\"This is a draw from Bird3\");\n    }\n}\n</code></pre> \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ javac ch12_6_3_ex1/ReflectTest.java\n$ java ch12_6_3_ex1.ReflectTest\nThis is a draw from Bird3\nThis is a draw from Bird1\nThis is a draw from Bird2\n</code></pre></p>"},{"location":"theory_ch14/","title":"14. \u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd \u03ba\u03b1\u03b9 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c3\u03c5\u03bc\u03b2\u03ac\u03bd\u03c4\u03c9\u03bd","text":""},{"location":"theory_ch14/#141","title":"14.1 \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c3\u03c4\u03bf\u03bd \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd","text":""},{"location":"theory_ch14/#1411","title":"14.1.1 \u0392\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03ad\u03bd\u03bd\u03bf\u03b9\u03b5\u03c2","text":""},{"location":"theory_ch14/#1412","title":"14.1.2 \u0396\u03b7\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd","text":""},{"location":"theory_ch14/#142-c","title":"14.2 \u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd \u03c3\u03c4\u03b7 C++","text":""},{"location":"theory_ch14/#1421","title":"14.2.1 \u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03c4\u03ad\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd","text":""},{"location":"theory_ch14/#1422","title":"14.2.2 \u03a3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03c9\u03bd \u03bc\u03b5 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03c4\u03ad\u03c2","text":""},{"location":"theory_ch14/#1424","title":"14.2.4 \u0386\u03bb\u03bb\u03b5\u03c2 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd","text":""},{"location":"theory_ch14/#1425","title":"14.2.5 \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1","text":""},{"location":"theory_ch14/#143-java","title":"14.3 \u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd \u03c3\u03c4\u03b7 Java","text":""},{"location":"theory_ch14/#1431","title":"14.3.1 \u039a\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd","text":""},{"location":"theory_ch14/#1433","title":"14.3.3 \u03a3\u03c5\u03bd\u03b4\u03ad\u03c3\u03b7 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd \u03bc\u03b5 \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03c4\u03ad\u03c2","text":""},{"location":"theory_ch14/#1434","title":"14.3.4 \u0386\u03bb\u03bb\u03b5\u03c2 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd","text":""},{"location":"theory_ch14/#1435","title":"14.3.5 \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1","text":""},{"location":"theory_ch14/#1436-finally","title":"14.3.6 \u0397 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 finally","text":""},{"location":"theory_ch14/#1437","title":"14.3.7 \u0399\u03c3\u03c7\u03c5\u03c1\u03b9\u03c3\u03bc\u03bf\u03af","text":""},{"location":"theory_ch14/#144-python-ruby","title":"14.4 \u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03be\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03c9\u03bd \u03c3\u03c4\u03b7 Python \u03ba\u03b1\u03b9 Ruby","text":""},{"location":"theory_ch14/#1441-python","title":"14.4.1 Python","text":""},{"location":"theory_ch14/#1441-ruby","title":"14.4.1 Ruby","text":""},{"location":"theory_ch14/#145","title":"14.5 \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c3\u03c4\u03bf\u03bd \u03c7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc \u03c3\u03c5\u03bc\u03b2\u03ac\u03bd\u03c4\u03c9\u03bd","text":""},{"location":"theory_ch14/#145-java","title":"14.5 \u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c3\u03c5\u03bc\u03b2\u03ac\u03bd\u03c4\u03c9\u03bd \u03bc\u03b5 \u03c4\u03b7 Java","text":""},{"location":"theory_ch14/#146-c","title":"14.6 \u03a7\u03b5\u03b9\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c3\u03c5\u03bc\u03b2\u03ac\u03bd\u03c4\u03c9\u03bd \u03c3\u03c4\u03b7 C","text":""},{"location":"theory_ch15/","title":"15. \u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<ul> <li>\u039f\u03b9 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03b9\u03b4\u03ad\u03b5\u03c2 \u03c4\u03c9\u03bd \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd.</li> <li>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd: Lisp, Scheme, Racket, ML, OCaml, Haskell, F#.</li> <li>\u03a5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7 \u03b3\u03b9\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03cc \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc \u03b1\u03c0\u03cc \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2.</li> <li>\u0395\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd.</li> </ul>"},{"location":"theory_ch15/#151","title":"15.1 \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae","text":"<p>\u03a4\u03bf \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03c3\u03c4\u03c5\u03bb \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03b5\u03b9 \u03bc\u03b5\u03b3\u03ac\u03bb\u03b7 \u03b5\u03be\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b5\u03c0\u03b9\u03ba\u03c1\u03b1\u03c4\u03bf\u03cd\u03c3\u03b1 \u03b1\u03c1\u03c7\u03b9\u03c4\u03b5\u03ba\u03c4\u03bf\u03bd\u03b9\u03ba\u03ae \u03c4\u03c9\u03bd \u0397/\u03a5.</p> <p>\u03a4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b3\u03c1\u03ac\u03c6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03b4\u03b9\u03b1\u03c4\u03b7\u03c1\u03bf\u03cd\u03bd \u03bc\u03b9\u03b1 \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 (\u03bf\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03c9\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2) \u03b7 \u03bf\u03c0\u03bf\u03af\u03b1 \u03b1\u03bb\u03bb\u03ac\u03b6\u03b5\u03b9 \u03ba\u03b1\u03b8\u03ce\u03c2 \u03b5\u03ba\u03c4\u03b5\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1. \u039f \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ae\u03c2 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03ba\u03b1\u03c4\u03b1\u03bd\u03bf\u03b5\u03af \u03c4\u03bf \u03c0\u03c9\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03ac\u03bb\u03bb\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7, \u03ba\u03ac\u03c4\u03b9 \u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03b1\u03b8\u03cc\u03bb\u03bf\u03c5 \u03b5\u03cd\u03ba\u03bf\u03bb\u03bf \u03b3\u03b9\u03b1 \u03bc\u03b5\u03b3\u03ac\u03bb\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1.</p> <p>\u03a4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c3\u03b5 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03b4\u03b5\u03bd \u03ad\u03c7\u03bf\u03c5\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03b4\u03b5\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03b7 \u03ad\u03bd\u03bd\u03bf\u03b9\u03b1 \u03c4\u03b7\u03c2 \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03c3\u03c4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd.</p>"},{"location":"theory_ch15/#152","title":"15.2 \u039c\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2","text":"<p>\u039c\u03b9\u03b1 \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03af\u03c7\u03b9\u03c3\u03b7 \u03c4\u03c9\u03bd \u03bc\u03b5\u03bb\u03ce\u03bd \u03b5\u03bd\u03cc\u03c2 \u03c3\u03c5\u03bd\u03cc\u03bb\u03bf\u03c5 (\u03c4\u03bf\u03c5 \u03c0\u03b5\u03b4\u03af\u03bf\u03c5 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd) \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03ac\u03bb\u03bb\u03bf \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf (\u03c4\u03bf \u03c0\u03b5\u03b4\u03af\u03bf \u03c4\u03b9\u03bc\u03ce\u03bd).</p> <p>\u03a3\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b7 \u03c3\u03b5\u03b9\u03c1\u03ac \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 \u03c4\u03c9\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03af\u03c7\u03b9\u03c3\u03b7\u03c2 \u03c0\u03c1\u03bf\u03c3\u03b4\u03b9\u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b8\u03ae\u03ba\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03cc\u03c7\u03b9 \u03b1\u03c0\u03cc \u03b5\u03c0\u03b1\u03bd\u03b1\u03bb\u03b7\u03c0\u03c4\u03b9\u03ba\u03ae \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03cc\u03c0\u03c9\u03c2 \u03c3\u03c5\u03bd\u03b7\u03b8\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b9\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2.</p> <p>\u039f\u03b9 \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b4\u03b5\u03bd \u03ad\u03c7\u03bf\u03c5\u03bd \u03c0\u03b1\u03c1\u03ac\u03c0\u03bb\u03b5\u03c5\u03c1\u03b5\u03c2 \u03c3\u03c5\u03bd\u03ad\u03c0\u03b5\u03b9\u03b5\u03c2 (side-effects).</p>"},{"location":"theory_ch15/#1521","title":"15.2.1 \u0391\u03c0\u03bb\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2","text":"<p>\u039f \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd \u03bb\u03ac\u03bc\u03b4\u03b1 \u03b4\u03b9\u03b1\u03c4\u03c5\u03c0\u03ce\u03b8\u03b7\u03ba\u03b5 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd A. Church \u03c4\u03bf 1941 \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af \u03ad\u03bd\u03b1\u03bd \u03c4\u03c1\u03cc\u03c0\u03bf \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03c7\u03c9\u03c1\u03af\u03c2 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1. \u039c\u03b9\u03b1 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 \u03bb\u03ac\u03bc\u03b4\u03b1 \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03b9\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03b7\u03bd \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03af\u03c7\u03b9\u03c3\u03b7 \u03bc\u03b9\u03b1\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2. \u039f Church \u03cc\u03c1\u03b9\u03c3\u03b5 \u03c4\u03bf\u03bd \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc \u03bb\u03ac\u03bc\u03b4\u03b1 \u03c0\u03bf\u03c5 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af \u03ad\u03bd\u03b1 \u03b5\u03c0\u03af\u03c3\u03b7\u03bc\u03bf \u03bc\u03bf\u03bd\u03c4\u03ad\u03bb\u03bf \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03ce\u03bd \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1. \u0397 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b2\u03b1\u03c3\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc \u03bb\u03ac\u03bc\u03b4\u03b1.</p> <pre><code>\u03bb(x) x*x*x\n</code></pre> <p>\u03a0\u03c1\u03b9\u03bd \u03c4\u03b7\u03bd \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03ae \u03c4\u03b7\u03c2 \u03bc\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b9\u03c3\u03c4\u03ac \u03bf\u03c0\u03bf\u03b9\u03bf\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03bc\u03ad\u03bb\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03b5\u03b4\u03af\u03bf\u03c5 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd, \u03b1\u03bb\u03bb\u03ac \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7 \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03c4\u03b7\u03c2 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 \u03b4\u03b5\u03c3\u03bc\u03b5\u03cd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03bf \u03bc\u03ad\u03bb\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03b5\u03b4\u03af\u03bf\u03c5 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd.</p> <pre><code>(\u03bb(x) x*x*x)(2)\n</code></pre>"},{"location":"theory_ch15/#1522","title":"15.2.2 \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ad\u03c2","text":"<p>\u039c\u03b9\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03bc\u03bf\u03c1\u03c6\u03ae \u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c5\u03c8\u03b7\u03bb\u03ae\u03c2 \u03c4\u03ac\u03be\u03b7\u03c2 (high-order function) \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03c0\u03b1\u03af\u03c1\u03bd\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03ae \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c9\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2, \u03ae \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c9\u03c2 \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 \u03ae \u03ba\u03b1\u03b9 \u03c4\u03b1 \u03b4\u03cd\u03bf.</p> <p>\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ce\u03bd \u03bc\u03bf\u03c1\u03c6\u03ce\u03bd</p> <ul> <li>\u03a3\u03cd\u03bd\u03b8\u03b5\u03c3\u03b7 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd (composition)</li> <li>\u0395\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u03c3\u03b5 \u03cc\u03bb\u03b1 (apply-to-all)</li> </ul>"},{"location":"theory_ch15/#153","title":"15.3 \u0392\u03b1\u03c3\u03b9\u03ba\u03ac \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c4\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u039c\u03b9\u03b1 \u03b1\u03bc\u03b9\u03b3\u03ae\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03b4\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03bf\u03b9 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2. \u03a3\u03c5\u03bd\u03b5\u03c0\u03ce\u03c2, \u03b4\u03b5\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7\u03c2 \u03ba\u03b1\u03b8\u03ce\u03c2 \u03bf \u03ad\u03bb\u03b5\u03b3\u03c7\u03cc\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03b8\u03b1 \u03c7\u03c1\u03b5\u03b9\u03b1\u03b6\u03cc\u03c4\u03b1\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2. \u0397 \u03b4\u03b5 \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03ad\u03c3\u03c9 \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae\u03c2. </p> <p>\u0397 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03bc\u03b9\u03b1\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03af\u03b4\u03b9\u03b5\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03c0\u03b1\u03c1\u03ac\u03b3\u03b5\u03b9 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 (\u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae \u03b4\u03b9\u03b1\u03c6\u03ac\u03bd\u03b5\u03b9\u03b1 = referential transparency). \u03a3\u03c5\u03bd\u03b5\u03c0\u03ce\u03c2 \u03bf \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03bf\u03c1\u03b8\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03ac \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7.</p> <p>\u039c\u03b9\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03b1\u03c1\u03ad\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03b1\u03c0\u03cc \u03b2\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2, \u03ad\u03bd\u03b1 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03b1\u03c0\u03cc \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ad\u03c2 \u03b3\u03b9\u03b1 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c3\u03b7 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd, \u03bc\u03b9\u03b1 \u03c0\u03c1\u03ac\u03be\u03b7 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03ba\u03b1\u03b9 \u03ba\u03ac\u03c0\u03bf\u03b9\u03b5\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03ba\u03b1\u03b9  \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd.</p>"},{"location":"theory_ch15/#154-lisp","title":"15.4 \u0397 \u03c0\u03c1\u03ce\u03c4\u03b7 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd: Lisp","text":"<p>John McCarthy 1959</p> <p>\u039f\u03b9 \u03c3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03b5\u03c2 \u03b4\u03b9\u03ac\u03bb\u03b5\u03ba\u03c4\u03bf\u03b9 \u03c4\u03b7\u03c2 Lisp \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03c5\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd, \u03cc\u03c0\u03c9\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03c4\u03cd\u03c0\u03bf\u03c5, \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7. </p>"},{"location":"theory_ch15/#1541","title":"15.4.1 \u03a4\u03cd\u03c0\u03bf\u03b9 \u03ba\u03b1\u03b9 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd","text":"<p>\u0394\u03cd\u03bf \u03b2\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03af\u03b5\u03c2 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c3\u03c4\u03b7 Lisp \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03b1 \u03ac\u03c4\u03bf\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2.</p> <ul> <li>\u03a4\u03b1 \u03ac\u03c4\u03bf\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03af\u03c4\u03b5 \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03b1 \u03b5\u03af\u03c4\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2.</li> <li>\u039f\u03b9 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03bf\u03c1\u03b9\u03bf\u03b8\u03b5\u03c4\u03bf\u03cd\u03bd \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c4\u03bf\u03c5\u03c2 \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b5\u03bd\u03b8\u03ad\u03c3\u03b5\u03b9\u03c2, \u03b5\u03bd\u03ce \u03ad\u03bd\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03bb\u03af\u03c3\u03c4\u03b1. \u0397 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03c3\u03c5\u03bd\u03ae\u03b8\u03c9\u03c2 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03c3\u03c5\u03bd\u03b4\u03b5\u03b4\u03b5\u03bc\u03ad\u03bd\u03b5\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03ba\u03ac\u03b8\u03b5 \u03ba\u03cc\u03bc\u03b2\u03bf\u03c2 \u03ad\u03c7\u03b5\u03b9 \u03b4\u03cd\u03bf \u03b4\u03cd\u03bf \u03b4\u03b5\u03af\u03ba\u03c4\u03b5\u03c2, \u03ad\u03bd\u03b1\u03bd \u03b3\u03b9\u03b1 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ad\u03c2 \u03c3\u03c4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c4\u03bf\u03c5 \u03ba\u03cc\u03bc\u03b2\u03bf\u03c5 \u03ba\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c0\u03bf\u03c5 \u03b4\u03b5\u03af\u03c7\u03bd\u03b5\u03b9 \u03c0\u03c1\u03bf\u03c2 \u03c4\u03bf \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03bf \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03ae \u03b3\u03b9\u03b1 \u03c4\u03bf \u03c4\u03b5\u03bb\u03b5\u03c5\u03c4\u03b1\u03af\u03bf \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03c3\u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae nil.</li> </ul> <p>\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd</p> <pre><code>(A B C D)\n\n(A (B C) D (E (F G)))\n</code></pre>"},{"location":"theory_ch15/#1542-lisp","title":"15.4.2 \u039f \u03c0\u03c1\u03ce\u03c4\u03bf\u03c2 \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03c5\u03c4\u03ae\u03c2 \u03c4\u03b7\u03c2 Lisp","text":"<p>\u0397 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03b5\u03be\u03ae\u03c2:</p> <pre><code>(\u03cc\u03bd\u03bf\u03bc\u03b1_\u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c21 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c22 ... \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2n)\n</code></pre> <p>S-\u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2</p> <p>EVAL: \u03ba\u03b1\u03b8\u03bf\u03bb\u03b9\u03ba\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd. \u03a4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03cd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03ba\u03b1\u03b8\u03bf\u03bb\u03b9\u03ba\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 EVAL.</p>"},{"location":"theory_ch15/#155-scheme","title":"15.5 Scheme","text":"<p>Lisp -&gt; Scheme -&gt; Racket</p>"},{"location":"theory_ch15/#1551-scheme","title":"15.5.1 \u0397 \u03c0\u03c1\u03bf\u03ad\u03bb\u03b5\u03c5\u03c3\u03b7 \u03c4\u03b7\u03c2 Scheme","text":"<p>\u0397 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 Scheme \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03ac\u03bb\u03b5\u03ba\u03c4\u03bf\u03c2 \u03c4\u03b7\u03c2 Lisp. \u0395\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bc\u03b9\u03ba\u03c1\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1, \u03c7\u03c9\u03c1\u03af\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2, \u03bc\u03b5 \u03b1\u03c0\u03bb\u03cc \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03ba\u03b1\u03b9 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1. \u0397 Scheme \u03c3\u03c7\u03b5\u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03ba\u03b5 \u03bc\u03b5 \u03c3\u03ba\u03bf\u03c0\u03cc \u03c4\u03b7 \u03b4\u03b9\u03b4\u03b1\u03c3\u03ba\u03b1\u03bb\u03af\u03b1. \u0397 Scheme \u03ad\u03c7\u03b5\u03b9 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1.</p>"},{"location":"theory_ch15/#1552-scheme","title":"15.5.2 \u039f \u03b4\u03b9\u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03c5\u03c4\u03ae\u03c2 \u03c4\u03b7\u03c2 Scheme","text":"<p>H Scheme \u03b4\u03b9\u03b1\u03b8\u03ad\u03c4\u03b5\u03b9 REPL (Read Evaluate Print Loop).</p>"},{"location":"theory_ch15/#1553","title":"15.5.3 \u0392\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2","text":""},{"location":"theory_ch15/#1554","title":"15.5.4 \u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd","text":"<p>\u0388\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 Scheme \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03b1\u03c0\u03cc \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd. </p> <p>\u039c\u03b9\u03b1 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7 \u03bb\u03ad\u03be\u03b7 lambda \u03ba\u03b1\u03b9 \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 lambda.</p>"},{"location":"theory_ch15/#1555","title":"15.5.5 \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b5\u03be\u03cc\u03b4\u03bf\u03c5","text":""},{"location":"theory_ch15/#1556","title":"15.5.6 \u0391\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd","text":"<p>\u039a\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03c4\u03b9\u03bc\u03ae. \u039f\u03b9 \u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ad\u03c7\u03bf\u03c5\u03bd \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03c4\u03b5\u03bb\u03b5\u03b9\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03b1\u03b3\u03b3\u03bb\u03b9\u03ba\u03cc \u03b5\u03c1\u03c9\u03c4\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc.</p>"},{"location":"theory_ch15/#1557","title":"15.5.7 \u03a1\u03bf\u03ae \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5","text":"<pre><code>(if predicate then_expression else_expression)\n</code></pre> <pre><code>(cond cond-clause ...)\ncond-clause     =       [test-expr then-body ...+]\n        |       [else then-body ...+]\n        |       [test-expr =&gt; proc-expr]\n        |       [test-expr]\n</code></pre>"},{"location":"theory_ch15/#1558","title":"15.5.8 \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd","text":"<p>\u03a4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03af\u03b4\u03b9\u03b1 \u03bc\u03bf\u03c1\u03c6\u03ae. </p> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 QUOTE</p> <p>\u0395\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf \u03c7\u03c9\u03c1\u03af\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bf\u03bb\u03ae.</p> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 CAR</p> <p>\u0395\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03ba\u03b5\u03c6\u03b1\u03bb\u03ae \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2.</p> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 CDR </p> <p>\u0395\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03b7\u03bd \u03bf\u03c5\u03c1\u03ac \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2.</p> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 CONS </p> <p>\u039a\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03b6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bd\u03ad\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03b1\u03c0\u03cc \u03b4\u03cd\u03bf \u03be\u03b5\u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03ac \u03c4\u03bc\u03ae\u03bc\u03b1\u03c4\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2.</p> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 LIST</p> <p>\u039a\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03b6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03b1\u03c0\u03cc \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03cc \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd.</p>"},{"location":"theory_ch15/#1559","title":"15.5.9 \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03b3\u03b9\u03b1 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03ba\u03ac \u03ac\u03c4\u03bf\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2","text":"<p>\u0394\u03b9\u03b1\u03c4\u03af\u03b8\u03b5\u03bd\u03c4\u03b1\u03b9 3 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03b3\u03b9\u03b1 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03ba\u03ac \u03ac\u03c4\u03bf\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2.</p> <ul> <li>EQ?  \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03c3\u03cd\u03b3\u03ba\u03c1\u03b9\u03c3\u03b7 \u03b4\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd</li> <li>EQV? \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03c3\u03cd\u03b3\u03ba\u03c1\u03b9\u03c3\u03b7 \u03c4\u03b9\u03bc\u03ce\u03bd</li> <li>NULL? \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 #\u03a4 \u03b1\u03bd \u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03ac \u03c4\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03b5\u03bd\u03cc</li> <li>LIST? \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 #\u03a4 \u03b1\u03bd \u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03ac \u03c4\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bb\u03af\u03c3\u03c4\u03b1</li> </ul> <p>To EQ? \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03c3\u03c9\u03c3\u03c4\u03ac \u03b3\u03b9\u03b1 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03ba\u03ac \u03ac\u03c4\u03bf\u03bc\u03b1 \u03b1\u03bb\u03bb\u03ac \u03cc\u03c7\u03b9 \u03b1\u03c0\u03b1\u03c1\u03b1\u03af\u03c4\u03b7\u03c4\u03b1 \u03b3\u03b9\u03b1 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ac \u03ac\u03c4\u03bf\u03bc\u03b1. \u0393\u03b9\u03b1 \u03c4\u03b1 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ac \u03ac\u03c4\u03bf\u03bc\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 =. </p>"},{"location":"theory_ch15/#15510-scheme","title":"15.5.10 \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd Scheme","text":"<p>\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 1</p> <p>\u0395\u03c0\u03af\u03bb\u03c5\u03c3\u03b7 \u03c0\u03c1\u03bf\u03b2\u03bb\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b9\u03b4\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03bc\u03ad\u03bb\u03bf\u03c5\u03c2 \u03b5\u03bd\u03cc\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03bf\u03c5 \u03b1\u03c4\u03cc\u03bc\u03bf\u03c5 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c5\u03c0\u03bf\u03bb\u03af\u03c3\u03c4\u03b5\u03c2 (\u03b1\u03c0\u03bb\u03ae \u03bb\u03af\u03c3\u03c4\u03b1).</p> <pre><code>(define (my_member atm a_list)\n    (cond\n        ((null? a_list) #f)\n        ((eq? atm (car a_list)) #t)\n        (else (my_member atm (cdr a_list)))\n))\n</code></pre> <pre><code>&gt; (my_member 'a '(a b c))\n#true\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 2</p> <p>\u0394\u03b9\u03b1\u03c0\u03af\u03c3\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b5\u03ac\u03bd \u03b4\u03cd\u03bf \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b5\u03c2 \u03b1\u03c0\u03bb\u03ad\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03c3\u03b5\u03c2.</p> <pre><code>(define (equalsimp list1 list2)\n    (cond\n        ((null? list1) (null? list2))\n        ((null? list2) #f)\n        ((eq? (car list1) (car list2))\n            (equalsimp (cdr list1) (cdr list2)))\n        (else #f)\n    )\n)\n</code></pre> <pre><code>&gt; (equalsimp '(a b) '(a b))\n#true\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 3</p> <p>\u039a\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae \u03bc\u03b9\u03b1\u03c2 \u03bd\u03ad\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03cc\u03bb\u03b1 \u03c4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03b4\u03cd\u03bf \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03bf\u03c1\u03b9\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd.</p> <pre><code>(define (my_append list1 list2)\n    (cond \n        ((null? list1) list2)\n        (else (cons (car list1) (my_append (cdr list1) list2)))\n    )\n)\n</code></pre> <pre><code>&gt; (my_append '(a b) '(c d e))\n(list 'a 'b 'c 'd 'e)\n</code></pre>"},{"location":"theory_ch15/#15511-let","title":"15.5.11 LET","text":"<p>\u0397 LET \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03bc\u03b9\u03b1 \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03c3\u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03c4\u03b1 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03c6\u03c1\u03ac\u03c3\u03c3\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c3\u03c9\u03c1\u03b9\u03bd\u03ac \u03c3\u03b5 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd.</p> <pre><code> #lang racket\n\n(define (quadratic_roots a b c)\n    (let (\n        (root_part_over_2a (/ (sqrt (- (* b b) (* 4 a c))) (* 2 a)))\n        (minus_b_over_2a (/ (- 0 b) (* 2 a)))\n    )\n    (list (+ minus_b_over_2a root_part_over_2a)\n            (- minus_b_over_2a root_part_over_2a))\n))\n</code></pre> <pre><code>&gt; (quadratic_roots 2 5 3)\n'(-1 -1.5)\n</code></pre>"},{"location":"theory_ch15/#15512-scheme","title":"15.5.12 \u0391\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae \u03bf\u03c5\u03c1\u03ac\u03c2 \u03c3\u03c4\u03b7 Scheme","text":"<p>\u039c\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b5\u03ba\u03c4\u03b5\u03bb\u03b5\u03af \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae \u03bf\u03c5\u03c1\u03ac\u03c2 (tail recursion) \u03b1\u03bd \u03b7 \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03b9\u03ba\u03ae \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c4\u03b5\u03bb\u03b5\u03c5\u03c4\u03b1\u03af\u03b1 \u03c0\u03c1\u03ac\u03be\u03b7 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7. \u0391\u03c5\u03c4\u03ad\u03c2 \u03bf\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03bc\u03b5\u03c4\u03b1\u03c4\u03c1\u03b1\u03c0\u03bf\u03cd\u03bd \u03b1\u03c5\u03c4\u03cc\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c0\u03cc \u03ad\u03bd\u03b1\u03bd \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ae \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03bc\u03b7\u03bd \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae, \u03b1\u03bb\u03bb\u03ac \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7 \u03bc\u03b5 \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 \u03c4\u03b7\u03bd \u03c4\u03b1\u03c7\u03cd\u03c4\u03b5\u03c1\u03b7 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5\u03c2.</p>"},{"location":"theory_ch15/#15513","title":"15.5.13 \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ad\u03c2","text":""},{"location":"theory_ch15/#155131","title":"15.5.13.1 \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03c3\u03cd\u03bd\u03b8\u03b5\u03c3\u03b7","text":"<p>\u0397 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03c3\u03cd\u03bd\u03b8\u03b5\u03c3\u03b7 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03b4\u03cd\u03bf \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c9\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03b5\u03c6\u03b1\u03c1\u03bc\u03cc\u03b6\u03b5\u03b9 \u03c0\u03c1\u03ce\u03c4\u03b1 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5 \u03c3\u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf \u03c4\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03ba\u03b1\u03c4\u03cc\u03c0\u03b9\u03bd \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c0\u03c1\u03ce\u03c4\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5 \u03c3\u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae\u03c2 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5. \u0394\u03b7\u03bb\u03b1\u03b4\u03ae, \u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c3\u03b7\u03c2 \u03c4\u03c9\u03bd f \u03ba\u03b1\u03b9 g \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 h(x) = f(g(x))</p> <pre><code>(define (compose f g) (lambda (x) (f (g x))))\n</code></pre> <pre><code>&gt; ((compose car cdr) '((a b) c d))                                                                                      'c \n'c\n</code></pre>"},{"location":"theory_ch15/#155132-apply-to-all","title":"15.5.13.2 \u0397 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03bc\u03bf\u03c1\u03c6\u03ae apply-to-all","text":"<p>H map \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03b1\u03c1\u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03c4\u03b7\u03c2 apply-to-all \u03c0\u03bf\u03c5 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03b4\u03cd\u03bf \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2, \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1.</p> <pre><code>&gt; (map (lambda (num) (* num num num)) '(3 4 2 6))                                                                       \n'(27 64 8 216)   \n</code></pre>"},{"location":"theory_ch15/#15514","title":"15.5.14 \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03b6\u03bf\u03c5\u03bd \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1","text":"<p>\u03a4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03ba\u03b1\u03b9 \u03c4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03af\u03b4\u03b9\u03b1 \u03b4\u03bf\u03bc\u03ae. \u0388\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03bd\u03b1 \u03ba\u03b1\u03bb\u03b5\u03af \u03c4\u03b7\u03bd EVAL \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03ae \u03c4\u03bf\u03c5\u03c2.</p>"},{"location":"theory_ch15/#156-common-lisp","title":"15.6 Common Lisp","text":"<p>H Common Lisp (1990) \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03ae\u03b8\u03b7\u03ba\u03b5 \u03c0\u03c1\u03bf\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bd\u03b1 \u03c3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03c4\u03bf\u03cd\u03bd \u03c4\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03c0\u03bf\u03bb\u03bb\u03ce\u03bd \u03b4\u03b9\u03b1\u03bb\u03ad\u03ba\u03c4\u03c9\u03bd \u03c4\u03b7\u03c2 Lisp (\u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03b1\u03bd\u03bf\u03bc\u03ad\u03bd\u03b7\u03c2 \u03c4\u03b7\u03c2 Scheme). \u0395\u03af\u03bd\u03b1\u03b9 \u03b1\u03c1\u03ba\u03b5\u03c4\u03ac \u03bc\u03b5\u03b3\u03ac\u03bb\u03b7 \u03ba\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd\u03c0\u03bb\u03bf\u03ba\u03b7 \u03c9\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1. \u03a5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03ba\u03b1\u03b9 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1. \u039f \u03c3\u03c4\u03cc\u03c7\u03bf\u03c2 \u03c4\u03b7\u03c2 Common Lisp \u03ae\u03c4\u03b1\u03bd \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03c9\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ce\u03bd \u03c4\u03bf\u03c5 \u03b5\u03bc\u03c0\u03bf\u03c1\u03af\u03bf\u03c5.</p>"},{"location":"theory_ch15/#157-ml","title":"15.7 ML","text":""},{"location":"theory_ch15/#158-haskell","title":"15.8 Haskell","text":"<p>\u0397 Haskell \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b1\u03bc\u03b9\u03b3\u03ae\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1. \u039f\u03b9 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c4\u03b7\u03bd Haskell \u03b4\u03b5\u03bd \u03ad\u03c7\u03bf\u03c5\u03bd  \u03c0\u03b1\u03c1\u03ac\u03c0\u03bb\u03b5\u03c5\u03c1\u03b5\u03c2 \u03c3\u03c5\u03bd\u03ad\u03c0\u03b5\u03b9\u03b5\u03c2.</p> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03bf\u03cd (\u03bc\u03b5 \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03af\u03c7\u03b9\u03c3\u03b7 \u03bc\u03bf\u03c4\u03af\u03b2\u03c9\u03bd - pattern matching) 1\u03b7 \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7</p> <pre><code>fact 0 = 1\nfact 1 = 1\nfact n = n * fact (n - 1)\n</code></pre> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc \u03c4\u03bf\u03c5 \u03bd\u03b9\u03bf\u03c3\u03c4\u03bf\u03cd \u03cc\u03c1\u03bf\u03c5 fibonacci (0, 1, 1, 2, 3, 5, 8, 11, 19, ...)</p> <pre><code>fib 0 = 1\nfib 1 = 1\nfin (n + 2) = fib (n + 1) + fib n\n</code></pre> <p>\u03a5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03b7 \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03bd\u03b1 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b5\u03b8\u03bf\u03cd\u03bd \u03c6\u03c1\u03bf\u03c5\u03c1\u03bf\u03af (guards) \u03c3\u03b5 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03c2 \u03c4\u03bf\u03c5 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03bc\u03b9\u03b1\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2, \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03c0\u03c1\u03bf\u03c3\u03b4\u03b9\u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c0\u03cc\u03c4\u03b5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03c3\u03c4\u03b5\u03af \u03bf \u03bf\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2.</p> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03bf\u03cd - 2\u03b7 \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7</p> <pre><code>fact n\n    | n == 0 = 1\n    | n == 1 = 1\n    | n &gt; 1 = n * fact (n - 1) \n</code></pre> <p>\u039b\u03af\u03c3\u03c4\u03b5\u03c2</p> <pre><code>colors = [\"blue\", \"green\", \"red\", \"yellow\"]\n</code></pre> <p>\u0397 Haskell \u03b4\u03b9\u03b1\u03b8\u03ad\u03c4\u03b5\u03b9 \u03b4\u03b9\u03ac\u03c6\u03bf\u03c1\u03bf\u03c5\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd \u03cc\u03c0\u03c9\u03c2 \u03bf\u03b9 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf\u03b9: * ++ \u03b3\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ad\u03bd\u03c9\u03c3\u03b7 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd * :  \u03b3\u03b9\u03b1 \u03b5\u03bd\u03b8\u03b5\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03ba\u03b4\u03bf\u03c7\u03ae \u03c4\u03bf\u03c5 CONS * .. \u03b3\u03b9\u03b1 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ae \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1 \u03c3\u03b5 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2</p> <p><pre><code>5:[2, 7, 9] \u03b4\u03af\u03bd\u03b5\u03b9 [5, 2, 7, 9]\n[1, 3..11] \u03b4\u03af\u03bd\u03b5\u03b9  [1, 3, 5, 7, 9, 11]\n[1, 3, 5] ++ [2, 4, 6]  \u03b4\u03af\u03bd\u03b5\u03b9  [1, 3, 5, 2, 4, 6]\n</code></pre> \u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd \u03c4\u03bf\u03c5 \u03b3\u03b9\u03bd\u03bf\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c4\u03c9\u03bd \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd \u03bc\u03b9\u03b1\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2</p> <pre><code>product [] = 1\nproduct (a:x) = a * product x\n</code></pre> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03b3\u03bf\u03bd\u03c4\u03b9\u03ba\u03bf\u03cd (\u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 product) - 3\u03b7 \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7</p> <pre><code>fact n = product [1..n]\n</code></pre> <p>\u0397 \u03b4\u03bf\u03bc\u03ae let</p> <pre><code>quadratic_root a b c =\n    let minus_b_over_2a = -b / (2.0 * a)\n        root_part_over_2a = sqrt(b ^ 2 - 4.0 * a * c) / (2.0 * a)\n    in \n        minus_b_over_2a - root_part_over_2a,\n        minus_b_over_2a + root_part_over_2a\n</code></pre> <p>\u03a0\u03b5\u03c1\u03b9\u03c6\u03c1\u03b1\u03c3\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 (list comprehensions)</p> <p>\u039b\u03af\u03c3\u03c4\u03b1 \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd n*n*n \u03ce\u03c3\u03c4\u03b5 \u03c4\u03bf n \u03bd\u03b1 \u03b2\u03c1\u03af\u03c3\u03ba\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 1 \u03ad\u03c9\u03c2 \u03ba\u03b1\u03b9 50.</p> <pre><code>[n * n * n | n &lt;- [1..50]]\n</code></pre> <p>\u03a5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c4\u03c9\u03bd \u03c0\u03b1\u03c1\u03b1\u03b3\u03cc\u03bd\u03c4\u03c9\u03bd \u03b5\u03bd\u03cc\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd n.</p> <pre><code>factors n =  [i | i &lt;- [1..n `div` 2], n `mod` i == 0]\n</code></pre> <p>\u03a5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 quicksort \u03c3\u03c4\u03b7\u03bd Haskell</p> <pre><code>sort [] = []\nsort (h:t) = sort [b | b &lt;- t, b &lt;= h ]\n             ++ [h] ++\n             sort [b | b &lt;- t, b &gt; h ]\n</code></pre> <p>\u039f\u03ba\u03bd\u03b7\u03c1\u03ae \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 (lazy evaluation)</p> <p>\u039f\u03b9 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b1\u03c0\u03bf\u03c4\u03b9\u03bc\u03ce\u03bd\u03c4\u03b1\u03b9 \u03bc\u03cc\u03bd\u03bf \u03cc\u03c4\u03b1\u03bd \u03bf\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c0\u03b1\u03c1\u03b1\u03af\u03c4\u03b7\u03c4\u03b5\u03c2.</p> <p>\u0391\u03c4\u03ad\u03c1\u03bc\u03bf\u03bd\u03b5\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd</p> <pre><code>positives = [0..]\nevens = [2, 4..]\nsquares = [n * n | n &lt;- [0..]]\n</code></pre>"},{"location":"theory_ch15/#159-f","title":"15.9 F#","text":""},{"location":"theory_ch15/#1510","title":"15.10 \u03a5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b7 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03b5 \u03ba\u03c5\u03c1\u03af\u03c9\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2","text":"<p>\u03a3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03ad\u03c7\u03bf\u03c5\u03bd \u03c0\u03c1\u03bf\u03c3\u03c4\u03b5\u03b8\u03b5\u03af \u03c3\u03b5 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03ba\u03c5\u03c1\u03af\u03c9\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd. \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03bc\u03bf\u03b9\u03ac\u03b6\u03bf\u03c5\u03bd \u03bc\u03b5 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1 \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b1\u03bd\u03c4\u03ce\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b9\u03c2 C++, Java, Python, C#, JavaScript, Ruby.</p> <p>JavaScript</p> <p>Java</p> <p>Python</p> <pre><code>lambda a,b: 2 * a - b\n</code></pre> <p>H Python \u03ad\u03c7\u03b5\u03b9 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c5\u03c8\u03b7\u03bb\u03ae\u03c2 \u03c4\u03ac\u03be\u03b7\u03c2 filter \u03ba\u03b1\u03b9 map \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd \u03c9\u03c2 \u03c0\u03c1\u03ce\u03c4\u03b7 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03bb\u03ac\u03bc\u03b4\u03b1, \u03c9\u03c2 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03b7 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf \u03ad\u03bd\u03b1\u03bd \u03c4\u03cd\u03c0\u03bf \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1\u03c2 (\u03bb\u03af\u03c3\u03c4\u03b1, \u03c0\u03bb\u03b5\u03b9\u03ac\u03b4\u03b1 \u03ae \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac) \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03bf\u03c5\u03bd \u03c4\u03bf\u03bd \u03af\u03b4\u03b9\u03bf \u03c4\u03cd\u03c0\u03bf \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1\u03c2.</p> <pre><code>map(lambda x: x**3, [2,4,6,8])\n</code></pre> <p>\u03b8\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c8\u03b5\u03b9</p> <pre><code>[8, 64, 216, 512]\n</code></pre> <p>\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd, \u03b7 Python \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2 \u03bc\u03b5\u03c1\u03b9\u03ba\u03ce\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd (partial functions).</p> <pre><code>from operator import add\nadd5 = partial(add,5)\nprint(add5(15))\n</code></pre> <p>\u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 20.</p> <p>C++</p>"},{"location":"theory_ch15/#1511","title":"15.11 \u03a3\u03cd\u03b3\u03ba\u03c1\u03b9\u03c3\u03b7 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ce\u03bd \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd","text":"<ul> <li>\u039f\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c0\u03b9\u03bf \u03b1\u03c0\u03bb\u03ae \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae \u03b4\u03bf\u03bc\u03ae \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bb\u03bf\u03cd\u03c3\u03c4\u03b5\u03c1\u03b7 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1.</li> <li>\u03a4\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ac \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03b4\u03b5\u03bd \u03ad\u03c7\u03bf\u03c5\u03bd \u03c0\u03b1\u03c1\u03ac\u03c0\u03bb\u03b5\u03c5\u03c1\u03b5\u03c2 \u03c3\u03c5\u03bd\u03ad\u03c0\u03b5\u03b9\u03b5\u03c2 (side effects).</li> <li>\u03a4\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ac \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03ad\u03c7\u03bf\u03c5\u03bd \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03bf \u03bc\u03ad\u03b3\u03b5\u03b8\u03bf\u03c2 \u03c3\u03b5 \u03c3\u03c7\u03ad\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03b1 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b1 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ac \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1.</li> <li>\u03a4\u03b1 \u03c0\u03c1\u03bf\u03c4\u03b1\u03c3\u03b9\u03b1\u03ba\u03ac \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b5\u03c1\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ac \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1.</li> <li>\u039f\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03b4\u03b9\u03b5\u03c5\u03ba\u03bf\u03bb\u03cd\u03bd\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1.</li> <li>\u0397 \u03c4\u03b1\u03c5\u03c4\u03cc\u03c7\u03c1\u03bf\u03bd\u03b7 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c3\u03c4\u03b9\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03b5\u03b9 \u03b4\u03b9\u03ac\u03c6\u03bf\u03c1\u03b5\u03c2 \u03b4\u03c5\u03c3\u03ba\u03bf\u03bb\u03af\u03b5\u03c2. \u039b\u03cc\u03b3\u03c9 \u03c4\u03b7\u03c2 \u03b1\u03c0\u03bf\u03c5\u03c3\u03af\u03b1\u03c2 \u03c0\u03b1\u03c1\u03ac\u03c0\u03bb\u03b5\u03c5\u03c1\u03c9\u03bd \u03c3\u03c5\u03bd\u03b5\u03c0\u03b5\u03b9\u03ce\u03bd \u03c3\u03c4\u03bf\u03bd \u03b1\u03bc\u03b9\u03b3\u03ae \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03cc \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc \u03ba\u03b1\u03b8\u03af\u03c3\u03c4\u03b1\u03c4\u03b1\u03b9 \u03b5\u03c5\u03ba\u03bf\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7 \u03b7 \u03c4\u03b1\u03c5\u03c4\u03cc\u03c7\u03c1\u03bf\u03bd\u03b7 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd.  </li> <li>\u0397 \u03c0\u03bb\u03b5\u03b9\u03bf\u03c8\u03b7\u03c6\u03af\u03b1 \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ce\u03bd \u03bc\u03b1\u03b8\u03b1\u03af\u03bd\u03bf\u03c5\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc \u03c3\u03b5 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c3\u03c5\u03bd\u03ad\u03c0\u03b5\u03b9\u03b1 \u03c4\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ac \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c6\u03b1\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c0\u03b5\u03c1\u03af\u03b5\u03c1\u03b3\u03b1 \u03ba\u03b1\u03b9 \u03b4\u03c5\u03c3\u03bd\u03cc\u03b7\u03c4\u03b1.</li> </ul>"},{"location":"theory_ch16/","title":"16. \u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<ul> <li>\u039b\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2</li> <li>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd (Prolog)</li> <li>\u039a\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc\u03c2 \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc\u03c2</li> <li>\u0395\u03c0\u03b9\u03c3\u03ba\u03cc\u03c0\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 Prolog (\u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ae, \u03bb\u03af\u03c3\u03c4\u03b5\u03c2, \u03b1\u03c0\u03bf\u03c3\u03c6\u03b1\u03bb\u03bc\u03ac\u03c4\u03c9\u03c3\u03b7 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd, \u03c4\u03bf\u03bc\u03b5\u03af\u03c2 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ce\u03bd)</li> </ul> <p>\u0397 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03ba\u03ae \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af \u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03bb\u03bf\u03b3\u03b9\u03ba\u03cc \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc \u03ba\u03b1\u03b9 \u03c4\u03b9\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd.</p> <p>\u03a3\u03c4\u03cc\u03c7\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bd\u03b1 \u03bc\u03b7\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03c4\u03b9\u03ba\u03cc\u03c2, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03bd\u03b1 \u03bc\u03b7\u03bd \u03b1\u03c0\u03b1\u03b9\u03c4\u03b5\u03af\u03c4\u03b1\u03b9 \u03b7 \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03b9\u03ba\u03ae \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd \u03b5\u03bd\u03b5\u03c1\u03b3\u03b5\u03b9\u03ce\u03bd \u03c0\u03bf\u03c5 \u03bf\u03b4\u03b7\u03b3\u03bf\u03cd\u03bd \u03c3\u03c4\u03b7 \u03bb\u03cd\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b2\u03bb\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2.</p>"},{"location":"theory_ch16/#161","title":"16.1 \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae","text":"<p>\u03a4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03b5\u03ba\u03c6\u03c1\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03bf\u03c1\u03c6\u03ae \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03ba\u03ae\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03b4\u03b9\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03b5\u03be\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2 \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b1\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd.</p> <p>\u03a4\u03b1 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ac \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b7\u03bb\u03c9\u03c4\u03b9\u03ba\u03ac \u03ba\u03b1\u03b9 \u03cc\u03c7\u03b9 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03c4\u03b9\u03ba\u03ac, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03ac\u03c6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b5\u03c2 \u03b5\u03c0\u03af\u03bb\u03c5\u03c3\u03b7\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ae. \u0391\u03bd\u03c4\u03af\u03b8\u03b5\u03c4\u03b1, \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03c9\u03bd \u03ba\u03b1\u03b9 \u03ba\u03b1\u03bd\u03cc\u03bd\u03c9\u03bd. </p> <p>\u03a4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c3\u03b5 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ad\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03ba\u03b1\u03b9 \u03ba\u03b1\u03bd\u03cc\u03bd\u03c9\u03bd. \u039f \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03b8\u03ad\u03c4\u03b5\u03b9 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1, \u03c4\u03b1 \u03bf\u03c0\u03bf\u03af\u03b1 \u03b1\u03c0\u03b1\u03bd\u03c4\u03ce\u03bd\u03c4\u03b1\u03b9 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03c4\u03bf\u03c5\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2.</p> <p>\u03a4\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03c4\u03c9\u03bd \u03bb\u03bf\u03b3\u03b9\u03ba\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03ac\u03bb\u03bb\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd.</p>"},{"location":"theory_ch16/#162","title":"16.2 \u039c\u03b9\u03b1 \u03c3\u03cd\u03bd\u03c4\u03bf\u03bc\u03b7 \u03b5\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae \u03c3\u03c4\u03bf\u03bd \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc","text":"<p>\u0397 \u03b2\u03ac\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ae \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03c0\u03bf\u03c5 \u03ad\u03c7\u03b5\u03b9 \u03c3\u03c4\u03b5\u03bd\u03ae \u03c3\u03c7\u03ad\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03b1 \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac.</p> <p>\u039c\u03b9\u03b1 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bb\u03b7\u03b8\u03ae\u03c2 \u03ae \u03cc\u03c7\u03b9 \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03c3\u03c7\u03ad\u03c3\u03b5\u03b9\u03c2 \u03bc\u03b5\u03c4\u03b1\u03be\u03cd \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd.</p> <p>\u0397 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03ba\u03ae \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03b3\u03b9\u03b1:</p> <ul> <li>\u0388\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd</li> <li>\u0388\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 \u03c3\u03c7\u03ad\u03c3\u03b5\u03c9\u03bd \u03bc\u03b5\u03c4\u03b1\u03be\u03cd \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd</li> <li>\u0395\u03be\u03b1\u03b3\u03c9\u03b3\u03ae \u03bd\u03ad\u03c9\u03bd \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd \u03b1\u03c0\u03cc \u03b1\u03bb\u03b7\u03b8\u03b5\u03af\u03c2 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2</li> </ul> <p>\u039f \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc\u03c2 \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c0\u03c1\u03ce\u03c4\u03b7\u03c2 \u03c4\u03ac\u03be\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03bc\u03bf\u03c1\u03c6\u03ae \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03ba\u03ae\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae\u03c2 \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03bb\u03bf\u03b3\u03b9\u03ba\u03cc \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc.</p>"},{"location":"theory_ch16/#1621-propositions","title":"16.2.1 \u03a0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 (propositions)","text":"<ul> <li>\u039f\u03b9 \u03b1\u03c0\u03bb\u03bf\u03af \u03cc\u03c1\u03bf\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2.</li> <li>\u039c\u03b9\u03b1 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ac \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf \u03c0\u03bf\u03c5 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b9\u03c3\u03c4\u03ac \u03ad\u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf.</li> <li>\u039c\u03b9\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf \u03c0\u03bf\u03c5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b9\u03c3\u03c4\u03ac \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ac \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03c3\u03b5 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c7\u03c1\u03bf\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c4\u03b9\u03b3\u03bc\u03ad\u03c2.</li> <li>\u0388\u03bd\u03b1\u03c2 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03bf\u03c2 \u03cc\u03c1\u03bf\u03c2 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03ad\u03bd\u03b1\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c4\u03ae (functor) \u03ba\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b4\u03b9\u03b1\u03c4\u03b5\u03c4\u03b1\u03b3\u03bc\u03ad\u03bd\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd.</li> </ul> <p>\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03c9\u03bd \u03cc\u03c1\u03c9\u03bd.</p> <p><pre><code>man(jake)\nlike(bob, steak)\nman(fred)\n</code></pre> \u03c0\u03bf\u03c5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03bf\u03c5\u03bd \u03cc\u03c4\u03b9 \u03bf Jake \u03b5\u03af\u03bd\u03b1\u03b9 \u03ac\u03bd\u03b4\u03c1\u03b1\u03c2, \u03cc\u03c4\u03b9 \u03c3\u03c4\u03bf\u03bd bob \u03b1\u03c1\u03ad\u03c3\u03b5\u03b9 \u03c4\u03bf steak, \u03ba\u03b1\u03b9 \u03cc\u03c4\u03b9 o fred \u03b5\u03af\u03bd\u03b1\u03b9 \u03ac\u03bd\u03b4\u03c1\u03b1\u03c2.</p> <p>\u039f\u03b9 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03c3\u03cd\u03bd\u03b8\u03b5\u03c4\u03bf\u03c5\u03c2 \u03cc\u03c1\u03bf\u03c5\u03c2 \u03c0\u03bf\u03c5 \u03c3\u03c5\u03bd\u03b4\u03ad\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5  \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2 (\u03ac\u03c1\u03bd\u03b7\u03c3\u03b7, \u03c3\u03cd\u03b6\u03b5\u03c5\u03be\u03b7, \u03b4\u03b9\u03ac\u03b6\u03b5\u03c5\u03be\u03b7, \u03b9\u03c3\u03bf\u03b4\u03c5\u03bd\u03b1\u03bc\u03af\u03b1 \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b5\u03c0\u03b1\u03b3\u03c9\u03b3\u03ae) \u03ba\u03b1\u03b9 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03bf\u03c5\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03c0\u03bf\u03c3\u03bf\u03b4\u03b5\u03af\u03ba\u03c4\u03b5\u03c2 (\u03ba\u03b1\u03b8\u03bf\u03bb\u03b9\u03ba\u03cc \u03ba\u03b1\u03b9 \u03c5\u03c0\u03b1\u03c1\u03be\u03b9\u03b1\u03ba\u03cc).</p>"},{"location":"theory_ch16/#1622-clausal-form","title":"16.2.2 \u03a0\u03c1\u03bf\u03c4\u03b1\u03c3\u03b9\u03b1\u03ba\u03ae \u03bc\u03bf\u03c1\u03c6\u03ae (clausal form)","text":"<p>\u039c\u03b5 \u03c4\u03bf\u03bd \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03c0\u03bf\u03bb\u03bb\u03bf\u03af \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9 \u03bc\u03b5 \u03c4\u03bf\u03c5\u03c2 \u03bf\u03c0\u03bf\u03af\u03bf\u03c5\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b4\u03b9\u03b1\u03c4\u03c5\u03c0\u03c9\u03b8\u03b5\u03af \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03bd\u03cc\u03b7\u03bc\u03b1. \u0393\u03b9\u03b1 \u03bd\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b1\u03c5\u03c4\u03cc\u03bc\u03b1\u03c4\u03bf \u03c3\u03cd\u03c3\u03c4\u03b7\u03bc\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c4\u03c5\u03c0\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03b7 \u03bc\u03bf\u03c1\u03c6\u03ae \u03c0\u03bf\u03c5 \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c4\u03b1\u03c3\u03b9\u03b1\u03ba\u03ae \u03bc\u03bf\u03c1\u03c6\u03ae \u03ba\u03b1\u03b9 \u03b7 \u03bf\u03c0\u03bf\u03af\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03b5 \u03b8\u03ad\u03c3\u03b7 \u03bd\u03b1 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03ba\u03c6\u03c1\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03bf\u03bd \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc.</p> <p>\u039c\u03b9\u03b1 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 \u03c3\u03b5 \u03c0\u03c1\u03bf\u03c4\u03b1\u03c3\u03b9\u03b1\u03ba\u03ae \u03bc\u03bf\u03c1\u03c6\u03ae \u03ad\u03c7\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ae \u03bc\u03bf\u03c1\u03c6\u03ae </p> <p></p> <p>\u03ba\u03b1\u03b9 \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03b1\u03bd \u03cc\u03bb\u03b1 \u03c4\u03b1 \u0391 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bb\u03b7\u03b8\u03ae \u03c4\u03cc\u03c4\u03b5 \u03c4\u03bf\u03c5\u03bb\u03ac\u03c7\u03b9\u03c3\u03c4\u03bf\u03bd \u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 \u0392 \u03b8\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bb\u03b7\u03b8\u03ad\u03c2.</p> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1:</p> <p></p> <p>\u03c0\u03bf\u03c5 \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03b1\u03bd \u03bf Al \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03b1\u03c4\u03ad\u03c1\u03b1\u03c2 \u03c4\u03bf\u03c5 Bob \u03ba\u03b1\u03b9 \u03b7 Violet \u03bc\u03b7\u03c4\u03ad\u03c1\u03b1 \u03c4\u03bf\u03c5 Bob \u03ba\u03b1\u03b9 \u03bf Louis \u03c0\u03b1\u03c0\u03c0\u03bf\u03cd\u03c2 \u03c4\u03bf\u03c5 Bob \u03c4\u03cc\u03c4\u03b5 \u03bf Louis \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03af\u03c4\u03b5 \u03c0\u03b1\u03c4\u03ad\u03c1\u03b1\u03c2 \u03c4\u03bf\u03c5 Al \u03b5\u03af\u03c4\u03b5 \u03c0\u03b1\u03c4\u03ad\u03c1\u03b1\u03c2 \u03c4\u03b7\u03c2 Violet.</p>"},{"location":"theory_ch16/#163","title":"16.3 \u039a\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc\u03c2 \u039b\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc\u03c2 \u03ba\u03b1\u03b9 \u03b1\u03c0\u03cc\u03b4\u03b5\u03b9\u03be\u03b7 \u03b8\u03b5\u03c9\u03c1\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd","text":"<p>\u0391\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7 (Robinson 1965).</p> <p>\u03a0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 Horn. \u03a0\u03c1\u03bf\u03c4\u03b1\u03c3\u03b9\u03b1\u03ba\u03ae \u03bc\u03bf\u03c1\u03c6\u03ae \u03bc\u03b5 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c0\u03b5\u03c1\u03b9\u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2  \u03c0\u03bf\u03c5 \u03ba\u03b1\u03b8\u03b9\u03c3\u03c4\u03ac \u03c4\u03b7\u03bd \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03b1\u03c0\u03bf\u03b4\u03bf\u03c4\u03b9\u03ba\u03ae.</p>"},{"location":"theory_ch16/#164","title":"16.4 \u0395\u03c0\u03b9\u03c3\u03ba\u03cc\u03c0\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u0394\u03b7\u03bb\u03c9\u03c4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1: \u03a5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03c0\u03c1\u03bf\u03c3\u03b4\u03b9\u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03c4\u03bf\u03c5 \u03bd\u03bf\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03ba\u03ac\u03b8\u03b5 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b4\u03b5\u03bd \u03b5\u03be\u03b1\u03c1\u03c4\u03ac\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf \u03c0\u03c9\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03b7 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b5\u03c0\u03af\u03bb\u03c5\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b2\u03bb\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 (\u03b1\u03c0\u03bb\u03bf\u03cd\u03c3\u03c4\u03b5\u03c1\u03b7 \u03b1\u03c0\u03cc \u03c4\u03b7 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd). </p>"},{"location":"theory_ch16/#165-prolog","title":"16.5 \u0397 \u03b3\u03ad\u03bd\u03bd\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 Prolog","text":"<p>Alen Coleraurer, Phillippe Roussel, Robert Kowalski (1972)</p>"},{"location":"theory_ch16/#166-prolog","title":"16.6 \u03a4\u03b1 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ac \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c4\u03b7\u03c2 Prolog","text":"<p>\u03a5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03c0\u03bf\u03bb\u03bb\u03bf\u03af \u03b4\u03b9\u03ac\u03bb\u03b5\u03ba\u03c4\u03bf\u03b9 \u03c4\u03b7\u03c2 Prolog. \u0397 \u03c0\u03bb\u03ad\u03bf\u03bd \u03b4\u03b9\u03b1\u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b4\u03b9\u03ac\u03bb\u03b5\u03ba\u03c4\u03bf\u03c2 \u03c4\u03bf\u03c5 \u0395\u03b4\u03b9\u03bc\u03b2\u03bf\u03cd\u03c1\u03b3\u03bf\u03c5.</p>"},{"location":"theory_ch16/#1661","title":"16.6.1 \u038c\u03c1\u03bf\u03b9","text":"<p>\u0388\u03bd\u03b1\u03c2 \u03cc\u03c1\u03bf\u03c2 \u03c3\u03c4\u03b7\u03bd Prolog \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ac, \u03bc\u03b9\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03ae \u03bc\u03b9\u03b1 \u03b4\u03bf\u03bc\u03ae.</p> <p>\u039f\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 bounded \u03ae unbounded.</p> <p>\u03a4\u03b1 \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03b1 \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03ad\u03c3\u03c9 \u03c4\u03c9\u03bd \u03b4\u03bf\u03bc\u03ce\u03bd.</p> <p>\u039f\u03b9 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c4\u03b7\u03c2 Prolog \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03b1, \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b9\u03ba\u03ad\u03c2 \u03ba\u03b1\u03c4\u03b1\u03c3\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2.</p>"},{"location":"theory_ch16/#1662","title":"16.6.2 \u03a0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03c9\u03bd","text":"<p>\u0394\u03cd\u03bf \u03b5\u03af\u03b4\u03b7 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd:</p> <ul> <li>\u0391\u03ba\u03ad\u03c6\u03b1\u03bb\u03b5\u03c2 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 Horn (\u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03bf\u03cd\u03bd \u03c3\u03b5 \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03b1)</li> <li>\u03a0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 Horn \u03bc\u03b5 \u03ba\u03b5\u03c6\u03b1\u03bb\u03ae (\u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03bf\u03cd\u03bd \u03c3\u03b5 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2)</li> </ul>"},{"location":"theory_ch16/#1663","title":"16.6.3 \u03a0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03c9\u03bd","text":"<p>\u03a3\u03b5 \u03ad\u03bd\u03b1\u03bd \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1 \u03c4\u03bf \u03b4\u03b5\u03be\u03b9\u03cc \u03bc\u03ad\u03c1\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03c0\u03c1\u03bf\u03b7\u03b3\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf (\u03c4\u03bf if) \u03ba\u03b1\u03b9 \u03c4\u03bf \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03cc \u03bc\u03ad\u03c1\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03bf (\u03c4\u03bf then).</p>"},{"location":"theory_ch16/#1664","title":"16.6.4 \u03a0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c4\u03b5\u03bb\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7\u03c2","text":"<p>\u039f\u03b9 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c4\u03b5\u03bb\u03b9\u03ba\u03ae\u03c2 \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7\u03c2, \u03bc\u03ad\u03bd\u03b5\u03b9 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03b4\u03b5\u03b9\u03c7\u03b8\u03b5\u03af \u03cc\u03c4\u03b9 \u03b9\u03c3\u03c7\u03cd\u03bf\u03c5\u03bd \u03ae \u03cc\u03c4\u03b9 \u03b4\u03b5\u03bd \u03b9\u03c3\u03c7\u03cd\u03bf\u03c5\u03bd, \u03ba\u03b1\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03cc\u03bc\u03bf\u03b9\u03b5\u03c2 \u03b5\u03bc\u03c6\u03b1\u03bd\u03b9\u03c3\u03b9\u03b1\u03ba\u03ac \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03b1.</p>"},{"location":"theory_ch16/#1665-prolog","title":"16.6.5 \u0397 \u03b5\u03be\u03b1\u03b3\u03c9\u03b3\u03ae \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03ac\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c3\u03c4\u03b7\u03bd Prolog","text":"<p>\u0397 Prolog \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03c1\u03bf\u03c6\u03b7 \u03b1\u03bb\u03c5\u03c3\u03af\u03b4\u03c9\u03c3\u03b7 (backward chaining), \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03be\u03b5\u03ba\u03b9\u03bd\u03ac \u03b1\u03c0\u03cc \u03c4\u03bf \u03b6\u03b7\u03c4\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf (\u03c4\u03b7\u03bd \u03c4\u03b5\u03bb\u03b9\u03ba\u03ae \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7) \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c7\u03b5\u03b9\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03bd\u03c4\u03bf\u03c0\u03af\u03c3\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03b5\u03b9\u03c1\u03ac \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03ae\u03c3\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03bf\u03b4\u03b7\u03b3\u03b5\u03af \u03c3\u03b5 \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03bd\u03c4\u03b1 \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03b1. \u0397 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03c1\u03bf\u03c6\u03b7 \u03b1\u03bb\u03c5\u03c3\u03af\u03b4\u03c9\u03c3\u03b7 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03ba\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b1 \u03cc\u03c4\u03b1\u03bd \u03b1\u03bd\u03b1\u03bc\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03c7\u03b5\u03c4\u03b9\u03ba\u03ac \u03bc\u03b9\u03ba\u03c1\u03cc \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03b1\u03c0\u03b1\u03bd\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd.</p> <p>\u0397 Prolog \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03b1\u03bd\u03b1\u03b6\u03ae\u03c4\u03b7\u03c3\u03b7 \u03c0\u03c1\u03ce\u03c4\u03b1 \u03ba\u03b1\u03c4\u03ac \u03b2\u03ac\u03b8\u03bf\u03c2 (\u03b5\u03bd\u03c4\u03bf\u03c0\u03af\u03b6\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03c0\u03bb\u03ae\u03c1\u03b7 \u03b1\u03c0\u03cc\u03b4\u03b5\u03b9\u03be\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03c1\u03ce\u03c4\u03b7 \u03b4\u03b5\u03c5\u03c4\u03b5\u03c1\u03b5\u03cd\u03bf\u03c5\u03c3\u03b1 \u03c4\u03b5\u03bb\u03b9\u03ba\u03ae \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c0\u03c1\u03b9\u03bd \u03c0\u03c1\u03bf\u03c7\u03c9\u03c1\u03ae\u03c3\u03b5\u03b9 \u03c3\u03c4\u03b7\u03bd \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03b7) \u03ba\u03b1\u03b8\u03ce\u03c2 \u03ad\u03c7\u03b5\u03b9 \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03b1\u03c0\u03b1\u03b9\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2.</p> <p>\u039f\u03c0\u03b9\u03c3\u03b8\u03bf\u03b4\u03c1\u03cc\u03bc\u03b7\u03c3\u03b7 (backtracking) \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae \u03c3\u03b5 \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf \u03c3\u03b7\u03bc\u03b5\u03af\u03bf \u03c3\u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03b5\u03af\u03c7\u03b5 \u03b1\u03bd\u03b1\u03c4\u03b5\u03b8\u03b5\u03af \u03bc\u03b9\u03b1 \u03c4\u03b9\u03bc\u03ae \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03ba\u03b1\u03b9 \u03b7 \u03b4\u03bf\u03ba\u03b9\u03bc\u03ae \u03bc\u03b9\u03b1\u03c2 \u03ac\u03bb\u03bb\u03b7\u03c2 \u03b5\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03c4\u03b9\u03bc\u03ae\u03c2.</p> <p>\u03a0\u03c1\u03cc\u03b2\u03bb\u03b7\u03bc\u03b1 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03bf\u03c0\u03b9\u03c3\u03b8\u03bf\u03b4\u03c1\u03cc\u03bc\u03b7\u03c3\u03b7</p> <p>\u0397 \u03b1\u03c0\u03ac\u03bd\u03c4\u03b7\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1: </p> <pre><code>?- male(X), parent(X, shelley).\n</code></pre> <p>\u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03ba\u03b1\u03b8\u03c5\u03c3\u03c4\u03b5\u03c1\u03b5\u03af \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b1\u03c0\u03ac\u03bd\u03c4\u03b7\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03bf \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1:</p> <pre><code>?- parent(X, shelley), male(X).\n</code></pre>"},{"location":"theory_ch16/#1666","title":"16.6.6 \u0391\u03c0\u03bb\u03ae \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ae","text":"<p>\u039f\u03b9 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c0\u03c1\u03ac\u03be\u03b5\u03b9\u03c2 \u03b5\u03ba\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae is.</p> <pre><code>?- B = 34, C=2, A is B/17 + C.\nB = 34,\nC = 2,\nA = 4.\n</code></pre> <p>\u039f \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 is \u03ad\u03c7\u03b5\u03b9 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2 \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd.</p> <p>\u0397 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 Sum is Sum + 1 \u03b4\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03bd\u03cc\u03b7\u03bc\u03b1 \u03c3\u03c4\u03b7\u03bd Prolog: <pre><code>?- Sum is Sum + 1.\nERROR: Arguments are not sufficiently instantiated\nERROR: In:\nERROR:   [10] _11678 is _11684+1\nERROR:    [9] &lt;user&gt;\n</code></pre></p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c0\u03c1\u03ac\u03be\u03b5\u03b9\u03c2: speed.pl<pre><code>% \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b1\u03c0\u03cc \u03c4\u03bf \u03b2\u03b9\u03b2\u03bb\u03af\u03bf: \u0391\u03c1\u03c7\u03ad\u03c2 \u0393\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd, Sebesta, \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7 11\u03b7, \u03b5\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2 \u0393\u03ba\u03b9\u03bf\u03cd\u03c1\u03b4\u03b1\u03c2 \n% \u039a\u03b5\u03c6\u03ac\u03bb\u03b1\u03b9\u03bf 16, \u03c3\u03b5\u03bb\u03af\u03b4\u03b1 706\n% \u0394\u03b9\u03b1\u03c6\u03ac\u03bd\u03b5\u03b9\u03b1 31 \u03b1\u03c0\u03cc \u03c4\u03bf \u03c0\u03b1\u03ba\u03ad\u03c4\u03bf \u03b4\u03b9\u03b1\u03c6\u03b1\u03bd\u03b5\u03b9\u03ce\u03bd \u03c4\u03bf\u03c5 \u03b2\u03b9\u03b2\u03bb\u03af\u03bf\u03c5 \n\nspeed(ford, 100).\nspeed(chevy, 105).\nspeed(dodge, 95).\nspeed(volvo, 80).\ntime(ford, 20).\ntime(chevy, 21).\ntime(dodge, 24).\ntime(volvo, 24).\ndistance(X, Y) :- speed(X, Speed),\n    time(X, Time),\n    Y is Speed * Time.\n</code></pre></p> <pre><code>$ swipl -l speed.pl\n?- distance(chevy, Chevy_Distance).\nChevy_Distance = 2205.\n</code></pre>"},{"location":"theory_ch16/#1667","title":"16.6.7 \u0394\u03bf\u03bc\u03ad\u03c2 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd","text":"<p>\u039f\u03b9 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03b5\u03b9\u03c1\u03ad\u03c2 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd \u03c0\u03bf\u03c5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c4\u03bf\u03bc\u03b9\u03ba\u03bf\u03af \u03cc\u03c1\u03bf\u03b9, \u03b1\u03c4\u03bf\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ae \u03bb\u03af\u03c3\u03c4\u03b5\u03c2.</p> <p>\u0397 \u03ba\u03b5\u03bd\u03ae \u03bb\u03af\u03c3\u03c4\u03b1 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 <code>[]</code></p> <p>\u039f \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03c3\u03bc\u03cc\u03c2 <code>[\u03a7|\u03a5]</code> \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03ba\u03b5\u03c6\u03b1\u03bb\u03ae \u03c4\u03bf \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf <code>X</code> \u03ba\u03b1\u03b9 \u03bf\u03c5\u03c1\u03ac \u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 <code>\u03a5</code>.</p> <p>\u039c\u03b5\u03c1\u03b9\u03ba\u03ac \u03b2\u03b1\u03c3\u03b9\u03ba\u03ac \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1 \u03b3\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2:</p> <ul> <li><code>append/3</code></li> <li><code>reverse/2</code></li> <li><code>member/2</code></li> </ul> <p>\u039c\u03b9\u03b1 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 <code>append</code> (\u03b7 <code>append</code> \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03b7 \u03c3\u03c4\u03b7\u03bd Prolog):</p> my_append.pl<pre><code>my_append([], List, List).\nmy_append([Head | List_1], List_2, [Head | List_3]) :-\n            my_append(List_1, List_2, List_3).\n</code></pre> <p>\u0397 \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03b7 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03c5\u03c4\u03b5\u03af \u03c9\u03c2 \u03b5\u03be\u03ae\u03c2: \u0397 \u03b5\u03c0\u03b9\u03c3\u03cd\u03bd\u03b1\u03c8\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 <code>[Head | List_1]</code> \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 <code>List_2</code> \u03c0\u03b1\u03c1\u03ac\u03b3\u03b5\u03b9 \u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 <code>[Head | List_3]</code> \u03b1\u03bd \u03ba\u03b1\u03b9 \u03bc\u03cc\u03bd\u03bf \u03b1\u03bd \u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 <code>List_3</code> \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03c3\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 <code>List_2</code> \u03c3\u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 <code>List_1</code>.</p> <pre><code>?- trace.\n[trace] ?- my_append([bob, jo], [jake, darcie], Family).\n   Call: (10) my_append([bob, jo], [jake, darcie], _4546) ? creep\n   Call: (11) my_append([jo], [jake, darcie], _4966) ? creep\n   Call: (12) my_append([], [jake, darcie], _5016) ? creep\n   Exit: (12) my_append([], [jake, darcie], [jake, darcie]) ? creep\n   Exit: (11) my_append([jo], [jake, darcie], [jo, jake, darcie]) ? creep\n   Exit: (10) my_append([bob, jo], [jake, darcie], [bob, jo, jake, darcie]) ? creep\nFamily = [bob, jo, jake, darcie].\n</code></pre> <p>\u039a\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1 \u03b3\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03b7 SWI-PROLOG: </p> <ul> <li><code>member/2</code></li> <li><code>append/3</code></li> <li><code>append/2</code></li> <li><code>prefix/2</code></li> <li><code>select/3</code></li> <li><code>selectchk/3</code></li> <li><code>select/4</code></li> <li><code>selectchk/4</code></li> <li><code>nextto/3</code></li> <li><code>delete/3</code></li> <li><code>nth0/3</code></li> <li><code>nth1/3</code></li> <li><code>nth0/4</code></li> <li><code>nth1/4</code></li> <li><code>last/2</code></li> <li><code>proper_length/2</code></li> <li><code>same_length/2</code></li> <li><code>reverse/2</code></li> <li><code>permutation/2</code></li> <li><code>flatten/2</code></li> <li><code>clumped/2</code></li> <li><code>max_member/2</code></li> <li><code>min_member/2</code></li> <li><code>sum_list/2</code></li> <li><code>max_list/2</code></li> <li><code>min_list/2</code></li> <li><code>numlist/3</code></li> <li><code>is_set/1</code></li> <li><code>list_to_set/2</code></li> <li><code>intersection/3</code></li> <li><code>union/3</code></li> <li><code>subset/2</code></li> <li><code>subtract/3</code></li> </ul> <p>SWI-PROLOG list of predicates</p> <p>\u039c\u03b9\u03b1 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 <code>member</code> (\u03b7 <code>member</code> \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03b7\u03bc\u03ad\u03bd\u03b7 \u03c3\u03c4\u03b7\u03bd Prolog)</p> my_member.pl<pre><code>my_member(Element, [Element|_]).\nmy_member(Element, [_|List]) :-  my_member(Element, List).\n</code></pre> <p>\u039f \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1\u03c2 <code>_</code> \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae.</p> <pre><code>?- 9 ?- trace.\n[trace] 9 ?- my_member(a, [b,c,d]).\n   Call: (10) my_member(a, [b, c, d]) ? creep\n   Call: (11) my_member(a, [c, d]) ? creep\n   Call: (12) my_member(a, [d]) ? creep\n   Call: (13) my_member(a, []) ? creep\n   Fail: (13) my_member(a, []) ? creep\n   Fail: (12) my_member(a, [d]) ? creep\n   Fail: (11) my_member(a, [c, d]) ? creep\n   Fail: (10) my_member(a, [b, c, d]) ? creep\nfalse.\n</code></pre>"},{"location":"theory_ch16/#167-prolog","title":"16.7 \u0395\u03bb\u03bb\u03b5\u03af\u03c8\u03b5\u03b9\u03c2 \u03c4\u03b7\u03c2 Prolog","text":"<p>H Prolog \u03c9\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03ad\u03c7\u03b5\u03b9 \u03b1\u03c1\u03ba\u03b5\u03c4\u03ad\u03c2 \u03b5\u03bb\u03bb\u03b5\u03af\u03c8\u03b5\u03b9\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03bf \u03b1\u03c0\u03b1\u03b9\u03c4\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf\u03c2 \u03c3\u03b5 \u03c0\u03bf\u03bb\u03bb\u03ad\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c0\u03c4\u03ce\u03c3\u03b5\u03b9\u03c2 \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03bc\u03b5 \u03c0\u03b1\u03c1\u03ad\u03bc\u03b2\u03b1\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ae \u03c4\u03b7\u03c2 \u03c3\u03b5\u03b9\u03c1\u03ac\u03c2 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03b5\u03c6\u03b1\u03c1\u03bc\u03cc\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7, \u03b7 \u03c5\u03c0\u03cc\u03b8\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03bf\u03cd \u03ba\u03cc\u03c3\u03bc\u03bf\u03c5, \u03c4\u03bf \u03c0\u03c1\u03cc\u03b2\u03bb\u03b7\u03bc\u03b1 \u03c4\u03b7\u03c2 \u03ac\u03c1\u03bd\u03b7\u03c3\u03b7\u03c2 (\u03b7 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03c4\u03bf\u03c5 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae NOT) \u03ba\u03b1\u03b8\u03ce\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03b3\u03b3\u03b5\u03bd\u03b5\u03af\u03c2 \u03b4\u03c5\u03c3\u03ba\u03bf\u03bb\u03af\u03b5\u03c2 \u03c3\u03c4\u03b7 \u03bc\u03b7 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03c4\u03b9\u03ba\u03ae \u03b1\u03bd\u03c4\u03b9\u03bc\u03b5\u03c4\u03ce\u03c0\u03b9\u03c3\u03b7 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03c0\u03c1\u03bf\u03b2\u03bb\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03cc\u03c0\u03c9\u03c2 \u03b7 \u03c4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7.</p>"},{"location":"theory_ch16/#1671","title":"16.7.1 \u0388\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c3\u03b5\u03b9\u03c1\u03ac\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2","text":"<p>\u0393\u03b9\u03b1 \u03bb\u03cc\u03b3\u03bf\u03c5\u03c2 \u03b1\u03c0\u03bf\u03b4\u03bf\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03c6\u03b5\u03cd\u03b3\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bf\u03b9 \u03b1\u03c4\u03ad\u03c1\u03bc\u03bf\u03bd\u03bf\u03b9 \u03b2\u03c1\u03cc\u03c7\u03bf\u03b9, \u03bf \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ae\u03c2 \u03c3\u03c4\u03b7\u03bd Prolog \u03c3\u03c5\u03c7\u03bd\u03ac \u03c7\u03c1\u03b5\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bd\u03b1 \u03b5\u03bd\u03c3\u03c9\u03bc\u03b1\u03c4\u03ce\u03bd\u03b5\u03b9 \u03c3\u03c4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c4\u03bf\u03c5 \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b5\u03c2 \u03c1\u03bf\u03ae\u03c2 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03c0\u03bf\u03c5 \u03b1\u03c0\u03bf\u03bc\u03b1\u03ba\u03c1\u03cd\u03bd\u03bf\u03c5\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03ba\u03b1\u03b8\u03b1\u03c1\u03cc \u039b\u03bf\u03b3\u03b9\u03ba\u03cc \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc. \u0391\u03c5\u03c4\u03cc \u03c3\u03c5\u03bc\u03b2\u03b1\u03af\u03bd\u03b5\u03b9 \u03b4\u03b9\u03cc\u03c4\u03b9 \u03b7 Prolog \u03ad\u03c7\u03b5\u03b9 \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03b7 \u03c3\u03b5\u03b9\u03c1\u03ac \u03bc\u03b5 \u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03b5\u03c0\u03b9\u03c7\u03b5\u03b9\u03c1\u03b5\u03af \u03c4\u03b1 \u03c4\u03b1\u03b9\u03c1\u03b9\u03ac\u03c3\u03bc\u03b1\u03c4\u03b1 (\u03b1\u03c0\u03cc \u03c0\u03ac\u03bd\u03c9 \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b1 \u03ba\u03ac\u03c4\u03c9 \u03c3\u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b3\u03bd\u03ce\u03c3\u03b7\u03c2). </p> <p>\u039f \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03bf\u03c0\u03b9\u03c3\u03b8\u03bf\u03b4\u03c1\u03cc\u03bc\u03b7\u03c3\u03b7\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b3\u03af\u03bd\u03b5\u03b9 \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae \u03b1\u03c0\u03bf\u03ba\u03bf\u03c0\u03ae\u03c2 <code>!</code> (cut). \u039f \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 ! \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03bc\u03b9\u03b1 \u03c4\u03b5\u03bb\u03b9\u03ba\u03ae \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03ac\u03bc\u03b5\u03c3\u03b7\u03c2 \u03b5\u03c0\u03b9\u03c4\u03c5\u03c7\u03af\u03b1\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03c0\u03bf\u03c4\u03c1\u03ad\u03c0\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b9\u03ba\u03b1\u03bd\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03b5\u03ba \u03bd\u03ad\u03bf\u03c5 \u03bc\u03ad\u03c3\u03c9 \u03bf\u03c0\u03b9\u03c3\u03b8\u03bf\u03b4\u03c1\u03cc\u03bc\u03b7\u03c3\u03b7\u03c2. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1:</p> <pre><code>a,b,!,c,d.\n</code></pre> <p>\u03b1\u03bd \u03c4\u03b1 <code>a</code> \u03ba\u03b1\u03b9 <code>b</code> \u03b5\u03c0\u03b9\u03c4\u03cd\u03c7\u03bf\u03c5\u03bd \u03b1\u03bb\u03bb\u03ac \u03c4\u03bf <code>c</code> \u03b1\u03c0\u03bf\u03c4\u03cd\u03c7\u03b5\u03b9 \u03c4\u03cc\u03c4\u03b5 \u03bf\u03bb\u03cc\u03ba\u03bb\u03b7\u03c1\u03b7 \u03b7 \u03c4\u03b5\u03bb\u03b9\u03ba\u03ae \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03b1\u03c0\u03bf\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 (\u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b5\u03c0\u03b9\u03b8\u03c5\u03bc\u03b7\u03c4\u03ae \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03c6\u03bf\u03c1\u03ac \u03b4\u03b9\u03cc\u03c4\u03b9 \u03af\u03c3\u03c9\u03c2 \u03bd\u03b1 \u03b3\u03bd\u03c9\u03c1\u03af\u03b6\u03bf\u03c5\u03bc\u03b5 \u03cc\u03c4\u03b9 \u03b1\u03bd \u03c4\u03bf <code>c</code> \u03b1\u03c0\u03bf\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 \u03c4\u03cc\u03c4\u03b5 \u03b4\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03bd\u03cc\u03b7\u03bc\u03b1 \u03b7 \u03b5\u03be\u03ad\u03c4\u03b1\u03c3\u03b7 \u03b5\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03bb\u03cd\u03c3\u03b5\u03c9\u03bd \u03b3\u03b9\u03b1 \u03c4\u03b1 <code>a</code> \u03ba\u03b1\u03b9 <code>b</code>).</p>"},{"location":"theory_ch16/#1672","title":"16.7.2 \u03a5\u03c0\u03cc\u03b8\u03b5\u03c3\u03b7 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03bf\u03cd \u03ba\u03cc\u03c3\u03bc\u03bf\u03c5","text":"<p>\u0397 Prolog \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03cd\u03c3\u03c4\u03b7\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03c0\u03bf\u03b4\u03b5\u03af\u03be\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03ba\u03ac\u03c4\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bb\u03b7\u03b8\u03ad\u03c2 \u03b1\u03bb\u03bb\u03ac \u03cc\u03c7\u03b9 \u03cc\u03c4\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c8\u03b5\u03c5\u03b4\u03ad\u03c2. \u0395\u03c6\u03cc\u03c3\u03bf\u03bd \u03b4\u03b5\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03c0\u03bf\u03b4\u03b5\u03af\u03be\u03b5\u03b9 \u03bc\u03b5 \u03cc\u03c4\u03b9 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c4\u03bf\u03c5 \u03cc\u03c4\u03b9 \u03ba\u03ac\u03c4\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bb\u03b7\u03b8\u03ad\u03c2 \u03c5\u03c0\u03bf\u03b8\u03ad\u03c4\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c8\u03b5\u03c5\u03b4\u03ad\u03c2. </p> <p>\u0388\u03c3\u03c4\u03c9 \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b3\u03bd\u03ce\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 <code>father(X,Y)</code> \u03c0\u03bf\u03c5 \u03b5\u03c1\u03bc\u03b7\u03bd\u03b5\u03cd\u03b5\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b9 \u03bf \u03c0\u03b1\u03c4\u03ad\u03c1\u03b1\u03c2 \u03c4\u03bf\u03c5/\u03c4\u03b7\u03c2 <code>X</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf <code>Y</code></p> <pre><code>father(aristea, sotiris).\n</code></pre> <p>\u03a4\u03b1 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b1 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03bb\u03cc\u03b3\u03c9 \u03c4\u03b7\u03c2 \u03c5\u03c0\u03cc\u03b8\u03b5\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03bf\u03cd \u03ba\u03cc\u03c3\u03bc\u03bf\u03c5 \u03b8\u03b1 \u03b4\u03ce\u03c3\u03bf\u03c5\u03bd \u03c4\u03b9\u03c2 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03b1\u03c0\u03b1\u03bd\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2</p> <pre><code>?- father(aristea, Y).\nY = sotiris.\n</code></pre> <pre><code>?- father(christos, Y).\nfalse.\n</code></pre>"},{"location":"theory_ch16/#1673","title":"16.7.3 \u03a4\u03bf \u03c0\u03c1\u03cc\u03b2\u03bb\u03b7\u03bc\u03b1 \u03c4\u03b7\u03c2 \u03ac\u03c1\u03bd\u03b7\u03c3\u03b7\u03c2","text":"sibling.pl<pre><code>parent(bill, jake).\nparent(bill, shelley).\nsibling(X, Y) :- parent(M, X), parent(M, Y).\n</code></pre> <p>\u0391\u03bd \u03c4\u03b5\u03b8\u03b5\u03af \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1, \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03c5\u03bc\u03b5 \u03c4\u03b7\u03bd \u03b1\u03c0\u03ac\u03bd\u03c4\u03b7\u03c3\u03b7 \u03cc\u03c4\u03b9 \u03bf <code>Jake</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03ad\u03ba\u03bd\u03bf \u03c4\u03c9\u03bd \u03af\u03b4\u03b9\u03c9\u03bd \u03b3\u03bf\u03bd\u03ad\u03c9\u03bd \u03bc\u03b5 \u03c4\u03bf\u03bd <code>Jake</code>, \u03c0\u03bf\u03c5 \u03b4\u03b5\u03bd \u03ad\u03c7\u03b5\u03b9 \u03bd\u03cc\u03b7\u03bc\u03b1 \u03c9\u03c2 \u03b1\u03c0\u03cc\u03ba\u03c1\u03b9\u03c3\u03b7.</p> <pre><code>?- sibling(X,Y).\nX = Y, Y = jake ;\nX = jake,\nY = shelley ;\nX = shelley,\nY = jake ;\nX = Y, Y = shelley.\n</code></pre> <p>\u039c\u03b5 \u03c4\u03b7\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03c3\u03c4\u03bf\u03bd \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c4\u03b5\u03b9 \u03c4\u03bf\u03bd \u03cc\u03c1\u03bf not(X = Y) \u03c3\u03c4\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1 sibling/2.</p> sibling2.pl<pre><code>parent(bill, jake).\nparent(bill, shelley).\nsibling(X, Y) :- parent(M, X), parent(M, Y), not(X = Y).\n</code></pre> <p>\u03b7 \u03b1\u03c0\u03ac\u03bd\u03c4\u03b7\u03c3\u03b7 \u03c3\u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03b5\u03c1\u03ce\u03c4\u03b7\u03bc\u03b1, \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bb\u03ad\u03bf\u03bd \u03b7 \u03b1\u03bd\u03b1\u03bc\u03b5\u03bd\u03cc\u03bc\u03b5\u03bd\u03b7: <pre><code>?- sibling(X,Y).\nX = jake,\nY = shelley ;\nX = shelley,\nY = jake ;\nfalse\n</code></pre></p> <p>\u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03c4\u03bf <code>not</code> \u03c4\u03b7\u03c2 Prolog \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b9\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03bf \u03c4\u03bf\u03bd \u03bb\u03bf\u03b3\u03b9\u03ba\u03cc \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae <code>not</code> \u03c4\u03c9\u03bd \u03ac\u03bb\u03bb\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c4\u03bf: <pre><code>not(not(some_goal)).\n</code></pre></p> <p>\u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b9\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03bf \u03bc\u03b5 \u03c4\u03bf:  <pre><code>some_goal.\n</code></pre></p> <p>\u0391\u03c5\u03c4\u03cc \u03c6\u03b1\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1: <pre><code>1 ?- member(X,[mary, fred, barb]).\nX = mary ;\nX = fred ;\nX = barb.\n\n2 ?- not(member(X,[mary, fred, barb])).\nfalse.\n\n3 ?- not(not(member(X,[mary, fred, barb]))).\ntrue.\n</code></pre></p>"},{"location":"theory_ch16/#1674","title":"16.7.4 \u0395\u03b3\u03b3\u03b5\u03bd\u03b5\u03af\u03c2 \u03c0\u03b5\u03c1\u03b9\u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03af","text":"<p>\u03a3\u03c4\u03cc\u03c7\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bd\u03b1 \u03bc\u03b7\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03c4\u03b9\u03ba\u03cc\u03c2, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03bd\u03b1 \u03bc\u03b7\u03bd \u03b1\u03c0\u03b1\u03b9\u03c4\u03b5\u03af\u03c4\u03b1\u03b9 \u03b7 \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03b9\u03ba\u03ae \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd \u03b5\u03bd\u03b5\u03c1\u03b3\u03b5\u03b9\u03ce\u03bd \u03b2\u03ae\u03bc\u03b1 \u03c0\u03c1\u03bf\u03c2 \u03b2\u03ae\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03bf\u03b4\u03b7\u03b3\u03bf\u03cd\u03bd \u03c3\u03c4\u03b7 \u03bb\u03cd\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b2\u03bb\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b1\u03c5\u03c4\u03cc \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc \u03c3\u03b5 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c0\u03c4\u03ce\u03c3\u03b5\u03b9\u03c2. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03b1\u03c3\u03c4\u03b5\u03af \u03ad\u03bd\u03b1\u03c2 \u03b1\u03bb\u03b3\u03cc\u03c1\u03b9\u03b8\u03bc\u03bf\u03c2 \u03c4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7\u03c2 \u03bb\u03af\u03c3\u03c4\u03b1\u03c2 \u03c3\u03c4\u03b7\u03bd Prolog, \u03bf \u03b1\u03bb\u03b3\u03cc\u03c1\u03b9\u03b8\u03bc\u03bf\u03c2 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03b9\u03c2 \u03bb\u03b5\u03c0\u03c4\u03bf\u03bc\u03ad\u03c1\u03b5\u03b9\u03b5\u03c2 \u03c4\u03bf\u03c5 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c5 \u03c4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae \u03ae \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1.</p> <p>PROLOG PROGRAMMING by ROMAN BART\u00c1K (sorting)</p>"},{"location":"theory_ch16/#168","title":"16.8 \u0395\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ad\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<p>\u039f \u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03ba\u03c5\u03c1\u03af\u03c9\u03c2 \u03c3\u03b5 \u0392\u03ac\u03c3\u03b5\u03b9\u03c2 \u0394\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd, \u03ad\u03bc\u03c0\u03b5\u03b9\u03c1\u03b1 \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03c6\u03c5\u03c3\u03b9\u03ba\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2.</p>"},{"location":"theory_ch16/#1681","title":"16.8.1 \u03a3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03b4\u03b9\u03b1\u03c7\u03b5\u03af\u03c1\u03b9\u03c3\u03b7\u03c2 \u03c3\u03c7\u03b5\u03c3\u03b9\u03b1\u03ba\u03ce\u03bd \u03b2\u03ac\u03c3\u03b5\u03c9\u03bd \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd","text":"<p>\u03a4\u03b1 \u03a3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u0394\u03b9\u03b1\u03c7\u03b5\u03af\u03c1\u03b9\u03c3\u03b7\u03c2 \u03a3\u03c7\u03b5\u03c3\u03b9\u03b1\u03ba\u03ce\u03bd \u0392\u03ac\u03c3\u03b5\u03c9\u03bd \u0394\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd (RDBMS=Relational Database Management Systems) \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03bf\u03c5\u03bd \u03c4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03bc\u03b5 \u03bc\u03bf\u03c1\u03c6\u03ae \u03c0\u03b9\u03bd\u03ac\u03ba\u03c9\u03bd. \u0397 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 SQL \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03b5\u03c1\u03c9\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b7\u03bb\u03c9\u03c4\u03b9\u03ba\u03ae \u03cc\u03c0\u03c9\u03c2 \u03ba\u03b1\u03b9 \u03bf \u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 (\u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2 \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03ac\u03c6\u03b5\u03b9 \u03c4\u03bf \u03c0\u03c9\u03c2 \u03b8\u03b1 \u03bb\u03b7\u03c6\u03b8\u03bf\u03cd\u03bd \u03c4\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03ad\u03c3\u03bc\u03b1\u03c4\u03b1 \u03b1\u03bb\u03bb\u03ac \u03bc\u03cc\u03bd\u03bf \u03c4\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03c4\u03c9\u03bd \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd). \u039f \u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 RDBMS \u03b5\u03bd\u03ce \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c0\u03b1\u03c1\u03ad\u03c7\u03b5\u03b9 \u03c4\u03b7 \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03bb\u03ae\u03c8\u03b7\u03c2 \u03b5\u03c0\u03b1\u03b3\u03c9\u03b3\u03b9\u03ba\u03ce\u03bd \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b1\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd (\u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03ac\u03c3\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03bf\u03c5\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf \u03c3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc \u03b3\u03b5\u03b3\u03bf\u03bd\u03cc\u03c4\u03c9\u03bd \u03ba\u03b1\u03b9 \u03ba\u03b1\u03bd\u03cc\u03bd\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03c5\u03bc\u03ad\u03bd\u03b1 \u03c3\u03c4\u03b7 \u03b2\u03ac\u03c3\u03b7). \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b7 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 RDBMS \u03bc\u03b5 \u03bb\u03bf\u03b3\u03b9\u03ba\u03cc \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc \u03c5\u03c3\u03c4\u03b5\u03c1\u03b5\u03af \u03c3\u03b5 \u03c4\u03b1\u03c7\u03cd\u03c4\u03b7\u03c4\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03c3\u03b5 \u03c3\u03c7\u03ad\u03c3\u03b7 \u03bc\u03b5 \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c3\u03b5 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd.</p>"},{"location":"theory_ch16/#1682","title":"16.8.2 \u0388\u03bc\u03c0\u03b5\u03b9\u03c1\u03b1 \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1","text":"<p>\u03a4\u03b1 \u03ad\u03bc\u03c0\u03b5\u03b9\u03c1\u03b1 \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 (expert systems) \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03c5\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03b4\u03b9\u03ce\u03ba\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03af\u03c9\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03b1\u03bd\u03b8\u03c1\u03ce\u03c0\u03bf\u03c5 \u03b5\u03b9\u03b4\u03b9\u03ba\u03bf\u03cd \u03c0\u03bf\u03c5 \u03b4\u03b9\u03b1\u03b8\u03ad\u03c4\u03b5\u03b9 \u03b5\u03bc\u03c0\u03b5\u03b9\u03c1\u03af\u03b1 \u03ba\u03b1\u03b9 \u03b3\u03bd\u03ce\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03bc\u03b9\u03b1 \u03b3\u03bd\u03c9\u03c3\u03c4\u03b9\u03ba\u03ae \u03c0\u03b5\u03c1\u03b9\u03bf\u03c7\u03ae (\u03c0.\u03c7. \u03b3\u03b9\u03b1\u03c4\u03c1\u03bf\u03cd, \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03ba\u03bf\u03cd \u03b1\u03c5\u03c4\u03bf\u03ba\u03b9\u03bd\u03ae\u03c4\u03c9\u03bd). \u0397 Prolog \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03c3\u03c5\u03c7\u03bd\u03ac \u03c3\u03c4\u03b7\u03bd \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae \u03ad\u03bc\u03c0\u03b5\u03b9\u03c1\u03c9\u03bd \u03c3\u03c5\u03c3\u03c4\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd.</p>"},{"location":"theory_ch16/#1683","title":"16.8.3 \u0395\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03c6\u03c5\u03c3\u03b9\u03ba\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2","text":"<p>\u039f \u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd, \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03c2 \u03b9\u03c3\u03bf\u03b4\u03c5\u03bd\u03b1\u03bc\u03af\u03b1 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1. </p>"},{"location":"theory_ch2/","title":"\u03a3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf \u039a\u03b5\u03c6\u03ac\u03bb\u03b1\u03b9\u03bf 2 - \u0397 \u03b5\u03be\u03ad\u03bb\u03b9\u03be\u03b7 \u03c4\u03c9\u03bd \u03c0\u03b9\u03bf \u03c3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd","text":"<ul> <li>Zuse's Plankalk\u00fcl<ul> <li>Plankalk\u00fcl a high level language from the 1940s by Eric Lefevre Ardant  </li> </ul> </li> <li>\u03a8\u03b5\u03c5\u03b4\u03bf\u03ba\u03ce\u03b4\u03b9\u03ba\u03b5\u03c2.</li> <li>IBM 704 \u03ba\u03b1\u03b9 FORTRAN.</li> <li>\u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03cc\u03c2 \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2: LISP.</li> <li>\u03a4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03b2\u03ae\u03bc\u03b1 \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b7\u03bd \u03b5\u03ba\u03bb\u03ad\u03c0\u03c4\u03c5\u03bd\u03c3\u03b7: ALGOL 60.</li> <li>\u039c\u03b7\u03c7\u03b1\u03bd\u03bf\u03c1\u03b3\u03ac\u03bd\u03c9\u03c3\u03b7 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ce\u03bd: COBOL.</li> <li>\u0397 \u03b1\u03c0\u03b1\u03c1\u03c7\u03ae \u03c4\u03bf\u03c5 \u03c7\u03c1\u03bf\u03bd\u03bf\u03bc\u03b5\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd: BASIC.</li> <li>\u038c\u03bb\u03b1 \u03b3\u03b9\u03b1 \u03cc\u03bb\u03bf\u03c5\u03c2: PL/I.</li> <li>\u0394\u03cd\u03bf \u03c0\u03c1\u03ce\u03b9\u03bc\u03b5\u03c2 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2: APL and SNOBOL.</li> <li>\u0397 \u03b1\u03c0\u03b1\u03c1\u03c7\u03ae \u03c4\u03b7\u03c2 \u03b1\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b7\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd: SIMULA 67.</li> <li>\u039f\u03c1\u03b8\u03bf\u03b3\u03ce\u03bd\u03b9\u03b1 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7: ALGOL 68.</li> <li>\u039c\u03b5\u03c1\u03b9\u03ba\u03bf\u03af \u03c3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03bf\u03af \u03b1\u03c0\u03cc\u03b3\u03bf\u03bd\u03bf\u03b9 \u03c4\u03c9\u03bd ALGOLs.</li> <li>\u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b2\u03b1\u03c3\u03b9\u03c3\u03bc\u03ad\u03bd\u03bf\u03c2 \u03c3\u03b5 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae: Prolog.</li> <li>\u0397 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7   \u03c0\u03c1\u03bf\u03c3\u03c0\u03ac\u03b8\u03b5\u03b9\u03b1 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd \u03c3\u03c4\u03b7\u03bd \u03b9\u03c3\u03c4\u03bf\u03c1\u03af\u03b1: Ada.</li> <li>\u0391\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03a0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2: Smalltalk.</li> <li>\u03a3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03ba\u03b1\u03b9 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ce\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd: C++.</li> <li>\u039c\u03b9\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03b5\u03bd\u03bf\u03c3\u03c4\u03c1\u03b1\u03c6\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1: Java.</li> <li>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c3\u03b5\u03bd\u03b1\u03c1\u03af\u03c9\u03bd (scripting languages)<ul> <li>Perl</li> <li>Javascript<ul> <li>Node.js: The Documentary | An origin story </li> </ul> </li> <li>PHP</li> <li>Python<ul> <li>Python extends its lead as the most popular programming language \u2014 but why does it have such widespread appeal?</li> </ul> </li> <li>Ruby</li> <li>Lua</li> </ul> </li> <li>\u0397 \u03bd\u03b1\u03c5\u03b1\u03c1\u03c7\u03af\u03b4\u03b1 \u03c4\u03bf\u03c5 .\u039d\u0395\u03a4: C#</li> <li>\u03a5\u03b2\u03c1\u03b9\u03b4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bc\u03b5 \u03b5\u03c0\u03b9\u03c3\u03b7\u03bc\u03b5\u03b9\u03ce\u03c3\u03b5\u03b9\u03c2</li> </ul>"},{"location":"theory_ch3/","title":"3. \u03a0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03ba\u03b1\u03b9 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2","text":"<ul> <li>\u03a3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc (syntax)</li> <li>\u03a3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 (semantics)</li> <li>\u039c\u03ad\u03b8\u03bf\u03b4\u03bf\u03c2 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1 (CFGs = Context Free Grammars)</li> <li>\u03a0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae, \u03b4\u03ad\u03bd\u03b4\u03c1\u03b1 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2, \u03b1\u03c3\u03ac\u03c6\u03b5\u03b9\u03b1, \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd, \u03c0\u03c1\u03bf\u03c3\u03b5\u03c4\u03b1\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd</li> <li>BNF (Backus Naur Form), EBNF (Extended Backus Naur Form)</li> <li>\u0393\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd (attribute grammars) \u03b3\u03b9\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2</li> <li>\u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1</li> </ul>"},{"location":"theory_ch3/#31","title":"3.1 \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae","text":"<ul> <li>\u0397 \u03c0\u03bb\u03b7\u03c1\u03cc\u03c4\u03b7\u03c4\u03b1 \u03ba\u03b1\u03b9 \u03b7 \u03b1\u03ba\u03c1\u03af\u03b2\u03b5\u03b9\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03b5\u03c6\u03b1\u03bb\u03b1\u03b9\u03ce\u03b4\u03bf\u03c5\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03af\u03b1\u03c2.</li> <li>\u039f\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03bf\u03c5\u03bd \u03c4\u03bf \u03c0\u03c1\u03cc\u03b2\u03bb\u03b7\u03bc\u03b1 \u03c4\u03b7\u03c2 \u03cd\u03c0\u03b1\u03c1\u03be\u03b7\u03c2 \u03c0\u03bf\u03bb\u03bb\u03ce\u03bd \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u03b4\u03b9\u03b1\u03bb\u03ad\u03ba\u03c4\u03c9\u03bd \u03c9\u03c2 \u03c3\u03c5\u03bd\u03ad\u03c0\u03b5\u03b9\u03b1 \u03c4\u03bf\u03c5 \u03cc\u03c7\u03b9 \u03b1\u03c0\u03cc\u03bb\u03c5\u03c4\u03b1 \u03b1\u03ba\u03c1\u03b9\u03b2\u03ae \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03c4\u03bf\u03c5\u03c2.</li> <li>\u03a3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03bc\u03bf\u03c1\u03c6\u03ae (\u03b4\u03bf\u03bc\u03ae) \u03c4\u03c9\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd, \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd, \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03bc\u03bf\u03bd\u03ac\u03b4\u03c9\u03bd.</li> <li>\u03a3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c3\u03b7\u03bc\u03b1\u03c3\u03af\u03b1 \u03c4\u03c9\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd, \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd, \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03bc\u03bf\u03bd\u03ac\u03b4\u03c9\u03bd.</li> <li>\u039c\u03b9\u03b1 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03ba\u03b1\u03b9 \u03c4\u03b7 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03c4\u03b7\u03c2.</li> </ul> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1: \u03a0\u03bf\u03b9\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03c4\u03bf\u03c5 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1;</p> <pre><code>while(\u03bb\u03bf\u03b3\u03b9\u03ba\u03ae_\u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7) \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2\n</code></pre> \u0391\u03c0\u03ac\u03bd\u03c4\u03b7\u03c3\u03b7 <p>\u039f \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03b9 \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7 \u03c4\u03c9\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03cc\u03c3\u03bf \u03b7 <code>\u03bb\u03bf\u03b3\u03b9\u03ba\u03ae_\u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bb\u03b7\u03b8\u03ae\u03c2</p>"},{"location":"theory_ch3/#32","title":"3.2 \u03a4\u03bf \u03b3\u03b5\u03bd\u03b9\u03ba\u03cc \u03c0\u03c1\u03cc\u03b2\u03bb\u03b7\u03bc\u03b1 \u03c4\u03b7\u03c2 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd","text":"<ul> <li>\u039c\u03b9\u03b1 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03c9\u03bd (\u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ad\u03c2) \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf\u03c5 \u03b1\u03bb\u03c6\u03b1\u03b2\u03ae\u03c4\u03bf\u03c5.</li> <li>\u039f\u03b9 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03af \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c4\u03b9\u03c2 \u03ad\u03b3\u03ba\u03c5\u03c1\u03b5\u03c2 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1.</li> <li>\u039c\u03b9\u03b1 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c4\u03c9\u03bd \u03ad\u03b3\u03ba\u03c5\u03c1\u03c9\u03bd \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03ce\u03bd \u03c4\u03b7\u03c2.</li> <li>\u039f\u03b9 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03c4\u03c9\u03bd \u03c6\u03c5\u03c3\u03b9\u03ba\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd (\u03c0.\u03c7. \u0395\u03bb\u03bb\u03b7\u03bd\u03b9\u03ba\u03ac, \u0391\u03b3\u03b3\u03bb\u03b9\u03ba\u03ac) \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bf\u03bb\u03cd \u03c0\u03b9\u03bf \u03c0\u03b5\u03c1\u03af\u03c0\u03bb\u03bf\u03ba\u03bf\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf\u03c5\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03c4\u03c9\u03bd \u03c4\u03b5\u03c7\u03bd\u03b7\u03c4\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd (\u03c0.\u03c7. Java, Python).</li> </ul>"},{"location":"theory_ch3/#lexeme","title":"\u039b\u03ad\u03be\u03b7\u03bc\u03b1 (lexeme)","text":"<ul> <li>\u0388\u03bd\u03b1 \u03bb\u03ad\u03be\u03b7\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1 \u03c7\u03b1\u03bc\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c0\u03ad\u03b4\u03bf\u03c5 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 (\u03c0.\u03c7., *, sum, begin). </li> <li>\u03a4\u03b1 \u03bb\u03b5\u03be\u03ae\u03bc\u03b1\u03c4\u03b1 \u03b4\u03b5\u03bd \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd.</li> <li>\u0388\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b8\u03b5\u03c9\u03c1\u03b7\u03b8\u03b5\u03af \u03c9\u03c2 \u03bc\u03b9\u03b1 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1 \u03bb\u03b5\u03be\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03c0\u03b1\u03c1\u03ac \u03c9\u03c2 \u03bc\u03b9\u03b1 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03c9\u03bd.</li> </ul>"},{"location":"theory_ch3/#token","title":"\u039b\u03b5\u03ba\u03c4\u03b9\u03ba\u03ae \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1 (token)","text":"<ul> <li>\u039c\u03b9\u03b1 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ae \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1  \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03af\u03b1 \u03bb\u03b5\u03be\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd (\u03c0.\u03c7. \u03b1\u03bd\u03b1\u03b3\u03bd\u03c9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd)</li> <li>\u03a5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b5\u03c2 \u03bc\u03b5 \u03ad\u03bd\u03b1 \u03bc\u03cc\u03bd\u03bf \u03c0\u03b9\u03b8\u03b1\u03bd\u03cc \u03bb\u03ad\u03be\u03b7\u03bc\u03b1 (\u03c0.\u03c7. \u03bf \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 +)</li> </ul> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1: \u03a0\u03bf\u03b9\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03b1 \u03bb\u03b5\u03be\u03ae\u03bc\u03b1\u03c4\u03b1 \u03ba\u03b1\u03b9 \u03c0\u03bf\u03b9\u03b5\u03c2 \u03bf\u03b9 \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b5\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1;</p> <pre><code>index = 2 * count + 17;\n</code></pre> \u0391\u03c0\u03ac\u03bd\u03c4\u03b7\u03c3\u03b7 \u039b\u03ad\u03be\u03b7\u03bc\u03b1 \u039b\u03b5\u03ba\u03c4\u03b9\u03ba\u03ae \u03bc\u03bf\u03bd\u03ac\u03b4\u03b1 index \u03b1\u03bd\u03b1\u03b3\u03bd\u03c9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc = \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf_\u03af\u03c3\u03bf\u03bd 2 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b1_\u03c4\u03b9\u03bc\u03ae * \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03b1\u03c3\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd count \u03b1\u03bd\u03b1\u03b3\u03bd\u03c9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc + \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b8\u03b5\u03c3\u03b7\u03c2 17 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b1_\u03c4\u03b9\u03bc\u03ae ; \u03b5\u03c1\u03c9\u03c4\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc"},{"location":"theory_ch3/#321-recognizers","title":"3.2.1 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03bf\u03af \u03b1\u03bd\u03b1\u03b3\u03bd\u03ce\u03c1\u03b9\u03c3\u03b7\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd (recognizers)","text":"<p>\u039f\u03b9 recognizers \u03b4\u03b9\u03b1\u03b2\u03ac\u03b6\u03bf\u03c5\u03bd \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03b5\u03af\u03c3\u03bf\u03b4\u03bf \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ad\u03c2 \u03c4\u03bf\u03c5 \u03b1\u03bb\u03c6\u03b1\u03b2\u03ae\u03c4\u03bf\u03c5 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03c6\u03b1\u03c3\u03af\u03b6\u03bf\u03c5\u03bd \u03c4\u03bf \u03b5\u03ac\u03bd  \u03b1\u03bd\u03ae\u03ba\u03bf\u03c5\u03bd \u03ae \u03cc\u03c7\u03b9 \u03c3\u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1. \u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03bf\u03cd \u03b1\u03bd\u03b1\u03b3\u03bd\u03ce\u03c1\u03b9\u03c3\u03b7\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03ae\u03c2 \u03c4\u03c9\u03bd \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ce\u03bd.</p>"},{"location":"theory_ch3/#322-generators","title":"3.2.2 \u039c\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03bf\u03af \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd (generators)","text":"<p>\u039f\u03b9 generators \u03c0\u03b1\u03c1\u03ac\u03b3\u03bf\u03c5\u03bd \u03ad\u03b3\u03ba\u03c5\u03c1\u03b5\u03c2 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2. \u039c\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03be\u03b5\u03c4\u03b1\u03c3\u03c4\u03b5\u03af \u03b1\u03bd \u03b7 \u03c3\u03cd\u03bd\u03c4\u03b1\u03be\u03b7 \u03bc\u03b9\u03b1\u03c2 \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03b7\u03c2 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03c1\u03b8\u03ae \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c3\u03cd\u03b3\u03ba\u03c1\u03b9\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03b7 \u03b4\u03bf\u03bc\u03ae \u03c4\u03bf\u03c5 \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03bf\u03cd \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae\u03c2.</p>"},{"location":"theory_ch3/#33","title":"3.3 \u0395\u03c0\u03af\u03c3\u03b7\u03bc\u03b5\u03c2 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd","text":""},{"location":"theory_ch3/#331-backus-naur","title":"3.3.1 \u039c\u03bf\u03c1\u03c6\u03ae Backus-Naur \u03ba\u03b1\u03b9 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1","text":"<p>H BNF (Backus Naur Form) \u03ba\u03b1\u03b9 \u03bf\u03b9 CFG (Context Free Grammars) \u03b5\u03af\u03bd\u03b1\u03b9 \u03b9\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03bf\u03b9 \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03bc\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2.</p>"},{"location":"theory_ch3/#3311","title":"3.3.1.1 \u0393\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1","text":"<ul> <li>\u0391\u03bd\u03b1\u03c0\u03c4\u03cd\u03c7\u03b8\u03b7\u03ba\u03b1\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd Noam Chomsky \u03c3\u03c4\u03b1 \u03bc\u03ad\u03c3\u03b1 \u03c4\u03c9\u03bd 1950s.</li> <li>\u0395\u03af\u03c7\u03b1\u03bd \u03c9\u03c2 \u03c3\u03c4\u03cc\u03c7\u03bf \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03c4\u03c9\u03bd \u03c6\u03c5\u03c3\u03b9\u03ba\u03ce\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd.</li> <li>\u039f\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03bc\u03b9\u03b1 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03af\u03b1 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03bf\u03c5 \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1.</li> </ul>"},{"location":"theory_ch3/#3312-backus-naur","title":"3.3.1.2 \u03a0\u03c1\u03bf\u03ad\u03bb\u03b5\u03c5\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2 Backus-Naur","text":"<ul> <li>\u03a0\u03c1\u03bf\u03c4\u03ac\u03b8\u03b7\u03ba\u03b1\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd John Backus \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03ac\u03c8\u03bf\u03c5\u03bd \u03c4\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03c4\u03b7\u03c2 Algol 58.</li> <li>\u03a4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03b9\u03ae\u03b8\u03b7\u03ba\u03b1\u03bd \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd Peter Naur \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03b7\u03c2 Algol 60.</li> <li>\u0397 BNF \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1\u03c2 \u03c6\u03c5\u03c3\u03b9\u03ba\u03cc\u03c2 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd.</li> <li>\u0397 BNF \u03b5\u03af\u03bd\u03b1\u03b9 \u03b9\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03b7 \u03bc\u03b5 \u03c4\u03b9\u03c2 CFGs.</li> </ul>"},{"location":"theory_ch3/#3313-bnf","title":"3.3.1.3 \u0392\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03ad\u03bd\u03bd\u03bf\u03b9\u03b5\u03c2 BNF","text":"<ul> <li>H BNF \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bc\u03b5\u03c4\u03b1-\u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03b3\u03b9\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd.</li> <li>\u039c\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac (non-terminals): \u03b1\u03c6\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b9\u03c3\u03c4\u03bf\u03cd\u03bd \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03af\u03b5\u03c2 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03b4\u03bf\u03bc\u03ce\u03bd.</li> <li>\u03a4\u03b1 \u03bc\u03b7 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03b5\u03c3\u03c9\u03ba\u03bb\u03b5\u03af\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 <code>&lt;&gt;</code>, \u03c0.\u03c7. <code>&lt;var&gt;</code>.</li> <li>\u03a4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac (terminals): \u03bb\u03b5\u03be\u03ae\u03bc\u03b1\u03c4\u03b1 \u03ae \u03bb\u03b5\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bc\u03bf\u03bd\u03ac\u03b4\u03b5\u03c2.</li> <li>\u03a3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf \u03ad\u03bd\u03b1\u03c1\u03be\u03b7\u03c2: \u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b1 \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03b1.</li> <li>\u039a\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 BNF: \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03cc \u03bc\u03ad\u03c1\u03bf\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03ba\u03b1\u03b9 \u03b1\u03c0\u03cc \u03b4\u03b5\u03be\u03b9\u03cc \u03bc\u03ad\u03c1\u03bf\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ac \u03b1\u03c0\u03cc \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03ba\u03b1\u03b9/\u03ae \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac.</li> <li>\u039c\u03b5 \u03c4\u03b7 BNF \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03ac\u03c6\u03bf\u03bd\u03c4\u03b1\u03b9:<ul> <li>\u039b\u03af\u03c3\u03c4\u03b5\u03c2 \u03c0\u03b1\u03c1\u03cc\u03bc\u03bf\u03b9\u03c9\u03bd \u03b4\u03bf\u03bc\u03ce\u03bd.</li> <li>\u0397 \u03c3\u03b5\u03b9\u03c1\u03ac \u03bc\u03b5 \u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03ad\u03bd\u03b8\u03b5\u03c4\u03b5\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03c3\u03b5 \u03bf\u03c0\u03bf\u03b9\u03bf\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03b2\u03ac\u03b8\u03bf\u03c2.</li> <li>\u03a0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd.</li> <li>\u03a0\u03c1\u03bf\u03c3\u03b5\u03c4\u03b1\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd.</li> </ul> </li> </ul> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03c4\u03b7\u03c2 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2 \u03bc\u03b5 BNF (\u03b3\u03b9\u03b1 \u03bc\u03b9\u03b1 \u03c5\u03c0\u03bf\u03b8\u03b5\u03c4\u03b9\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd):</p> <pre><code>&lt;assign&gt; -&gt; &lt;var&gt; = &lt;expression&gt;\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03ac\u03c6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1:</p> <pre><code>total = subtotal1 + subtotal2\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03ba\u03b1\u03bd\u03cc\u03bd\u03c9\u03bd BNF \u03bc\u03b5 \u03b4\u03cd\u03bf RHS (Right Hand Sides), \u03c4\u03bf \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf | \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03b5\u03b9 \u03b5\u03bd\u03b1\u03bb\u03b1\u03bb\u03ba\u03c4\u03b9\u03ba\u03ae \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03b4\u03b5\u03be\u03af \u03bc\u03ad\u03c1\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1.</p> <pre><code>&lt;if_stmt&gt; -&gt; if (&lt;logic_expr&gt;) &lt;stmt&gt;\n           | if (&lt;logic_expr&gt;) &lt;stmt&gt; else &lt;stmt&gt;\n&lt;stmt&gt; -&gt; &lt;single_stmt&gt;\n        | begin &lt;stmt_list&gt; end\n</code></pre>"},{"location":"theory_ch3/#3314","title":"3.3.1.4 \u03a0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd","text":"<p>\u039f \u03bf\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bb\u03b9\u03c3\u03c4\u03ce\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03bf\u03cd \u03bc\u03ae\u03ba\u03bf\u03c5\u03c2 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd BNF \u03bc\u03b5 \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae (\u03c4\u03bf \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c3\u03c4\u03bf \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03cc \u03bc\u03ad\u03c1\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03be\u03b1\u03bd\u03ac \u03c3\u03c4\u03bf \u03b4\u03b5\u03be\u03af \u03bc\u03ad\u03c1\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1):</p> <pre><code>&lt;identifier_list&gt; -&gt; identifier\n                   | identifier, &lt;identifier_list&gt;\n</code></pre>"},{"location":"theory_ch3/#3315","title":"3.3.1.5 \u0393\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ad\u03c2","text":"<ul> <li>\u039c\u03b9\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03b9\u03ba\u03ae \u03c3\u03c5\u03c3\u03ba\u03b5\u03c5\u03ae \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03bf\u03c1\u03b9\u03c3\u03bc\u03cc \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd.</li> <li>\u039c\u03b9\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae (derivation) \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b5\u03c0\u03b1\u03bd\u03b1\u03bb\u03b1\u03bc\u03b2\u03b1\u03bd\u03cc\u03bc\u03b5\u03bd\u03b7 \u03b5\u03c6\u03b1\u03c1\u03bc\u03bf\u03b3\u03ae \u03ba\u03b1\u03bd\u03cc\u03bd\u03c9\u03bd, \u03be\u03b5\u03ba\u03b9\u03bd\u03ce\u03bd\u03c4\u03b1\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf \u03b1\u03c1\u03c7\u03b9\u03ba\u03cc \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf \u03ba\u03b1\u03b9 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03bc\u03cc\u03bd\u03bf \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03b1.</li> </ul> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2: </p> <pre><code>&lt;program&gt; -&gt; &lt;stmts&gt;\n&lt;stmts&gt; -&gt; &lt;stmt&gt; \n         | &lt;stmt&gt; ; &lt;stmts&gt;\n&lt;stmt&gt; -&gt; &lt;var&gt; = &lt;expr&gt;\n&lt;var&gt; -&gt; a | b | c | d\n&lt;expr&gt; -&gt; &lt;term&gt; + &lt;term&gt; \n        | &lt;term&gt; - &lt;term&gt;\n&lt;term&gt; -&gt; &lt;var&gt; | const\n</code></pre> <p>\u03a0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03c4\u03b7\u03c2 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7\u03c2 <code>a = b + const</code> (\u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ce\u03bd\u03c4\u03b1\u03c2 \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ad\u03c2):</p> <p><pre><code>&lt;program&gt;   =&gt; &lt;stmts&gt;              &lt;-- sentential form\n            =&gt; &lt;stmt&gt;               &lt;-- sentential form\n            =&gt; &lt;var&gt; = &lt;expr&gt;       &lt;-- sentential form\n            =&gt; a = &lt;expr&gt;           &lt;-- sentential form\n            =&gt; a = &lt;term&gt; + &lt;term&gt;  &lt;-- sentential form\n            =&gt; a = &lt;var&gt; + &lt;term&gt;   &lt;-- sentential form\n            =&gt; a = b + &lt;term&gt;       &lt;-- sentential form\n            =&gt; a = b + const        &lt;-- sentence (\u03bc\u03cc\u03bd\u03bf \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03b1)\n</code></pre> \u0388\u03bd\u03b1 \u03b1\u03ba\u03cc\u03bc\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 (\u03b3\u03b9\u03b1 \u03b1\u03c0\u03bb\u03ad\u03c2 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2):</p> <pre><code>&lt;assign&gt; -&gt; &lt;id&gt; = &lt;expr&gt;\n&lt;id&gt;     -&gt; A | B | C\n&lt;expr&gt;   -&gt; &lt;id&gt; + &lt;expr&gt;\n          | &lt;id&gt; * &lt;expr&gt;\n          | ( &lt;expr&gt; )\n          | &lt;id&gt;\n</code></pre> <p>\u03a0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03c4\u03b7\u03c2 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7\u03c2 <code>A = B * (A + C)</code>:</p> <pre><code>&lt;assign&gt;    =&gt; &lt;id&gt; = &lt;expr&gt;\n            =&gt; A = &lt;expr&gt;\n            =&gt; A = &lt;id&gt; * &lt;expr&gt;\n            =&gt; A = B * &lt;expr&gt;\n            =&gt; A = B * ( &lt;expr&gt;)\n            =&gt; A = B * ( &lt;id&gt; + &lt;expr&gt;)\n            =&gt; A = B * ( A + &lt;expr&gt;)\n            =&gt; A = B * ( A + &lt;id&gt;)\n            =&gt; A = B * ( A + C )\n</code></pre>"},{"location":"theory_ch3/#3316","title":"3.3.1.6 \u0394\u03ad\u03bd\u03b4\u03c1\u03b1 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2","text":"<ul> <li>\u03a4\u03b1 \u03b4\u03ad\u03bd\u03b4\u03c1\u03b1 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 (parse trees) \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd \u03b9\u03b5\u03c1\u03b1\u03c1\u03c7\u03b9\u03ba\u03ad\u03c2 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03b1\u03c3\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ce\u03bd.</li> <li>\u039a\u03ac\u03b8\u03b5 \u03b5\u03c3\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03cc\u03c2 \u03ba\u03cc\u03bc\u03b2\u03bf\u03c2 \u03b5\u03bd\u03cc\u03c2 parse tree \u03c3\u03b7\u03bc\u03b5\u03b9\u03ce\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03ad\u03bd\u03b1 \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf \u03ba\u03b1\u03b9 \u03ba\u03ac\u03b8\u03b5 \u03c6\u03cd\u03bb\u03bb\u03bf \u03bc\u03b5 \u03ad\u03bd\u03b1 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf.</li> </ul> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1: \u03a4\u03bf parse tree \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 <code>A = B * (A + C)</code>:</p> <p></p>"},{"location":"theory_ch3/#3317","title":"3.3.1.7 \u0391\u03c3\u03ac\u03c6\u03b5\u03b9\u03b1","text":"<p>\u039c\u03b9\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03bf\u03c5 \u03c0\u03b1\u03c1\u03ac\u03b3\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03c0\u03c1\u03bf\u03c4\u03b1\u03c3\u03b9\u03b1\u03ba\u03ae \u03bc\u03bf\u03c1\u03c6\u03ae \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03b4\u03cd\u03bf \u03ae \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b1 \u03b4\u03b9\u03b1\u03ba\u03c1\u03b9\u03c4\u03ac \u03b4\u03ad\u03bd\u03b4\u03c1\u03b1 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u03bb\u03ad\u03bc\u03b5 \u03cc\u03c4\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c3\u03b1\u03c6\u03ae\u03c2 (ambiquous).</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b1\u03c3\u03b1\u03c6\u03bf\u03cd\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2: </p> <pre><code>&lt;assign&gt; -&gt; &lt;id&gt; = &lt;expr&gt;\n&lt;id&gt; -&gt; A | B | C\n&lt;expr&gt; -&gt; &lt;expr&gt; + &lt;expr&gt;\n        | &lt;expr&gt; * &lt;expr&gt;\n        | (&lt;expr&gt;)\n        | &lt;id&gt;\n</code></pre> <p>\u0393\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 <code>A = B + C * A</code> \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03bf\u03c5\u03bd \u03b4\u03cd\u03bf \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ac \u03b4\u03ad\u03bd\u03b4\u03c1\u03b1 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2:</p> <p></p>"},{"location":"theory_ch3/#3318","title":"3.3.1.8 \u03a0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd","text":"<p>\u0391\u03bd \u03ad\u03bd\u03b1\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ae \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 \u03c0\u03b1\u03c1\u03ac\u03b3\u03b5\u03c4\u03b1\u03b9 \u03c7\u03b1\u03bc\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b1 \u03c3\u03c4\u03bf \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 (\u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b5\u03c0\u03ce\u03c2 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b9\u03bc\u03b7\u03b8\u03b5\u03af \u03c0\u03c1\u03ce\u03c4\u03bf\u03c2) \u03c4\u03cc\u03c4\u03b5 \u03ad\u03c7\u03b5\u03b9 \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c9\u03c2 \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03b1\u03c1\u03ac\u03b3\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c5\u03c8\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b1 \u03c3\u03c4\u03bf \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03b1\u03c6\u03bf\u03cd\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 (\u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 3.4 \u03c4\u03bf\u03c5 \u03b2\u03b9\u03b2\u03bb\u03af\u03bf\u03c5): </p> <pre><code>&lt;assign&gt; -&gt; &lt;id&gt; = &lt;expr&gt;\n&lt;id&gt; -&gt; A | B | C\n&lt;expr&gt; -&gt; &lt;expr&gt; + &lt;term&gt;\n        | &lt;term&gt;\n&lt;term&gt; -&gt; &lt;term&gt; * &lt;factor&gt;\n        | &lt;factor&gt;\n&lt;factor&gt; -&gt; ( &lt;expr&gt; )\n          | &lt;id&gt;\n</code></pre> <p>\u03a0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03c4\u03b7\u03c2 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7\u03c2 <code>A = B + C * A</code> (\u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ad\u03c2):</p> <pre><code>&lt;assign&gt;    =&gt; &lt;id&gt; = &lt;expr&gt;\n            =&gt; A = &lt;expr&gt;\n            =&gt; A = &lt;expr&gt; + &lt;term&gt;\n            =&gt; A = &lt;term&gt; + &lt;term&gt;\n            =&gt; A = &lt;factor&gt; + &lt;term&gt;\n            =&gt; A = &lt;id&gt; + &lt;term&gt;\n            =&gt; A = B + &lt;term&gt;\n            =&gt; A = B + &lt;term&gt; * &lt;factor&gt;\n            =&gt; A = B + &lt;factor&gt; * &lt;factor&gt;\n            =&gt; A = B + &lt;id&gt; * &lt;factor&gt;\n            =&gt; A = B + C * &lt;factor&gt;\n            =&gt; A = B + C * &lt;id&gt;\n            =&gt; A = B + C * A\n</code></pre> <p>\u03a0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03c4\u03b7\u03c2 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7\u03c2 <code>A = B + C * A</code> (\u03bc\u03b5 \u03b4\u03b5\u03be\u03b9\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ad\u03c2):</p> <pre><code>&lt;assign&gt;    =&gt; &lt;id&gt; = &lt;expr&gt;\n            =&gt; &lt;id&gt; = &lt;expr&gt; + &lt;term&gt;\n            =&gt; &lt;id&gt; = &lt;expr&gt; + &lt;term&gt; * &lt;factor&gt;\n            =&gt; &lt;id&gt; = &lt;expr&gt; + &lt;term&gt; * &lt;id&gt;\n            =&gt; &lt;id&gt; = &lt;expr&gt; + &lt;term&gt; * A\n            =&gt; &lt;id&gt; = &lt;expr&gt; + &lt;factor&gt; * A\n            =&gt; &lt;id&gt; = &lt;expr&gt; + &lt;id&gt; * A\n            =&gt; &lt;id&gt; = &lt;expr&gt; + C * A\n            =&gt; &lt;id&gt; = &lt;term&gt; + C * A\n            =&gt; &lt;id&gt; = &lt;factor&gt; + C * A\n            =&gt; &lt;id&gt; = &lt;id&gt; + C * A\n            =&gt; &lt;id&gt; = B + C * A\n            =&gt; A = B + C * A\n</code></pre> <p>\u03a4\u03bf \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9 (\u03ba\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03b4\u03cd\u03bf \u03c0\u03b5\u03c1\u03b9\u03c0\u03c4\u03ce\u03c3\u03b5\u03b9\u03c2) \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf:</p> <p></p> <p>\u039a\u03ac\u03b8\u03b5 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03bc\u03b5 \u03c3\u03b1\u03c6\u03ae \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03ad\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03ba\u03b1\u03b9 \u03bc\u03bf\u03bd\u03b1\u03b4\u03b9\u03ba\u03cc \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c8\u03b5\u03b9 \u03b1\u03c0\u03cc \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ad\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03c3\u03b1\u03c6\u03bf\u03cd\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2.</p>"},{"location":"theory_ch3/#3319","title":"3.3.1.9 \u03a0\u03c1\u03bf\u03c3\u03b5\u03c4\u03b1\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd","text":"<p>\u038c\u03c4\u03b1\u03bd \u03bc\u03b9\u03b1 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7 \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03b4\u03cd\u03bf \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03af\u03b4\u03b9\u03b1 \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 (\u03c0.\u03c7. * \u03ba\u03b1\u03b9 /) \u03c4\u03cc\u03c4\u03b5 \u03b1\u03c0\u03b1\u03b9\u03c4\u03b5\u03af\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 \u03c0\u03c1\u03bf\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bd\u03b1 \u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03c4\u03b5\u03af \u03c0\u03bf\u03b9\u03bf\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 (\u03c0.\u03c7. <code>A / B * C</code>). O \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 \u03b1\u03c5\u03c4\u03cc\u03c2 \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c3\u03b5\u03c4\u03b1\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1.</p> <ul> <li>\u0391\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03ae \u03c0\u03c1\u03bf\u03c3\u03b5\u03c4\u03b1\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1: +, -, *, /<ul> <li><code>1 + 2 + 3 =&gt; 3 + 3 =&gt; 6</code></li> </ul> </li> <li>\u0394\u03b5\u03be\u03b9\u03ac \u03c0\u03c1\u03bf\u03c3\u03b5\u03c4\u03b1\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1: ^ (\u03cd\u03c8\u03c9\u03c3\u03b7 \u03c3\u03b5 \u03b4\u03cd\u03bd\u03b1\u03bc\u03b7)<ul> <li><code>2^2^3 =&gt; 2^8 =&gt; 256</code></li> </ul> </li> </ul> <p>\u0397 \u03c0\u03c1\u03bf\u03c3\u03b5\u03c4\u03b1\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03ad\u03c3\u03c9 \u03c4\u03b7\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2.</p> <p>\u0397 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c3\u03b1\u03c6\u03ae\u03c2:  </p> <pre><code>&lt;expr&gt; -&gt; &lt;expr&gt; + &lt;expr&gt; \n        | &lt;id&gt;\n</code></pre> <p>\u0397 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03b1\u03c6\u03ae\u03c2 (\u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03ae \u03c0\u03c1\u03bf\u03c3\u03b5\u03c4\u03b1\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1):</p> <pre><code>&lt;expr&gt; -&gt; &lt;expr&gt; + &lt;id&gt; \n        | &lt;id&gt;\n</code></pre> <p>\u03a0\u03b1\u03c1\u03b1\u03c4\u03b7\u03c1\u03ae\u03c3\u03c4\u03b5 \u03cc\u03c4\u03b9 \u03bf \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03ac \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03b9\u03ba\u03cc\u03c2.</p> <p>\u0397 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03b1\u03c6\u03ae\u03c2 (\u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03b4\u03b5\u03be\u03b9\u03ac \u03c0\u03c1\u03bf\u03c3\u03b5\u03c4\u03b1\u03b9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1):</p> <pre><code>&lt;factor&gt; -&gt; &lt;exp&gt; ^ &lt;factor&gt;\n          | &lt;exp&gt;\n&lt;exp&gt; -&gt; ( &lt;expr&gt; )\n       | id\n</code></pre> <p>\u03a0\u03b1\u03c1\u03b1\u03c4\u03b7\u03c1\u03ae\u03c3\u03c4\u03b5 \u03cc\u03c4\u03b9 \u03bf 1\u03bf\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b5\u03be\u03b9\u03ac \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03b9\u03ba\u03cc\u03c2.</p>"},{"location":"theory_ch3/#33110-if-else","title":"3.3.1.10 \u039c\u03b9\u03b1 \u03b1\u03c3\u03b1\u03c6\u03ae\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03b3\u03b9\u03b1 \u03c4\u03bf if-else","text":"<p>\u0393\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae (\u03b1\u03c3\u03b1\u03c6\u03ae\u03c2):</p> <pre><code>&lt;if_stmt&gt; -&gt;    if (&lt;logic_expr&gt;) &lt;stmt&gt;\n                if (&lt;logic_expr&gt;) &lt;stmt&gt; else &lt;stmt&gt;\n&lt;stmt&gt; -&gt; &lt;if_stmt&gt; \n</code></pre> <p>\u03a0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7:</p> <pre><code>if (&lt;logic_expr&gt;) if (&lt;logic_expr&gt;) &lt;stmt&gt; else &lt;stmt&gt;\n</code></pre> <p>\u0394\u03ad\u03bd\u03b4\u03c1\u03b1 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 (\u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03b4\u03cd\u03bf, \u03bb\u03cc\u03b3\u03c9 \u03b1\u03c3\u03b1\u03c6\u03bf\u03cd\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2):</p> <p></p> <p>\u0393\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae (\u03c3\u03b1\u03c6\u03ae\u03c2):</p> <pre><code>&lt;stmt&gt; -&gt; &lt;matched&gt; | &lt;unmatched&gt;\n&lt;matched&gt;   -&gt; if (&lt;logic_expr&gt;) &lt;matched&gt; else &lt;matched&gt;\n             | any non-if statement\n&lt;unmatched&gt; -&gt; if (&lt;logic_expr&gt;) &lt;stmt&gt;\n             | if (&lt;logic_expr&gt;) &lt;matched&gt; else &lt;unmatched&gt;\n</code></pre> <p>\u0393\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7:</p> <pre><code>if (&lt;logic_expr&gt;) if (&lt;logic_expr&gt;) &lt;stmt&gt; else &lt;stmt&gt;\n</code></pre> <p>\u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03bc\u03cc\u03bd\u03bf \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7.</p>"},{"location":"theory_ch3/#332-bnf-extended-bnf","title":"3.3.2 \u0395\u03ba\u03c4\u03b5\u03c4\u03b1\u03bc\u03ad\u03bd\u03b7 BNF (Extended BNF)","text":"<p>\u0397 \u03b5\u03ba\u03c4\u03b5\u03c4\u03b1\u03bc\u03ad\u03bd\u03b7 BNF \u03b4\u03b5\u03bd \u03b5\u03bd\u03b9\u03c3\u03c7\u03cd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03b9\u03ba\u03ae \u03b4\u03cd\u03bd\u03b1\u03bc\u03b7 \u03c4\u03b7\u03c2 BNF, \u03b1\u03c0\u03bb\u03ac \u03b1\u03c5\u03be\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b5\u03c5\u03ba\u03bf\u03bb\u03af\u03b1 \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c4\u03bf\u03c5.\u03a4\u03c1\u03b5\u03b9\u03c2 \u03b5\u03c0\u03b5\u03ba\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2:</p> <p>1) \u03a0\u03c1\u03bf\u03b1\u03b9\u03c1\u03b5\u03c4\u03b9\u03ba\u03ac \u03c4\u03bc\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c4\u03bf\u03c5 RHS \u03c4\u03bf\u03c0\u03bf\u03b8\u03b5\u03c4\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b1\u03b3\u03ba\u03cd\u03bb\u03b5\u03c2 []</p> <p>\u0391\u03bd\u03c4\u03af \u03b3\u03b9\u03b1:</p> <pre><code>&lt;if_stmt&gt; -&gt; if (&lt;expression&gt;) &lt;statement&gt;\n           | if (&lt;expression&gt;) &lt;statement&gt; else &lt;statement&gt;\n</code></pre> <p>\u03c3\u03b5 EBNF \u03b3\u03c1\u03ac\u03c6\u03bf\u03c5\u03bc\u03b5:</p> <pre><code>&lt;if_stmt&gt; \u2192 if (&lt;expression&gt;) &lt;statement&gt; [else &lt;statement&gt;]\n</code></pre> <p>2) \u03a7\u03c1\u03ae\u03c3\u03b7 \u03b1\u03b3\u03ba\u03c5\u03bb\u03ce\u03bd {} \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03bd\u03bf\u03c5\u03bd \u03cc\u03c4\u03b9 \u03c4\u03bf \u03c4\u03bc\u03ae\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03b5\u03c3\u03c9\u03ba\u03bb\u03b5\u03af\u03b5\u03c4\u03b1\u03b9 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03c0\u03b1\u03bd\u03b1\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03b5\u03c1\u03b9\u03cc\u03c1\u03b9\u03c3\u03c4\u03b1 \u03ae \u03bd\u03b1 \u03b1\u03c0\u03bf\u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03b5\u03af \u03b5\u03bd\u03c4\u03b5\u03bb\u03ce\u03c2.</p> <p>\u0391\u03bd\u03c4\u03af \u03b3\u03b9\u03b1:</p> <pre><code>&lt;identifier_list&gt; -&gt; identifier\n                   | identifier, &lt;identifier_list&gt;\n</code></pre> <p>\u03c3\u03b5 EBNF \u03b3\u03c1\u03ac\u03c6\u03bf\u03c5\u03bc\u03b5:</p> <pre><code>&lt;identifier_list&gt; -&gt; identifier {, identifier}\n</code></pre> <p>3) \u03a7\u03c1\u03ae\u03c3\u03b7 \u03c0\u03b1\u03c1\u03b5\u03bd\u03b8\u03ad\u03c3\u03b5\u03c9\u03bd \u03ba\u03b1\u03b9 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae | \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9 \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ae\u03c2 \u03b5\u03bd\u03cc\u03c2 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf\u03c5 \u03b1\u03c0\u03cc \u03bc\u03b9\u03b1 \u03bf\u03bc\u03ac\u03b4\u03b1 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03c9\u03bd</p> <p>\u0391\u03bd\u03c4\u03af \u03b3\u03b9\u03b1:</p> <pre><code>&lt;term&gt; -&gt; &lt;term&gt; * &lt;factor&gt;\n        | &lt;term&gt; / &lt;factor&gt;\n        | &lt;term&gt; % &lt;factor&gt;\n</code></pre> <p>\u03c3\u03b5 EBNF \u03b3\u03c1\u03ac\u03c6\u03bf\u03c5\u03bc\u03b5:</p> <pre><code>&lt;term&gt; -&gt; &lt;term&gt; (* | / | %) &lt;factor&gt;\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b5 BNF \u03ba\u03b1\u03b9 \u03b9\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03b7\u03c2 \u03c3\u03b5 EBNF</p> <p>BNF</p> <pre><code>&lt;expr&gt; -&gt; &lt;expr&gt; + &lt;term&gt;\n        | &lt;expr&gt; - &lt;term&gt;\n        | &lt;term&gt;\n&lt;term&gt; -&gt; &lt;term&gt; * &lt;factor&gt;\n        | &lt;term&gt; / &lt;factor&gt;\n        | &lt;factor&gt;\n&lt;factor&gt; -&gt; &lt;exp&gt; ^ &lt;factor&gt;\n          | &lt;exp&gt;\n&lt;exp&gt; -&gt; (&lt;expr&gt;)\n       | id\n</code></pre> <p>EBNF (\u03b9\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03bf \u03bc\u03b5 \u03c4\u03bf \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03c3\u03b5 BNF)</p> <pre><code>&lt;expr&gt; -&gt; &lt;term&gt; {(+ | -) &lt;term&gt;}\n&lt;term&gt; -&gt; &lt;factor&gt; {(* | /) &lt;factor&gt;}\n&lt;factor&gt; -&gt; &lt;exp&gt; { ^ &lt;exp&gt;}\n&lt;exp&gt; -&gt; (&lt;expr&gt;) | id\n</code></pre> <p>\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c0\u03b1\u03c1\u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03c3\u03c4\u03b7\u03bd EBNF</p> <ul> <li>\u0395\u03bd\u03b1\u03bb\u03bb\u03b1\u03ba\u03c4\u03b9\u03ba\u03ac RHS \u03c4\u03bf\u03c0\u03bf\u03b8\u03b5\u03c4\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03be\u03b5\u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03ad\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03c2 \u03b1\u03bd\u03c4\u03af \u03b3\u03b9\u03b1 |</li> <li>\u03a7\u03c1\u03ae\u03c3\u03b7 : \u03b1\u03bd\u03c4\u03af \u03b3\u03b9\u03b1 -&gt;</li> <li>\u03a7\u03c1\u03ae\u03c3\u03b7 opt \u03b3\u03b9\u03b1 \u03c0\u03c1\u03bf\u03b1\u03b9\u03c1\u03b5\u03c4\u03b9\u03ba\u03ac \u03bc\u03ad\u03c1\u03b7, \u03b1\u03bd\u03c4\u03af \u03b3\u03b9\u03b1 \u03b1\u03b3\u03ba\u03cd\u03bb\u03b5\u03c2 [ ]</li> <li>\u03a7\u03c1\u03ae\u03c3\u03b7 oneof \u03b3\u03b9\u03b1 \u03b5\u03c0\u03b9\u03bb\u03bf\u03b3\u03ad\u03c2 \u03b1\u03bd\u03c4\u03af \u03b3\u03b9\u03b1 \u03c0\u03b1\u03c1\u03b5\u03bd\u03b8\u03ad\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 |</li> </ul>"},{"location":"theory_ch3/#333-recognizers","title":"3.3.3 \u0393\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03ba\u03b1\u03b9 recognizers","text":"<p>\u0394\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1, \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03b1\u03c3\u03c4\u03b5\u03af \u03b1\u03c5\u03c4\u03cc\u03bc\u03b1\u03c4\u03b1 \u03ad\u03bd\u03b1\u03c2 \u03b1\u03bd\u03b1\u03b3\u03bd\u03c9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\u03c2 (recognizer) \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b3\u03b9\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2. \u03a3\u03c5\u03bd\u03b5\u03c0\u03ce\u03c2, \u03b7 \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03b1\u03bd\u03b1\u03bb\u03c5\u03c4\u03ae \u03b3\u03b9\u03b1 \u03bc\u03b9\u03b1 \u03bd\u03ad\u03b1 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03c5\u03c4\u03bf\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03bc\u03b5 \u03b5\u03c1\u03b3\u03b1\u03bb\u03b5\u03af\u03b1 \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03b9\u03ba\u03bf\u03cd \u03cc\u03c0\u03c9\u03c2 \u03c4\u03bf yacc, \u03c4\u03bf bison \u03ba.\u03b1.</p>"},{"location":"theory_ch3/#34","title":"3.4 \u0393\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd (\u03ae \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b9\u03ba\u03ad\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2)","text":"<p>\u039c\u03b9\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd (attribute grammar) \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03b9 \u03bd\u03b1 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03ac\u03c8\u03b5\u03b9 \u03c4\u03b7 \u03b4\u03bf\u03bc\u03ae \u03bc\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03ba\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b1 \u03b1\u03c0\u03cc \u03bc\u03b9\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1.</p>"},{"location":"theory_ch3/#341","title":"3.4.1 \u03a3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1","text":"<p>\u039a\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2: \u03c0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03c4\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03bf\u03cd \u03c4\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c0\u03bf\u03c5 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03b5\u03bb\u03b5\u03b3\u03c7\u03b8\u03bf\u03cd\u03bd \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03bf\u03c0\u03bf\u03af\u03bf\u03b9 \u03b5\u03af\u03c4\u03b5 \u03b4\u03b5\u03bd \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03bf\u03c1\u03b9\u03c3\u03c4\u03bf\u03cd\u03bd \u03bc\u03b5 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1 \u03b5\u03af\u03c4\u03b5 \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5\u03bd \u03b1\u03bb\u03bb\u03ac \u03bc\u03b5 \u03b4\u03cd\u03c3\u03c7\u03c1\u03b7\u03c3\u03c4\u03bf \u03c4\u03c1\u03cc\u03c0\u03bf. </p>"},{"location":"theory_ch3/#342","title":"3.4.2 \u0392\u03b1\u03c3\u03b9\u03ba\u03ad\u03c2 \u03ad\u03bd\u03bd\u03bf\u03b9\u03b5\u03c2","text":"<p>\u039f\u03b9 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1 \u03c3\u03c4\u03b9\u03c2 \u03bf\u03c0\u03bf\u03af\u03b5\u03c2 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c0\u03c1\u03bf\u03c3\u03c4\u03b5\u03b8\u03b5\u03af:</p> <ol> <li>\u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac: \u03c3\u03c7\u03b5\u03c4\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03ba\u03b1\u03b9 \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03b1 \u03ba\u03b1\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03b1\u03c1\u03cc\u03bc\u03bf\u03b9\u03b1 \u03bc\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03ba\u03b1\u03b8\u03ce\u03c2 \u03b4\u03ad\u03c7\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2</li> <li>\u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd: \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c4\u03bf\u03bd \u03c4\u03c1\u03cc\u03c0\u03bf \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd \u03c4\u03c9\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd</li> <li>\u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03ae\u03bc\u03b1\u03c4\u03b1: \u03b5\u03ba\u03c6\u03c1\u03ac\u03b6\u03bf\u03c5\u03bd \u03c4\u03bf\u03c5\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03bf\u03cd\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2</li> </ol>"},{"location":"theory_ch3/#343","title":"3.4.3 \u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd","text":"<p>\u039c\u03b9\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c7\u03c9\u03c1\u03af\u03c2 \u03c3\u03c5\u03bc\u03c6\u03c1\u03b1\u03b6\u03cc\u03bc\u03b5\u03bd\u03b1 \u03cc\u03c0\u03bf\u03c5:</p> <ol> <li>\u0393\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03c3\u03cd\u03bc\u03b2\u03bf\u03bb\u03bf \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c4\u03b9\u03bc\u03ce\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u0391(\u03a7).</li> <li>\u0393\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c4\u03bf\u03c5 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1</li> <li>\u0393\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03c0\u03bf\u03c5 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b4\u03b9\u03b1\u03c3\u03c6\u03b1\u03bb\u03b9\u03c3\u03c4\u03b5\u03af \u03b7 \u03c3\u03c5\u03bd\u03ad\u03c0\u03b5\u03b9\u03b1 \u03c4\u03c9\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd</li> </ol> <p>\u0388\u03c3\u03c4\u03c9 \u03ad\u03bd\u03b1\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2:</p> <pre><code>\u03a70 -&gt; \u03a71 ... \u03a7n\n</code></pre> <p>\u03a4\u03b1 \u03bb\u03b5\u03b3\u03cc\u03bc\u03b5\u03bd\u03b1 \u03c3\u03c5\u03bd\u03c4\u03b9\u03b8\u03ad\u03bc\u03b5\u03bd\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac (synthesized attributes) \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c4\u03b7\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2:</p> <pre><code>S(X0) = f(A(X1), ..., A(Xn))\n</code></pre> <p>\u0394\u03b7\u03bb\u03b1\u03b4\u03ae, \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b5\u03bd\u03cc\u03c2 \u03c3\u03c5\u03bd\u03c4\u03b9\u03b8\u03ad\u03bc\u03b5\u03bd\u03bf\u03c5 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03bf\u03cd \u03c3\u03b5 \u03ad\u03bd\u03b1\u03bd \u03ba\u03cc\u03bc\u03b2\u03bf \u03c4\u03bf\u03c5 \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u03b5\u03be\u03b1\u03c1\u03c4\u03ac\u03c4\u03b1\u03b9 \u03bc\u03cc\u03bd\u03bf \u03b1\u03c0\u03cc \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03c3\u03b5 \u03ba\u03cc\u03bc\u03b2\u03bf\u03c5\u03c2 \u03c0\u03b1\u03b9\u03b4\u03b9\u03ac \u03b1\u03c5\u03c4\u03bf\u03cd \u03c4\u03bf\u03c5 \u03ba\u03cc\u03bc\u03b2\u03bf\u03c5.</p> <p>\u03a4\u03b1 \u03bb\u03b5\u03b3\u03cc\u03bc\u03b5\u03bd\u03b1 \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03bf\u03cd\u03bc\u03b5\u03bd\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac (inherited attributes) \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c4\u03b7\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2:</p> <pre><code>I(Xj) = f(A(X0), ..., A(Xn)) \u03b3\u03b9\u03b1 1 &lt;= j &lt;= n\n</code></pre> <p>\u0394\u03b7\u03bb\u03b1\u03b4\u03ae, \u03b7 \u03c4\u03b9\u03bc\u03ae \u03b5\u03bd\u03cc\u03c2 \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf\u03c5 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03bf\u03cd \u03c3\u03b5 \u03ad\u03bd\u03b1\u03bd \u03ba\u03cc\u03bc\u03b2\u03bf \u03c4\u03bf\u03c5 \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u03b5\u03be\u03b1\u03c1\u03c4\u03ac\u03c4\u03b1\u03b9 \u03bc\u03cc\u03bd\u03bf \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03bf\u03c5 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03c4\u03bf\u03c5 \u03b3\u03bf\u03bd\u03ad\u03b1 \u03c4\u03bf\u03c5 \u03ba\u03b1\u03b9 \u03c4\u03c9\u03bd \u03ac\u03bb\u03bb\u03c9\u03bd \u03c0\u03b1\u03b9\u03b4\u03b9\u03ce\u03bd \u03c4\u03bf\u03c5 \u03b3\u03bf\u03bd\u03ad\u03b1 \u03c4\u03bf\u03c5.</p> <p>\u03a4\u03b1 \u03c3\u03c5\u03bd\u03c4\u03b9\u03b8\u03ad\u03bc\u03b5\u03bd\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03bc\u03b5\u03c4\u03b1\u03b4\u03af\u03b4\u03bf\u03c5\u03bd \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03ad\u03c2 \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b5\u03c2 \u03bc\u03b5 \u03b1\u03bd\u03bf\u03b4\u03b9\u03ba\u03ae \u03c0\u03bf\u03c1\u03b5\u03af\u03b1 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2. \u03a4\u03b1 \u03ba\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03bf\u03cd\u03bc\u03b5\u03bd\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03bc\u03b5\u03c4\u03b1\u03b4\u03af\u03b4\u03bf\u03c5\u03bd \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03ad\u03c2 \u03c0\u03bb\u03b7\u03c1\u03bf\u03c6\u03bf\u03c1\u03af\u03b5\u03c2 \u03bc\u03b5 \u03ba\u03b1\u03b8\u03bf\u03b4\u03b9\u03ba\u03ae \u03ba\u03b1\u03b9 \u03c0\u03bb\u03b5\u03c5\u03c1\u03b9\u03ba\u03ae \u03c0\u03bf\u03c1\u03b5\u03af\u03b1 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2. </p> <p>\u0391\u03bd \u03ad\u03c7\u03bf\u03c5\u03bd \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03b5\u03af \u03cc\u03bb\u03b5\u03c2 \u03bf\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u03c4\u03cc\u03c4\u03b5 \u03c4\u03bf \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03bb\u03ad\u03b3\u03b5\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b9 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03bb\u03ae\u03c1\u03c9\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03bf.</p>"},{"location":"theory_ch3/#344-intrinsic-attributes","title":"3.4.4 \u0395\u03c3\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03ac \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac (intrinsic attributes)","text":"<p>\u03a4\u03b1 \u03b5\u03c3\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03ac \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03c5\u03bd\u03c4\u03b9\u03b8\u03ad\u03bc\u03b5\u03bd\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03bf\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03c9\u03bd \u03bf\u03c0\u03bf\u03af\u03c9\u03bd \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b5\u03ba\u03c4\u03cc\u03c2 \u03c4\u03bf\u03c5 \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf\u03c5 \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03b4\u03af\u03b4\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b1 \u03c6\u03cd\u03bb\u03bb\u03b1 \u03c4\u03bf\u03c5 \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf\u03c5. </p>"},{"location":"theory_ch3/#345","title":"3.4.5 \u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd","text":"<p>\u0388\u03c3\u03c4\u03c9 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc \u03bc\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2</p> <pre><code>&lt;assign&gt; -&gt; &lt;var&gt; = &lt;expr&gt;\n&lt;expr&gt; -&gt; &lt;var&gt; + &lt;var&gt;\n        | &lt;var&gt;\n&lt;var&gt; -&gt; A | B | C\n</code></pre> <p>\u0397 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03cd\u03bf \u03c4\u03cd\u03c0\u03c9\u03bd <code>int</code> \u03ba\u03b1\u03b9 <code>real</code>. \u038c\u03c4\u03b1\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03b4\u03cd\u03bf \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03c3\u03c4\u03b7 \u03b4\u03b5\u03be\u03b9\u03ac \u03c0\u03bb\u03b5\u03c5\u03c1\u03ac \u03bc\u03b9\u03b1\u03c2 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2, \u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c0\u03b1\u03c1\u03b1\u03af\u03c4\u03b7\u03c4\u03bf \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf\u03c5 \u03af\u03b4\u03b9\u03bf\u03c5 \u03c4\u03cd\u03c0\u03bf\u03c5. \u0395\u03b9\u03b4\u03b9\u03ba\u03cc\u03c4\u03b5\u03c1\u03b1 \u03b9\u03c3\u03c7\u03cd\u03b5\u03b9 \u03cc\u03c4\u03b9:</p> <ul> <li>\u03cc\u03c4\u03b1\u03bd \u03bf\u03b9 \u03c4\u03cd\u03c0\u03bf\u03b9 \u03c4\u03c9\u03bd \u03b4\u03cd\u03bf \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03b4\u03b9\u03bf\u03b9, \u03c4\u03cc\u03c4\u03b5 \u03bf \u03c4\u03cd\u03c0\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc\u03c2.</li> <li>\u03cc\u03c4\u03b1\u03bd \u03bf\u03b9 \u03c4\u03cd\u03c0\u03bf\u03b9 \u03c4\u03c9\u03bd \u03b4\u03cd\u03bf \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03b4\u03b9\u03bf\u03b9, \u03c4\u03cc\u03c4\u03b5 \u03bf \u03c4\u03cd\u03c0\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03b4\u03b9\u03bf\u03c2 \u03bc\u03b5 \u03b1\u03c5\u03c4\u03cc \u03c4\u03bf\u03bd \u03c4\u03cd\u03c0\u03bf.</li> </ul> <p>\u03a4\u03b1 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03c4\u03c9\u03bd \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c3\u03c5\u03bc\u03b2\u03cc\u03bb\u03c9\u03bd \u03b5\u03af\u03bd\u03b1\u03b9:</p> <ul> <li>actual_type: \u03a3\u03c5\u03bd\u03c4\u03b9\u03b8\u03ad\u03bc\u03b5\u03bd\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc \u03c0\u03bf\u03c5 \u03c3\u03c7\u03b5\u03c4\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03b1 \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac <code>&lt;var&gt;</code> \u03ba\u03b1\u03b9 <code>&lt;expr&gt;</code>. \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03bf\u03cd \u03c4\u03cd\u03c0\u03bf\u03c5, <code>int</code> \u03ae <code>real</code>, \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03ae \u03bc\u03b9\u03b1\u03c2 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7\u03c2. \u0391\u03bd \u03c0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae, \u03bf \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03c3\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03cc \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc (intrinsic attribute). \u0391\u03bd \u03c0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7, \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf\u03c5\u03c2 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2 \u03c4\u03c9\u03bd \u03c0\u03b1\u03b9\u03b4\u03b9\u03ce\u03bd \u03c4\u03bf\u03c5 \u03bc\u03b7 \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03bf\u03cd <code>&lt;expr&gt;</code>.</li> <li>expected_type: \u039a\u03bb\u03b7\u03c1\u03bf\u03bd\u03bf\u03bc\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc \u03c0\u03bf\u03c5 \u03c3\u03c7\u03b5\u03c4\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03bf \u03bc\u03b7-\u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc <code>&lt;expr&gt;</code>. \u03a7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03c3\u03b5\u03b9 \u03c4\u03bf\u03bd \u03c4\u03cd\u03c0\u03bf, <code>int</code> \u03ae <code>real</code>, \u03c0\u03bf\u03c5 \u03b1\u03bd\u03b1\u03bc\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7, \u03cc\u03c0\u03c9\u03c2 \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf\u03bd \u03c4\u03cd\u03c0\u03bf \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03c3\u03c4\u03bf \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03cc \u03bc\u03ad\u03c1\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae\u03c2 \u03b1\u03bd\u03ac\u03b8\u03b5\u03c3\u03b7\u03c2.</li> </ul> <p>\u0397 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03c3\u03c4\u03bf \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c4\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7:</p> <pre><code>1. \u03a3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;assign&gt; -&gt; &lt;var&gt; = &lt;expr&gt;\n   \u03a3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;expr&gt;.expected_type = &lt;var&gt;.actual_type\n\n2. \u03a3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;expr&gt; -&gt; &lt;var&gt;[2] + &lt;var&gt;[3]\n   \u03a3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: \n    &lt;expr&gt;.actual_type =\n    if (&lt;var&gt;[2].actual_type = int_type) and (&lt;var&gt;[3].actual_type = int_type) then \n      int_type\n    else \n      real_type\n    end if\n   \u039a\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1: &lt;expr&gt;.actual_type == &lt;expr&gt;.expected_type\n\n3. \u03a3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;expr&gt; -&gt; &lt;var&gt;\n   \u03a3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;expr&gt;.actual_type = &lt;var&gt;.actual_type\n   \u039a\u03b1\u03c4\u03b7\u03b3\u03cc\u03c1\u03b7\u03bc\u03b1: &lt;expr&gt;.actual_type == &lt;expr&gt;.expected_type\n\n4. \u03a3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;var&gt; -&gt; A | B | C\n  I.    \u03a3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;var&gt; -&gt; A\n        \u03a3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;var&gt;.actual_type = look-up(A.value)\n  II.   \u03a3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;var&gt; -&gt; B\n        \u03a3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;var&gt;.actual_type = look-up(B.value)\n  III.  \u03a3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;var&gt; -&gt; C\n        \u03a3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03cc\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2: &lt;var&gt;.actual_type = look-up(C.value)\n</code></pre> <p>\u0397 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 look-up \u03b5\u03bb\u03ad\u03b3\u03c7\u03b5\u03b9 \u03b1\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03cc\u03bd\u03bf\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03c3\u03c4\u03bf\u03bd \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03c3\u03c5\u03bc\u03b2\u03cc\u03bb\u03c9\u03bd \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf\u03bd \u03c4\u03cd\u03c0\u03bf \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2</p> <p>\u03a4\u03bf \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 <code>A = A + B</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf:</p> <p></p> <p>\u039c\u03b5 \u03c4\u03b7\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03c3\u03b5\u03b9\u03c1\u03ac \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03c2 \u03bf \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc\u03c2 \u03c4\u03c9\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd:</p> <pre><code>&lt;var&gt;.actual_type &lt;- look-up(A) (\u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 4)\n&lt;expr&gt;.expected_type &lt;- &lt;var&gt;.actual_type (\u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 1)\n&lt;var&gt;[2].actual_type &lt;- look-up(A) (\u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 4)\n&lt;var&gt;[3].actual_type &lt;- look-up(B) (\u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 4)\n&lt;expr&gt;.actual_type &lt;- \u03b5\u03af\u03c4\u03b5 int \u03b5\u03af\u03c4\u03b5 real (\u03ba\u03b1\u03bd\u03cc\u03bd\u03b1\u03c2 2)\n&lt;expr&gt;.expected_type == &lt;expr&gt;.actual_type \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03af\u03c4\u03b5 TRUE \u03b5\u03af\u03c4\u03b5 FALSE\n</code></pre> <p>\u0391\u03bd \u03c4\u03bf \u0391 \u03b5\u03af\u03bd\u03b1\u03b9 real \u03ba\u03b1\u03b9 \u03c4\u03bf B \u03b5\u03af\u03bd\u03b1\u03b9 int \u03c4\u03cc\u03c4\u03b5 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03b5\u03b9 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03b5\u03c0\u03b9\u03c3\u03b7\u03bc\u03b5\u03b9\u03c9\u03bc\u03ad\u03bd\u03bf \u03b4\u03ad\u03bd\u03b4\u03c1\u03bf \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b1\u03bd\u03ac\u03bb\u03c5\u03c3\u03b7\u03c2:</p> <p></p>"},{"location":"theory_ch3/#35","title":"3.5 \u03a0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03bf\u03c5 \u03bd\u03bf\u03ae\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd: \u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1","text":"<p>\u0394\u03b5\u03bd \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1\u03c2 \u03ba\u03bf\u03b9\u03bd\u03ac \u03b1\u03c0\u03bf\u03b4\u03b5\u03ba\u03c4\u03cc\u03c2 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03c3\u03bc\u03cc\u03c2 \u03ae \u03c6\u03bf\u03c1\u03bc\u03b1\u03bb\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03b7\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2 \u03c4\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd. \u039f\u03b9 3 \u03ba\u03cd\u03c1\u03b9\u03bf\u03b9 \u03c4\u03c1\u03cc\u03c0\u03bf\u03b9 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae\u03c2 \u03c4\u03b7\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9:</p> <ul> <li>\u039b\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1</li> <li>\u0394\u03b7\u03bb\u03c9\u03c4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1</li> <li>\u0391\u03be\u03b9\u03c9\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1</li> </ul> <p>\u0397 \u03bc\u03b5\u03b8\u03bf\u03b4\u03bf\u03bb\u03bf\u03b3\u03af\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03b9\u03c3\u03bc\u03bf\u03af \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03bf\u03c5\u03bd (\u03c3\u03b5 \u03ba\u03ac\u03c0\u03bf\u03b9\u03bf \u03b2\u03b1\u03b8\u03bc\u03cc):</p> <ul> <li>\u03c4\u03b7\u03bd \u03c0\u03bb\u03b7\u03c1\u03ad\u03c3\u03c4\u03b5\u03c1\u03b7 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd \u03b4\u03bf\u03bc\u03ce\u03bd \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2</li> <li>\u03c4\u03b7\u03bd \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae \u03bc\u03b7\u03c7\u03b1\u03bd\u03b9\u03c3\u03bc\u03ce\u03bd \u03b1\u03c0\u03cc\u03b4\u03b5\u03b9\u03be\u03b7\u03c2 \u03bf\u03c1\u03b8\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd</li> <li>\u03c4\u03b7\u03bd \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae \u03b3\u03b5\u03bd\u03bd\u03b7\u03c4\u03c1\u03b9\u03ce\u03bd \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ce\u03bd</li> <li>\u03c4\u03b7\u03bd \u03b1\u03bd\u03af\u03c7\u03bd\u03b5\u03c5\u03c3\u03b7 \u03b1\u03c3\u03b1\u03c6\u03b5\u03b9\u03ce\u03bd \u03ba\u03b1\u03b9 \u03b1\u03c3\u03c5\u03bd\u03b5\u03c0\u03b5\u03b9\u03ce\u03bd \u03c3\u03c4\u03b7\u03bd \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ae \u03c4\u03c9\u03bd \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd</li> </ul>"},{"location":"theory_ch3/#351-operational-semantics","title":"3.5.1 \u039b\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 (Operational Semantics)","text":"<ul> <li>\u03a0\u03b5\u03c1\u03b9\u03b3\u03c1\u03ac\u03c6\u03b5\u03b9 \u03c4\u03bf \u03bd\u03cc\u03b7\u03bc\u03b1 \u03b5\u03bd\u03cc\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b5\u03ba\u03c4\u03b5\u03bb\u03ce\u03bd\u03c4\u03b1\u03c2 \u03c4\u03b9\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae \u03b5\u03af\u03c4\u03b5 \u03c3\u03b5 \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03af\u03c9\u03c3\u03b7 \u03b5\u03af\u03c4\u03b5 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac. </li> <li>\u0397 \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03c3\u03c4\u03b7\u03bd \u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bc\u03b7\u03c7\u03b1\u03bd\u03ae\u03c2 \u03bc\u03bd\u03ae\u03bc\u03b7, \u03ba\u03b1\u03c4\u03b1\u03c7\u03c9\u03c1\u03b7\u03c4\u03ad\u03c2, \u03ba.\u03bb\u03c0 .) \u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03b7 \u03c3\u03b7\u03bc\u03b1\u03c3\u03af\u03b1 \u03c4\u03c9\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd.</li> </ul>"},{"location":"theory_ch3/#3511","title":"3.5.1.1 \u0397 \u03b2\u03b1\u03c3\u03b9\u03ba\u03ae \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b1","text":"<p>\u0391\u03c1\u03c7\u03b9\u03ba\u03ac \u03c3\u03c7\u03b5\u03b4\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03bc\u03b5 \u03ba\u03cd\u03c1\u03b9\u03bf \u03b5\u03c0\u03b9\u03b8\u03c5\u03bc\u03b7\u03c4\u03cc \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc \u03c4\u03b7 \u03c3\u03b1\u03c6\u03ae\u03bd\u03b5\u03b9\u03b1. \u039a\u03ac\u03b8\u03b5 \u03b4\u03bf\u03bc\u03ae \u03c4\u03b7\u03c2 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03c0\u03c1\u03bf\u03c6\u03b1\u03bd\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03b1\u03c6\u03ad\u03c2 \u03bd\u03cc\u03b7\u03bc\u03b1.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae for \u03c4\u03b7\u03c2 C</p> <pre><code>for(expr1;expr2;expr3)\n{\n    stmts\n}\n</code></pre> <p><pre><code>expr1\nloop: control = expr2\n    if (control == 0) goto out\n    stmts\n    expr3\n    goto loop\nout: ...\n</code></pre> \u0393\u03b5\u03bd\u03b9\u03ba\u03ac, \u03b9\u03c3\u03c7\u03cd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03bf\u03b9 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03b5\u03c0\u03b1\u03c1\u03ba\u03bf\u03cd\u03bd \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03b7\u03c2 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2 \u03c4\u03c9\u03bd \u03b1\u03c0\u03bb\u03ce\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03b5\u03bb\u03ad\u03b3\u03c7\u03bf\u03c5 \u03bc\u03b9\u03b1\u03c2 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ae\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd (\u03c9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03c7\u03c1\u03b5\u03b9\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b5\u03c0\u03b5\u03ba\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c0\u03c1\u03bf\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03b5\u03af \u03b7 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 \u03c4\u03c9\u03bd \u03bc\u03b5\u03c4\u03b1\u03c4\u03c1\u03bf\u03c0\u03ce\u03bd \u03c4\u03cd\u03c0\u03c9\u03bd, \u03c4\u03c9\u03bd \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03c9\u03bd, \u03c4\u03c9\u03bd \u03b4\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd \u03ba\u03b1\u03b9 \u03c4\u03c9\u03bd \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd).</p> <pre><code>ident = var\nident = un_op var\nident = var bin_op var\ngoto label\nif (var rel_op var) goto label\n</code></pre> <p>\u03cc\u03c0\u03bf\u03c5:</p> <pre><code>ident = \u03b1\u03bd\u03b1\u03b3\u03bd\u03c9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc\nvar = \u03b1\u03bd\u03b1\u03b3\u03bd\u03c9\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03cc \u03ae \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ac\nun_op = \u03bc\u03bf\u03bd\u03b1\u03b4\u03b9\u03b1\u03af\u03bf\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2  \nbin_op = \u03b4\u03c5\u03b1\u03b4\u03b9\u03ba\u03cc\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 \nrel_op = \u03c3\u03c5\u03b3\u03ba\u03c1\u03b9\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2\n</code></pre>"},{"location":"theory_ch3/#3512","title":"3.5.1.2 \u0391\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2","text":"<ul> <li>\u039a\u03b1\u03bb\u03ae \u03b1\u03bd \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03c7\u03c9\u03c1\u03af\u03c2 \u03c0\u03c1\u03bf\u03c3\u03ba\u03cc\u03bb\u03bb\u03b7\u03c3\u03b7 \u03c3\u03c4\u03b7\u03bd \u03c4\u03c5\u03c0\u03b9\u03ba\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b5\u03b3\u03c7\u03b5\u03b9\u03c1\u03af\u03b4\u03b9\u03b1 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 , \u03ba.\u03bb\u03c0.</li> <li>\u0395\u03be\u03b1\u03b9\u03c1\u03b5\u03c4\u03b9\u03ba\u03ac \u03c0\u03bf\u03bb\u03cd\u03c0\u03bb\u03bf\u03ba\u03b7 \u03b1\u03bd \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03c4\u03c5\u03c0\u03b9\u03ba\u03ac \u03c0.\u03c7., VDL), \u03cc\u03c0\u03c9\u03c2 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03ae\u03b8\u03b7\u03ba\u03b5 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03b7\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2 \u03c4\u03b7\u03c2 PL/I.</li> <li>\u0392\u03b1\u03c3\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c7\u03b1\u03bc\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c0\u03ad\u03b4\u03bf\u03c5 \u03ba\u03b1\u03b9 \u03cc\u03c7\u03b9 \u03c3\u03c4\u03b1 \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03ae \u03c3\u03c4\u03b7 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ae.</li> <li>\u039f\u03b9 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03ac\u03c6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c7\u03b1\u03bc\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c0\u03ad\u03b4\u03bf\u03c5.</li> </ul>"},{"location":"theory_ch3/#352-denotational-semantics","title":"3.5.2 \u0394\u03b7\u03bb\u03c9\u03c4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 (Denotational Semantics)","text":"<ul> <li>\u0392\u03b1\u03c3\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b8\u03b5\u03c9\u03c1\u03af\u03b1 \u03b1\u03bd\u03b1\u03b4\u03c1\u03bf\u03bc\u03b9\u03ba\u03ce\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd.</li> <li>\u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b5\u03bd\u03cc\u03c2 \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03bf\u03cd \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03bf\u03bd\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2.</li> <li>\u039f\u03c1\u03b9\u03c3\u03bc\u03cc\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03b1\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af \u03c3\u03c4\u03b9\u03b3\u03bc\u03b9\u03cc\u03c4\u03c5\u03c0\u03b1 \u03c4\u03c9\u03bd \u03bf\u03bd\u03c4\u03bf\u03c4\u03ae\u03c4\u03c9\u03bd \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c3\u03b5 \u03c3\u03c4\u03b9\u03b3\u03bc\u03b9\u03cc\u03c4\u03c5\u03c0\u03b1 \u03c4\u03c9\u03bd \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03c9\u03bd \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd.</li> <li>\u03a4\u03bf \u03bd\u03cc\u03b7\u03bc\u03b1 \u03c4\u03c9\u03bd \u03b4\u03bf\u03bc\u03ce\u03bd \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03cc\u03bd\u03bf \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03c9\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2.</li> </ul> <p>\u0391\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b4\u03b7\u03bb\u03c9\u03c4\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2</p> <ul> <li>\u039c\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03b3\u03b9\u03b1 \u03b1\u03c0\u03bf\u03b4\u03b5\u03af\u03be\u03b5\u03b9\u03c2 \u03bf\u03c1\u03b8\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd.</li> <li>\u03a0\u03b1\u03c1\u03ad\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1\u03bd \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac \u03b1\u03c5\u03c3\u03c4\u03b7\u03c1\u03cc \u03c4\u03c1\u03cc\u03c0\u03bf \u03c3\u03ba\u03ad\u03c8\u03b7\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1.</li> <li>\u039c\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b2\u03bf\u03b7\u03b8\u03ae\u03c3\u03b5\u03b9 \u03c3\u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd.</li> <li>\u0388\u03c7\u03b5\u03b9 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03c3\u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03c3\u03c5\u03c3\u03c4\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03b3\u03b5\u03bd\u03bd\u03b7\u03c4\u03c1\u03b9\u03ce\u03bd \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ce\u03bd.</li> <li>\u039b\u03cc\u03b3\u03c9 \u03c0\u03bf\u03bb\u03c5\u03c0\u03bb\u03bf\u03ba\u03cc\u03c4\u03b7\u03c4\u03ac\u03c2, \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03b5\u03b9 \u03bc\u03b9\u03ba\u03c1\u03ae \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03c5\u03c2 \u03c7\u03c1\u03ae\u03c3\u03c4\u03b5\u03c2 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2.</li> </ul>"},{"location":"theory_ch3/#353-axiomatic-semantics","title":"3.5.3 \u0391\u03be\u03b9\u03c9\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1 (Axiomatic Semantics)","text":"<ul> <li>\u0392\u03b1\u03c3\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03cc \u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03cc. </li> <li>\u039f\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03be\u03b9\u03ce\u03bc\u03b1\u03c4\u03b1 \u03ae \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b1\u03c3\u03bc\u03bf\u03cd \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03c4\u03cd\u03c0\u03bf \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae\u03c2 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03c0\u03c1\u03bf\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c4\u03c1\u03b1\u03c0\u03bf\u03cd\u03bd \u03bc\u03b5\u03c4\u03b1\u03c3\u03c7\u03b7\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03af \u03bb\u03bf\u03b3\u03b9\u03ba\u03ce\u03bd \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd \u03c3\u03b5 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03bf \u03c4\u03c5\u03c0\u03b9\u03ba\u03ad\u03c2 \u03bb\u03bf\u03b3\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2.</li> </ul> <p>\u0391\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b1\u03be\u03b9\u03c9\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2</p> <ul> <li>\u0395\u03af\u03bd\u03b1\u03b9 \u03b4\u03cd\u03c3\u03ba\u03bf\u03bb\u03b7 \u03b7 \u03b1\u03bd\u03ac\u03c0\u03c4\u03c5\u03be\u03b7 \u03b1\u03be\u03b9\u03c9\u03bc\u03ac\u03c4\u03c9\u03bd \u03ae \u03ba\u03b1\u03bd\u03cc\u03bd\u03c9\u03bd \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b1\u03c3\u03bc\u03bf\u03cd \u03b3\u03b9\u03b1 \u03cc\u03bb\u03b5\u03c2 \u03c4\u03b9\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2.</li> <li>\u0391\u03c0\u03bf\u03c4\u03b5\u03bb\u03b5\u03af \u03ba\u03b1\u03bb\u03cc \u03b5\u03c1\u03b3\u03b1\u03bb\u03b5\u03af\u03bf \u03b3\u03b9\u03b1 \u03b1\u03c0\u03bf\u03b4\u03b5\u03af\u03be\u03b5\u03b9\u03c2 \u03bf\u03c1\u03b8\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2, \u03ba\u03b1\u03b9 \u03b5\u03be\u03b1\u03b9\u03c1\u03b5\u03c4\u03b9\u03ba\u03cc \u03c0\u03bb\u03b1\u03af\u03c3\u03b9\u03bf \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1, \u03b1\u03bb\u03bb\u03ac \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03c7\u03c1\u03ae\u03c3\u03b9\u03bc\u03bf \u03b3\u03b9\u03b1 \u03c7\u03c1\u03ae\u03c3\u03c4\u03b5\u03c2 \u03b3\u03bb\u03c9\u03c3\u03c3\u03ce\u03bd \u03ba\u03b1\u03b9 \u03c3\u03c5\u03b3\u03b3\u03c1\u03b1\u03c6\u03b5\u03af\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ce\u03bd.</li> </ul>"},{"location":"theory_ch3/#3_1","title":"\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03b1\u03c3\u03ba\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03ba\u03b5\u03c6\u03ac\u03bb\u03b1\u03b9\u03bf 3","text":"<ol> <li>\u0394\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae:</li> </ol> <pre><code>&lt;stmt&gt; -&gt; &lt;assignment_ stmt&gt; | &lt;if_ stmt&gt;\n&lt;assignment_ stmt&gt; -&gt; &lt;var&gt; = &lt;expr&gt;;\n&lt;if_ stmt&gt; -&gt; if (&lt;cond&gt;) &lt;stmt&gt; else &lt;stmt&gt;\n&lt;cond&gt; -&gt; &lt;expr&gt; ==  &lt;expr&gt;\n&lt;expr&gt; -&gt; &lt;var&gt;\n                | &lt;const&gt;\n                | &lt;expr&gt; + &lt;expr&gt;\n&lt;var&gt; -&gt; a | b | c\n&lt;cons&gt; -&gt; 0 | 1 | 2 \n</code></pre> <p>\u0393\u03c1\u03ac\u03c8\u03c4\u03b5 \u03bc\u03b9\u03b1 \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03cc\u03c4\u03b5\u03c1\u03b7 \u03c0\u03b1\u03c1\u03b1\u03b3\u03c9\u03b3\u03ae \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7:</p> <pre><code>if (a==0) b=2; else c=a+1;\n</code></pre> \u039b\u03cd\u03c3\u03b7 \u03ac\u03c3\u03ba\u03b7\u03c3\u03b7\u03c2 1 <pre><code>&lt;stmt&gt; -&gt; \n&lt;if_stmt&gt; -&gt; \nif (&lt;cond&gt;) &lt;stmt&gt; else &lt;stmt&gt; -&gt; \nif (&lt;expr&gt; ==  &lt;expr&gt;) &lt;stmt&gt; else &lt;stmt&gt; -&gt;\nif (&lt;var&gt; ==  &lt;expr&gt;) &lt;stmt&gt; else &lt;stmt&gt; -&gt; \nif (a ==  &lt;expr&gt;) &lt;stmt&gt; else &lt;stmt&gt; -&gt; \nif (a ==  &lt;const&gt;) &lt;stmt&gt; else &lt;stmt&gt; -&gt; \nif (a ==  0) &lt;stmt&gt; else &lt;stmt&gt; -&gt; \nif (a ==  0) &lt;assignment_stmt&gt; else &lt;stmt&gt; -&gt; \nif (a ==  0) &lt;var&gt; = &lt;expr&gt;; else &lt;stmt&gt; -&gt; \nif (a ==  0) b = &lt;expr&gt;; else &lt;stmt&gt; -&gt; \nif (a ==  0) b = &lt;const&gt;; else &lt;stmt&gt; -&gt; \nif (a ==  0) b = 2; else &lt;stmt&gt; -&gt; \nif (a ==  0) b = 2; else &lt;assignment_stmt&gt; -&gt; \nif (a ==  0) b = 2; else &lt;var&gt; = &lt;expr&gt;; -&gt; \nif (a ==  0) b = 2; else &lt;var&gt; = &lt;expr&gt;; -&gt; \nif (a ==  0) b = 2; else c = &lt;expr&gt;; -&gt; \nif (a ==  0) b = 2; else c = &lt;expr&gt; + &lt;expr&gt;; -&gt; \nif (a ==  0) b = 2; else c = &lt;var&gt; + &lt;expr&gt;; -&gt; \nif (a ==  0) b = 2; else c = a + &lt;expr&gt;; -&gt; \nif (a ==  0) b = 2; else c = a + &lt;const&gt;; -&gt; \nif (a ==  0) b = 2; else c = a + 1;\n</code></pre>"},{"location":"theory_ch5/","title":"5. \u039f\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 (names), \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03c3\u03b5\u03b9\u03c2 (bindings) \u03ba\u03b1\u03b9 \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b5\u03c2 (scopes)","text":"<ul> <li>\u03a3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03ac \u03b8\u03ad\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd</li> <li>\u03a7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd: \u03c4\u03cd\u03c0\u03bf\u03c2, \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7, \u03c4\u03b9\u03bc\u03ae, \u03c8\u03b5\u03c5\u03b4\u03ce\u03bd\u03c5\u03bc\u03b1</li> <li>\u03a0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7, \u03c7\u03c1\u03cc\u03bd\u03bf\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7\u03c2</li> <li>\u039a\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1\u03c2 \u03bf\u03bd\u03bf\u03bc\u03ac\u03c4\u03c9\u03bd (\u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2, \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae\u03c2) \u03ba\u03b1\u03b9 \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7\u03c2</li> <li>\u0395\u03c0\u03ce\u03bd\u03c5\u03bc\u03b5\u03c2 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ad\u03c2</li> <li>\u0391\u03c1\u03c7\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd</li> </ul>"},{"location":"theory_ch5/#51","title":"5.1 \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae","text":"<p>\u0397 \u03b1\u03c6\u03b7\u03c1\u03b7\u03bc\u03ad\u03bd\u03b7 \u03ad\u03bd\u03bd\u03bf\u03b9\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03b1 \u03ba\u03b5\u03bb\u03b9\u03ac \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae.</p> <p>\u039c\u03b9\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c0\u03c1\u03bf\u03c3\u03b4\u03b9\u03bf\u03c1\u03b9\u03c3\u03c4\u03b5\u03af \u03b1\u03c0\u03cc \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd (\u03cc\u03bd\u03bf\u03bc\u03b1, \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7, \u03c4\u03b9\u03bc\u03ae, \u03c4\u03cd\u03c0\u03bf\u03c2, \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03b6\u03c9\u03ae\u03c2, \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1).</p>"},{"location":"theory_ch5/#52","title":"5.2 \u039f\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1","text":"<p>\u03a4\u03b1 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c0\u03bf\u03b4\u03af\u03b4\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2, \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03ba\u03b1\u03b9 \u03ac\u03bb\u03bb\u03b5\u03c2 \u03b4\u03bf\u03bc\u03ad\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd. </p>"},{"location":"theory_ch5/#521","title":"5.2.1 \u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd","text":"<p>\u0392\u03b1\u03c3\u03b9\u03ba\u03ac \u03b8\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd \u03c3\u03b5 \u03cc\u03c4\u03b9 \u03b1\u03c6\u03bf\u03c1\u03ac \u03c4\u03b1 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03b5\u03ac\u03bd  \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03b4\u03b9\u03ac\u03ba\u03c1\u03b9\u03c3\u03b7 \u03c0\u03b5\u03b6\u03ce\u03bd \u03ba\u03b5\u03c6\u03b1\u03bb\u03b1\u03af\u03c9\u03bd \u03ba\u03b1\u03b9 \u03c4\u03bf \u03b5\u03ac\u03bd \u03bf\u03b9 \u03b5\u03b9\u03b4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03c4\u03b7\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b5\u03c3\u03bc\u03b5\u03c5\u03bc\u03ad\u03bd\u03b5\u03c2 \u03ae \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03ba\u03bb\u03b5\u03b9\u03b4\u03b9\u03ac.</p>"},{"location":"theory_ch5/#522","title":"5.2.2 \u039c\u03bf\u03c1\u03c6\u03ad\u03c2 \u03bf\u03bd\u03bf\u03bc\u03ac\u03c4\u03c9\u03bd","text":"<p>\u039f\u03b9 \u03c0\u03c1\u03ce\u03c4\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03c3\u03b1\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03bc\u03b5 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03b5\u03bd\u03cc\u03c2 \u03bc\u03cc\u03bd\u03bf \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03b1 (\u03b5\u03c0\u03b9\u03c1\u03c1\u03bf\u03ae \u03b1\u03c0\u03cc \u03c4\u03b1 \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ac).</p> <p>\u0394\u03b9\u03b1\u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b5\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ad\u03c2 \u03bf\u03bd\u03bf\u03bc\u03ac\u03c4\u03c9\u03bd</p> <ul> <li>camelCase</li> <li>snake_case</li> </ul> <p>\u0395\u03b9\u03b4\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c0\u03c4\u03ce\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03bd\u03cc\u03bd\u03c9\u03bd \u03bf\u03bd\u03bf\u03bc\u03ac\u03c4\u03c9\u03bd</p> <ul> <li>PHP</li> <li>\u03a4\u03b1 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03bc\u03b5 $</li> <li>Perl</li> <li>\u03a4\u03b1 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 \u03be\u03b5\u03ba\u03b9\u03bd\u03bf\u03cd\u03bd \u03bc\u03b5 $, @ \u03ae % \u03ba\u03b1\u03b9 \u03bc\u03b5 \u03b1\u03c5\u03c4\u03cc \u03c4\u03bf\u03bd \u03c4\u03c1\u03cc\u03c0\u03bf \u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c4\u03bf \u03b5\u03af\u03b4\u03bf\u03c2 \u03c4\u03bf\u03c5\u03c2 (\u03b2\u03b1\u03b8\u03bc\u03c9\u03c4\u03cc\u03c2, \u03b4\u03b9\u03ac\u03bd\u03c5\u03c3\u03bc\u03b1, \u03bb\u03b5\u03be\u03b9\u03ba\u03cc)</li> <li>Ruby</li> <li>\u03a4\u03bf @ \u03c3\u03c4\u03b7\u03bd \u03b1\u03c1\u03c7\u03ae \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03c3\u03c4\u03b9\u03b3\u03bc\u03b9\u03bf\u03c4\u03cd\u03c0\u03bf\u03c5 \u03b5\u03bd\u03ce \u03c4\u03bf @@ \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03ba\u03bb\u03ac\u03c3\u03b7\u03c2</li> </ul> <p>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bc\u03b5 \u03b4\u03b9\u03ac\u03ba\u03c1\u03b9\u03c3\u03b7 \u03c0\u03b5\u03b6\u03ce\u03bd-\u03ba\u03b5\u03c6\u03b1\u03bb\u03b1\u03af\u03c9\u03bd: C, C++, C#, Java, Ruby, Python, ...</p> <p>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03b4\u03b9\u03ac\u03ba\u03c1\u03b9\u03c3\u03b7 \u03c0\u03b5\u03b6\u03ce\u03bd-\u03ba\u03b5\u03c6\u03b1\u03bb\u03b1\u03af\u03c9\u03bd: BASIC, FORTRAN, SQL, Pascal, ...</p>"},{"location":"theory_ch5/#523-special-words","title":"5.2.3 \u0395\u03b9\u03b4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 (special words)","text":"<p>\u039f\u03b9 \u03b5\u03b9\u03b4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03b4\u03b9\u03b1\u03c7\u03c9\u03c1\u03b9\u03c3\u03bc\u03cc \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ce\u03bd \u03c4\u03bc\u03b7\u03bc\u03ac\u03c4\u03c9\u03bd \u03c4\u03c9\u03bd \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd. \u03a3\u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03bf\u03b9 \u03b5\u03b9\u03b4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03b1\u03b9 \u03b4\u03b5\u03c3\u03bc\u03b5\u03c5\u03bc\u03ad\u03bd\u03b5\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03b4\u03b5\u03bd \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03bf\u03cd\u03bd \u03c9\u03c2 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03b7 Fortran \u03c3\u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03bf\u03b9 \u03b5\u03b9\u03b4\u03b9\u03ba\u03ad\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b5\u03c3\u03bc\u03b5\u03c5\u03bc\u03ad\u03bd\u03b5\u03c2 \u03b1\u03bb\u03bb\u03ac \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03cc\u03bd\u03bf \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03ba\u03bb\u03b5\u03b9\u03b4\u03b9\u03ac, \u03ba\u03b1\u03b9 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03bf\u03cd\u03bd  \u03c9\u03c2 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1.</p>"},{"location":"theory_ch5/#53","title":"5.3 \u039c\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2","text":"<p>\u03a4\u03b1 6 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ac \u03c4\u03c9\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd: \u03cc\u03bd\u03bf\u03bc\u03b1, \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7, \u03c4\u03b9\u03bc\u03ae, \u03c4\u03cd\u03c0\u03bf\u03c2, \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03b6\u03c9\u03ae\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1</p>"},{"location":"theory_ch5/#531","title":"5.3.1 \u038c\u03bd\u03bf\u03bc\u03b1","text":"<p>\u0394\u03b5\u03bd \u03ad\u03c7\u03bf\u03c5\u03bd \u03cc\u03bb\u03b5\u03c2 \u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03b1 (\u03c0.\u03c7. \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b5\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2).</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 Python \u03ba\u03b1\u03b9 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2:</p> <pre><code>for _ in range(5):\n    print(\"Hello!\")\n</code></pre>"},{"location":"theory_ch5/#532","title":"5.3.2 \u0394\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7","text":"<p>\u0397 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03c3\u03c5\u03c3\u03c7\u03b5\u03c4\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae.</p>"},{"location":"theory_ch5/#533","title":"5.3.3 \u03a4\u03cd\u03c0\u03bf\u03c2","text":"<p>\u039a\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03b5\u03cd\u03c1\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ce\u03bd \u03c0\u03bf\u03c5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03c3\u03b5\u03b9 \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03ba\u03b1\u03b9 \u03c4\u03bf \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c4\u03c9\u03bd \u03c0\u03c1\u03ac\u03be\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03bf\u03c5 \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03c4\u03cd\u03c0\u03bf\u03c5.</p> <p>\u03a3\u03c4\u03b7\u03bd Java \u03bf \u03c4\u03cd\u03c0\u03bf\u03c2 int \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03b5\u03cd\u03c1\u03bf\u03c2 \u03c4\u03b9\u03bc\u03ce\u03bd \u03b1\u03c0\u03cc -2147483648 \u03bc\u03ad\u03c7\u03c1\u03b9 \u03ba\u03b1\u03b9 2147483647 \u03ba\u03b1\u03b9 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03b9\u03c2 \u03c0\u03c1\u03ac\u03be\u03b5\u03b9\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b8\u03b5\u03c3\u03b7, \u03b1\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b7, \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03b1\u03c3\u03b9\u03b1\u03c3\u03bc\u03cc, \u03b4\u03b9\u03b1\u03af\u03c1\u03b5\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03c5\u03c0\u03cc\u03bb\u03bf\u03b9\u03c0\u03bf.</p>"},{"location":"theory_ch5/#534","title":"5.3.4 \u03a4\u03b9\u03bc\u03ae","text":"<p>\u0397 \u03c4\u03b9\u03bc\u03ae \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03b1 \u03c4\u03b7\u03c2 \u03b8\u03ad\u03c3\u03b7\u03c2 \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03c3\u03c7\u03b5\u03c4\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae.</p> <ul> <li>\u0397 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03ba\u03b1\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 L-\u03c4\u03b9\u03bc\u03ae (L=Left) \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2</li> <li>\u0397 \u03c4\u03b9\u03bc\u03ae \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03ba\u03b1\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 R-\u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 (R=Right) \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2</li> </ul>"},{"location":"theory_ch5/#54-binding","title":"5.4 \u0397 \u03ad\u03bd\u03bd\u03bf\u03b9\u03b1 \u03c4\u03b7\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7\u03c2 (binding)","text":"<p>\u03a0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c3\u03c5\u03c3\u03c7\u03ad\u03c4\u03b9\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03bf\u03cd \u03bc\u03b5 \u03bc\u03b9\u03b1 \u03bf\u03bd\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 (\u03c0.\u03c7. \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03ba\u03b1\u03b9 \u03c4\u03cd\u03c0\u03bf\u03c2 \u03c4\u03b7\u03c2, \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03ba\u03b1\u03b9 \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2).</p> <p>\u03a7\u03c1\u03cc\u03bd\u03bf\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c7\u03c1\u03bf\u03bd\u03b9\u03ba\u03ae \u03c3\u03c4\u03b9\u03b3\u03bc\u03ae \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03c3\u03c5\u03bc\u03b2\u03b1\u03af\u03bd\u03b5\u03b9 \u03b7 \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03c4\u03b7\u03c2 C++:</p> <pre><code>count = count + 5;\n</code></pre> <ul> <li>\u039f \u03c4\u03cd\u03c0\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 count \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7</li> <li>\u03a4\u03bf \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03c0\u03b9\u03b8\u03b1\u03bd\u03ce\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03c4\u03b7\u03c2 count \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7 \u03c3\u03c7\u03b5\u03b4\u03af\u03b1\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ae</li> <li>\u0397 \u03c3\u03b7\u03bc\u03b1\u03c3\u03af\u03b1 \u03c4\u03bf\u03c5 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae + \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03cc\u03c4\u03b1\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03bd\u03c9\u03c3\u03c4\u03bf\u03af \u03bf\u03b9 \u03c4\u03cd\u03c0\u03bf\u03b9 \u03c4\u03c9\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c9\u03bd \u03c4\u03bf\u03c5</li> <li>\u0397 \u03b5\u03c3\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03ae \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b1\u03c2 \u03c4\u03b9\u03bc\u03ae\u03c2 5 \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03bf \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03cc \u03c4\u03bf\u03c5 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03c9\u03c4\u03c4\u03b9\u03c3\u03c4\u03ae</li> <li>\u0397 \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 count \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae\u03c2</li> </ul>"},{"location":"theory_ch5/#541","title":"5.4.1 \u03a0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03b7\u03c1\u03b9\u03c3\u03c4\u03b9\u03ba\u03ce\u03bd \u03bc\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2","text":"<p>\u03a3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7: \u03a3\u03c5\u03bc\u03b2\u03b1\u03af\u03bd\u03b5\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b4\u03b5\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2.</p> <p>\u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7: \u039c\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2.</p>"},{"location":"theory_ch5/#542","title":"5.4.2 \u03a0\u03c1\u03bf\u03c3\u03b4\u03ad\u03c3\u03b5\u03b9\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd","text":""},{"location":"theory_ch5/#5421-static-binding-early-binding","title":"5.4.2.1 \u03a3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03c4\u03cd\u03c0\u03c9\u03bd (static binding \u03ae early binding)","text":"<p>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bc\u03b5 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03c4\u03cd\u03c0\u03c9\u03bd: C, C++, Java, Fortran, ...</p> <p>\u0397 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03c4\u03cd\u03c0\u03c9\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b3\u03af\u03bd\u03b5\u03b9 \u03b5\u03af\u03c4\u03b5 \u03bc\u03b5 \u03c1\u03b7\u03c4\u03ae (explicit) \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03b5\u03af\u03c4\u03b5 \u03bc\u03b5 \u03c5\u03c0\u03bf\u03bd\u03bf\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7 (implicit) \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7.</p> <p>\u0397 \u03c1\u03b7\u03c4\u03ae \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c4\u03cd\u03c0\u03bf\u03c5 \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7 C:</p> <pre><code>int x;\n</code></pre> <p>\u0397 \u03c5\u03c0\u03bf\u03bd\u03bf\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7 \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03ad\u03c7\u03b5\u03b9 \u03bd\u03b1 \u03ba\u03ac\u03bd\u03b5\u03b9 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03c0\u03c1\u03ce\u03c4\u03b7 \u03b5\u03bc\u03c6\u03ac\u03bd\u03b9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2  \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03c3\u03c4\u03b7\u03bd Perl, \u03c0\u03c1\u03bf\u03ba\u03b1\u03bb\u03b5\u03af \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03bc\u03b9\u03b1\u03c2 \u03b2\u03b1\u03b8\u03bc\u03c9\u03c4\u03ae\u03c2 \u03c4\u03b9\u03bc\u03ae\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae x.</p> <pre><code>$x = 5;\n</code></pre> <p>\u039c\u03b9\u03b1\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2 \u03c5\u03c0\u03bf\u03bd\u03bf\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7 \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03c4\u03cd\u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03b1\u03b9 \u03b7 \u03c5\u03c0\u03bf\u03bd\u03bf\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7 \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03c3\u03c5\u03bd\u03b1\u03bd\u03c4\u03ac\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03b7 C#. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1:</p> <pre><code>var sum = 0;\nvar total = 0.0;\nvar name = \"Fred\";\n</code></pre> <p>\u03b4\u03b7\u03bb\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03cc\u03c4\u03b9 \u03b7 \u03c4\u03cd\u03c0\u03bf\u03b9 \u03c4\u03c9\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 int, float \u03ba\u03b1\u03b9 string \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b1.</p> <p>\u039f\u03bc\u03bf\u03af\u03c9\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7 C++ \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c5\u03c0\u03ac\u03c1\u03be\u03b5\u03b9 \u03c5\u03c0\u03bf\u03bd\u03bf\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7 \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7 \u03c4\u03cd\u03c0\u03c9\u03bd \u03bc\u03b5 \u03c4\u03b7 \u03bb\u03ad\u03be\u03b7 \u03ba\u03bb\u03b5\u03b9\u03b4\u03af <code>auto</code>. \u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1:</p> <pre><code>vector&lt;int&gt; v;\n...\nauto itr = v.iterator();\n</code></pre> <p>\u03b4\u03b7\u03bb\u03ce\u03bd\u03bf\u03c5\u03bd \u03bc\u03b5 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03cc\u03c4\u03b9 o \u03c4\u03cd\u03c0\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 <code>itr</code> \u03b5\u03af\u03bd\u03b1\u03b9 </p> <pre><code>vector&lt;int&gt;::iterator\n</code></pre>"},{"location":"theory_ch5/#5422-dynamic-binding-late-binding","title":"5.4.2.2 \u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03c4\u03cd\u03c0\u03c9\u03bd (dynamic binding \u03ae late binding)","text":"<p>\u03a3\u03c4\u03b7 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2 \u03bf \u03c4\u03cd\u03c0\u03bf\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03b4\u03b5\u03bd \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03bc\u03b9\u03b1 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c5 \u03bf\u03cd\u03c4\u03b5 \u03b1\u03c0\u03cc \u03c4\u03bf \u03cc\u03bd\u03bf\u03bc\u03b1 \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2. \u039f \u03c4\u03cd\u03c0\u03bf\u03c2 \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b1\u03bd \u03b1\u03bd\u03b1\u03c4\u03af\u03b8\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1\u03c2 \u03c4\u03b9\u03bc\u03ae \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03c0\u03c1\u03cc\u03c4\u03b1\u03c3\u03b7 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2 \u03c3\u03c4\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae.</p> <ul> <li>\u039f\u03c0\u03bf\u03b9\u03b1\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03bb\u03ac\u03b2\u03b5\u03b9 \u03bf\u03c0\u03bf\u03b9\u03b1\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c4\u03b9\u03bc\u03ae \u03c4\u03cd\u03c0\u03bf\u03c5.</li> <li>\u039f \u03c4\u03cd\u03c0\u03bf\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b1\u03bb\u03bb\u03ac\u03b6\u03b5\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2.</li> </ul> <p>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bc\u03b5 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03c4\u03cd\u03c0\u03c9\u03bd: Python, Ruby, JavaScript, PHP, ...</p> <p>\u0397 C# \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03ba\u03b1\u03b9 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03c4\u03cd\u03c0\u03c9\u03bd \u03bc\u03b5 \u03c4\u03b7 \u03b4\u03b5\u03c3\u03bc\u03b5\u03c5\u03bc\u03ad\u03bd\u03b7 \u03bb\u03ad\u03be\u03b7 dynamic.</p>"},{"location":"theory_ch5/#543","title":"5.4.3 \u03a0\u03c1\u03bf\u03c3\u03b4\u03ad\u03c3\u03b5\u03b9\u03c2 \u03c7\u03ce\u03c1\u03bf\u03c5 \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03b6\u03c9\u03ae\u03c2","text":"<p>\u039a\u03b1\u03c4\u03b1\u03bd\u03bf\u03bc\u03ae/\u03b1\u03bd\u03b1\u03ba\u03b1\u03c4\u03b1\u03bd\u03bf\u03bc\u03ae \u03ba\u03b5\u03bb\u03b9\u03ce\u03bd \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2 \u03c3\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2.</p> <p>\u0397 \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03b6\u03c9\u03ae\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03c7\u03c1\u03cc\u03bd\u03bf\u03c2 \u03c0\u03bf\u03c5 \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c3\u03b4\u03b5\u03b4\u03b5\u03bc\u03ad\u03bd\u03b7 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03c3\u03c5\u03b3\u03ba\u03b5\u03ba\u03c1\u03b9\u03bc\u03ad\u03bd\u03bf \u03ba\u03b5\u03bb\u03af \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd. \u039c\u03b5 \u03b2\u03ac\u03c3\u03b7 \u03c4\u03b7 \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03b6\u03c9\u03ae\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03c7\u03c9\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 4 \u03ba\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03af\u03b5\u03c2:</p> <ul> <li>\u03a3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2</li> <li>\u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c4\u03bf\u03af\u03b2\u03b1\u03c2</li> <li>\u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c1\u03b7\u03c4\u03ae\u03c2 \u03b4\u03ad\u03c3\u03bc\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c3\u03c9\u03c1\u03bf\u03cd</li> <li>\u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c5\u03c0\u03bf\u03bd\u03bf\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7\u03c2 \u03b4\u03ad\u03c3\u03bc\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c3\u03c9\u03c1\u03bf\u03cd</li> </ul>"},{"location":"theory_ch5/#5431","title":"5.4.3.1 \u03a3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2","text":"<p>\u039f\u03b9 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03ba\u03b5\u03bb\u03b9\u03ac \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2 \u03c0\u03c1\u03b9\u03bd \u03be\u03b5\u03ba\u03b9\u03bd\u03ae\u03c3\u03b5\u03b9 \u03b7 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03ba\u03b1\u03b9 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03bd\u03bf\u03c5\u03bd \u03bc\u03ad\u03c7\u03c1\u03b9 \u03c4\u03bf \u03c4\u03ad\u03bb\u03bf\u03c2 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03ae\u03c2 \u03c4\u03bf\u03c5.</p>"},{"location":"theory_ch5/#5432","title":"5.4.3.2 \u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c4\u03bf\u03af\u03b2\u03b1\u03c2","text":"<p>\u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b1\u03bd \u03c5\u03c0\u03bf\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03bf\u03b9 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b4\u03ae\u03bb\u03c9\u03c3\u03ae\u03c2 \u03c4\u03bf\u03c5\u03c2.</p> <p>\u03a3\u03c4\u03b7 C++, C# \u03ba\u03b1\u03b9 Java \u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03be \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03cd \u03bc\u03b5 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03b4\u03ad\u03c3\u03bc\u03b5\u03c5\u03c3\u03b7 \u03c3\u03c4\u03bf\u03af\u03b2\u03b1\u03c2. </p>"},{"location":"theory_ch5/#5433","title":"5.4.3.3 \u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c1\u03b7\u03c4\u03ae\u03c2 \u03b4\u03ad\u03c3\u03bc\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c3\u03c9\u03c1\u03bf\u03cd","text":"<p>\u03a0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03ba\u03b5\u03bb\u03b9\u03ac \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2 \u03c4\u03c9\u03bd \u03bf\u03c0\u03bf\u03af\u03c9\u03bd \u03b7 \u03ba\u03b1\u03c4\u03b1\u03bd\u03bf\u03bc\u03ae \u03ba\u03b1\u03b9 \u03b7 \u03ba\u03b1\u03c4\u03ac\u03c1\u03b3\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03ba\u03b1\u03c4\u03b1\u03bd\u03bf\u03bc\u03ae\u03c2 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c1\u03b7\u03c4\u03ad\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03b3\u03c1\u03ac\u03c6\u03b5\u03b9 \u03bf \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03c4\u03ae\u03c2. \u0397 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ad\u03c2 \u03c3\u03b5 \u03b1\u03c5\u03c4\u03ac \u03c4\u03b1 \u03ba\u03b5\u03bb\u03b9\u03ac \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2 \u03b3\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03ad\u03c3\u03c9 \u03b4\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd \u03ae \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ce\u03bd.</p> <p>\u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7 C++</p> <pre><code>int *intnode;\nintnode = new int;\n...\ndelete intnode;\n</code></pre>"},{"location":"theory_ch5/#5434","title":"5.4.3.4 \u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ad\u03c2 \u03c5\u03c0\u03bf\u03bd\u03bf\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7\u03c2 \u03b4\u03ad\u03c3\u03bc\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c3\u03c9\u03c1\u03bf\u03cd","text":"<p>\u039f\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae\u03c2 \u03c5\u03c0\u03bf\u03bd\u03bf\u03bf\u03cd\u03bc\u03b5\u03bd\u03b7\u03c2 \u03b4\u03ad\u03c3\u03bc\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c3\u03c9\u03c1\u03bf\u03cd \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03c7\u03ce\u03c1\u03bf \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c3\u03c9\u03c1\u03bf\u03cd \u03bc\u03cc\u03bd\u03bf \u03cc\u03c4\u03b1\u03bd \u03c4\u03bf\u03c5\u03c2 \u03b5\u03ba\u03c7\u03c9\u03c1\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2.</p> <p>\u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7\u03bd JavaScript, \u03c3\u03c4\u03bf\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae <code>highs</code> \u03ac\u03c3\u03c7\u03b5\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03af\u03c7\u03b5 \u03c0\u03c1\u03b9\u03bd \u03b5\u03ba\u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03b5\u03af \u03b1\u03c5\u03c4\u03ae \u03b7 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae, \u03bc\u03b5\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03ae \u03c4\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7 \u03bc\u03b5 5 \u03b1\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2.</p> <pre><code>highs = [74, 84, 86, 90, 71];\n</code></pre>"},{"location":"theory_ch5/#55","title":"5.5 \u0395\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1","text":"<p>\u0395\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 (scope) \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03b5\u03cd\u03c1\u03bf\u03c2 \u03c4\u03c9\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03c4\u03bf\u03c5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c3\u03c4\u03b9\u03c2 \u03bf\u03c0\u03bf\u03af\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03c1\u03b1\u03c4\u03ae \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03bf\u03b9 \u03b8\u03ad\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c3\u03c4\u03b9\u03c2 \u03bf\u03c0\u03bf\u03af\u03b5\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03bb\u03b7\u03c6\u03b8\u03b5\u03af \u03ae \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03ae \u03bd\u03b1 \u03b1\u03bb\u03bb\u03ac\u03be\u03b5\u03b9 \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2.</p> <p>\u03a4\u03bf\u03c0\u03b9\u03ba\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03bc\u03b7 \u03c4\u03bf\u03c0\u03b9\u03ba\u03ad\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 (\u03c0.\u03c7. \u03ba\u03b1\u03b8\u03bf\u03bb\u03b9\u03ba\u03ad\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2) \u03bc\u03b9\u03b1\u03c2 \u03b5\u03bd\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 (\u03c0.\u03c7. \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2).</p>"},{"location":"theory_ch5/#551","title":"5.5.1 \u03a3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1","text":"<p>\u0397 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03ad\u03c4\u03c3\u03b9 \u03b4\u03b9\u03cc\u03c4\u03b9 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c0\u03c1\u03bf\u03c3\u03b4\u03b9\u03bf\u03c1\u03b9\u03c3\u03c4\u03b5\u03af \u03bc\u03b5 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03cc \u03c4\u03c1\u03cc\u03c0\u03bf, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03c0\u03c1\u03b9\u03bd \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7, \u03b5\u03be\u03b5\u03c4\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03c2 \u03c4\u03bf\u03bd \u03c0\u03b7\u03b3\u03b1\u03af\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1.</p> <p>\u039f\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03bf\u03c5\u03bd \u03ad\u03bd\u03b8\u03b5\u03c4\u03b5\u03c2 \u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9\u03c2 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd \u03cc\u03c0\u03c9\u03c2 \u03b7 JavaScript \u03ba\u03b1\u03b9 \u03b7 Python.</p> <p>\u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03bf\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c3\u03b5 JavaScript:</p> sebesta_5_5_1.js<pre><code>function big(){\n    function sub1() {\n        var x = 7;\n        sub2();\n    }\n    function sub2() {\n        var y = x;\n        console.log(y)\n    }\n    var x = 3;\n    sub1();\n}\n\nbig() // \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 3 \u03b4\u03b9\u03cc\u03c4\u03b9 \u03b7 JavaScript \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1\n</code></pre> <p>\u0397 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03c3\u03c4\u03bf <code>x</code> \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>sub2</code> \u03b1\u03c6\u03bf\u03c1\u03ac \u03c4\u03bf <code>x</code> \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf\u03bd \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03cc \u03c0\u03c1\u03cc\u03b3\u03bf\u03bd\u03bf \u03c4\u03b7\u03c2 <code>sub2</code> \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 <code>big</code>.</p>"},{"location":"theory_ch5/#552","title":"5.5.2 \u0395\u03bd\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2","text":"<p>\u039c\u03b9\u03b1 \u03b5\u03bd\u03cc\u03c4\u03b7\u03c4\u03b1 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03c4\u03b9\u03c2 \u03b4\u03b9\u03ba\u03ad\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2. \u0394\u03b5\u03af\u03c4\u03b5 \u03c4\u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03b5 C.</p> <p>scope1.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  int x = 1;\n  {\n    int x = 2;\n    int y = 3;\n    printf(\"x=%d at line %d\\n\", x, __LINE__);\n    printf(\"y=%d at line %d\\n\", y, __LINE__);\n  }\n  printf(\"x=%d at line %d\\n\", x, __LINE__);\n}\n</code></pre> \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ gcc scope1.c\n./a.out\nx=2 at line 8\ny=3 at line 9\nx=1 at line 11\n</code></pre></p>"},{"location":"theory_ch5/#553","title":"5.5.3 \u03a3\u03b5\u03b9\u03c1\u03ac \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7\u03c2","text":"<p>\u03a3\u03c4\u03b7 C89 \u03cc\u03bb\u03b5\u03c2 \u03bf\u03b9 \u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03bc\u03b9\u03b1\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b3\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03b1\u03c1\u03c7\u03ae \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2. \u0391\u03c5\u03c4\u03cc \u03b4\u03b5\u03bd \u03b9\u03c3\u03c7\u03cd\u03b5\u03b9 \u03c3\u03c4\u03b7\u03bd C99.</p> <p>declaration_order_c89.c<pre><code>#include &lt;stdio.h&gt;\n\nint main(void) {\n  int sum = 0;\n  for (int i = 0; i &lt; 10; i++) {\n    sum += i;\n  }\n}\n</code></pre> \u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2: <pre><code>$ gcc declaration_order_c89.c -std=c89\n\nerror: 'for' loop initial declarations are only allowed in C99 or C11 mode\n</code></pre></p>"},{"location":"theory_ch5/#554","title":"5.5.4 \u039a\u03b1\u03b8\u03bf\u03bb\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1","text":"<p>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03b7 C, C++ \u03ba\u03b1\u03b9 \u03b7 Python \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03bf\u03c5\u03bd \u03c4\u03b7 \u03c3\u03c5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03bc\u03b9\u03b1 \u03c3\u03b5\u03b9\u03c1\u03ac \u03bf\u03c1\u03b9\u03c3\u03bc\u03ce\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd. \u0395\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03bf\u03c5\u03bd \u03b5\u03c0\u03af\u03c3\u03b7\u03c2 \u03c4\u03b9\u03c2 \u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03ad\u03be\u03c9 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9\u03c2 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7 C \u03bc\u03b5 global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03ba\u03b1\u03b9 <code>extern</code> \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae</p> extern1.c<pre><code>#include &lt;stdio.h&gt;\n\nint g = 100;\n\nvoid fun1() {\n  extern int e;\n  printf(\"%d e=%d\\n\", __LINE__, e);\n  printf(\"%d g=%d\\n\", __LINE__, g);\n}\n\nint e = 3;\n\nint main(void) {\n  int a = 1;\n  printf(\"%d a=%d\\n\", __LINE__, a);\n  printf(\"%d e=%d\\n\", __LINE__, e);\n  printf(\"%d g=%d\\n\", __LINE__, g);\n  fun1();\n}\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2:</p> <pre><code>$ gcc extern1.c\n$ ./a.out\n15 a=1\n16 e=3\n17 g=100\n7 e=3\n8 g=100\n</code></pre> <p>\u0397 \u03b4\u03b5\u03c3\u03bc\u03b5\u03c5\u03bc\u03ad\u03bd\u03b7 \u03bb\u03ad\u03be\u03b7 extern \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03c3\u03c5\u03bd\u03ae\u03b8\u03c9\u03c2 \u03b3\u03b9\u03b1 \u03bd\u03b1 \u03b4\u03b7\u03bb\u03c9\u03b8\u03b5\u03af \u03bc\u03b9\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03ac\u03bb\u03bb\u03bf \u03b1\u03c1\u03c7\u03b5\u03af\u03bf.\u038c\u03c4\u03b1\u03bd \u03b4\u03b7\u03bb\u03c9\u03b8\u03b5\u03af \u03bc\u03b9\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03c9\u03c2 extern \u03b1\u03c5\u03c4\u03cc \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03b5\u03b9 \u03cc\u03c4\u03b9 \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03ba\u03ac\u03c0\u03bf\u03c5 \u03b5\u03be\u03c9\u03c4\u03b5\u03c1\u03b9\u03ba\u03ac \u03c4\u03bf\u03c5 \u03c3\u03b7\u03bc\u03b5\u03af\u03bf\u03c5 \u03b4\u03ae\u03bb\u03c9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03bf \u03c7\u03ce\u03c1\u03bf\u03c2 \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03ae\u03c2 \u03c4\u03b7\u03c2 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ba\u03ac\u03c0\u03bf\u03c5 \u03b1\u03bb\u03bb\u03bf\u03cd,\u03cc\u03c7\u03b9 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c3\u03c4\u03bf \u03c4\u03c1\u03ad\u03c7\u03bf\u03bd \u03c4\u03bc\u03ae\u03bc\u03b1 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1. \u0393\u03b9\u03b1 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b1 \u03b4\u03b5\u03af\u03c4\u03b5 \u03c4\u03bf 4.3 \u039a\u03b1\u03c4\u03b7\u03b3\u03bf\u03c1\u03af\u03b5\u03c2 \u03b1\u03c0\u03bf\u03b8\u03ae\u03ba\u03b5\u03c5\u03c3\u03b7\u03c2 \u03b1\u03c0\u03cc \u03c4\u03bf <sup>1</sup></p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7 C++ \u03bc\u03b5 global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae</p> global.cpp<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint g = 100; // global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\n\nint main() {\n  int g = 1;         // \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\n  cout &lt;&lt; g &lt;&lt; endl; // \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03c3\u03c4\u03b7\u03bd \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\n  cout &lt;&lt; ::g &lt;&lt; endl; // \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03c3\u03c4\u03b7\u03bd global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\n}\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ g++ global.cpp\n$ ./a.out\n1\n100\n</code></pre></p> <p>\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c4\u03b7\u03bd Python \u03bc\u03b5 local \u03ba\u03b1\u03b9 global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2</p> scope1a.py<pre><code>day = \"Monday\"\n\n\ndef tester():\n    print(f\"The day is {day}\")  # \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7 \u03c3\u03c4\u03b7\u03bd global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae day\n\n\ntester()\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2:</p> <pre><code>$ python scope1a.py\nThe day is Monday\n</code></pre> scope1b.py<pre><code>day = \"Monday\"\n\n\ndef tester():\n    print(\n        f\"The day is {day}\"\n    )  # \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7 \u03c3\u03c4\u03b7\u03bd global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae day (UnboundLocalError: local variable 'day' referenced before assignment )\n    day = \"Tuesday\"\n    print(f\"The day is {day}\")  # \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7 \u03c3\u03c4\u03b7\u03bd global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae day\n\n\ntester()\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 (\u03c0\u03bf\u03c5 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 UnboundLocalError):</p> <pre><code>$ python scope1b.py\nTraceback (most recent call last):\n  File \"scope1b.py\", line 12, in &lt;module&gt;\n    tester()\n  File \"scope1b.py\", line 6, in tester\n    f\"The day is {day}\"\nUnboundLocalError: local variable 'day' referenced before assignment\n</code></pre> scope1c.py<pre><code>day = \"Monday\"\n\n\ndef tester():\n    global day\n    print(f\"The day is {day}\")  # \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7 \u03c3\u03c4\u03b7\u03bd global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae day\n    day = \"Tuesday\"\n    print(f\"The day is {day}\")  # \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7 \u03c3\u03c4\u03b7\u03bd global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae day\n\n\ntester()\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python scope1c.py\nThe day is Monday\nThe day is Tuesday\n</code></pre></p>"},{"location":"theory_ch5/#legb-local-enclosing-global-builitins-python","title":"LEGB (Local Enclosing Global Builitins) \u03c3\u03c4\u03b7\u03bd Python","text":"<p>LEGB notebook</p> scope2a.py<pre><code># Sebesta page 223\n\ng = 3\n\n\ndef sub1():\n    a = 5\n    b = 7\n    print(f\"checkpoint1:  g={g}, a={a}, b={b}\")\n\n    def sub2():\n        global g\n        c = 9\n        print(f\"checkpoint2:  g={g}, c={c}\")\n\n        def sub3():\n            nonlocal c\n            g = 11\n            print(f\"checkpoint3:  g={g}, c={c}\")\n\n        sub3()\n\n    sub2()\n\n\nsub1()\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python scope2a.py\ncheckpoint1:  g=3, a=5, b=7\ncheckpoint2:  g=3, c=9\ncheckpoint3:  g=11, c=9\n</code></pre></p> scope2b.py<pre><code>g = 3\n\ndef sub1():\n    a = 5\n    b = 7\n    print(f\"checkpoint1: g={g}, a={a}, b={b}\")\n    def sub2():\n        global g\n        nonlocal a\n        g = 9\n        a = 9\n        b = 9\n        print(f\"checkpoint2: g={g}, a={a}, b={b}\")\n    sub2()\n    print(f\"checkpoint3: g={g}, a={a}, b={b}\")\n\nsub1()\nprint(f\"checkpoint4: g={g}\")\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ python scope2b.py\ncheckpoint1: g=3, a=5, b=7\ncheckpoint2: g=9, a=9, b=9\ncheckpoint3: g=9, a=9, b=7\ncheckpoint4: g=9\n</code></pre></p>"},{"location":"theory_ch5/#555","title":"5.5.5 \u0391\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1\u03c2","text":"<p>\u0397 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03bc\u03b5 \u03b4\u03b9\u03ac\u03c6\u03bf\u03c1\u03b5\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03ad\u03c7\u03b5\u03b9 \u03b5\u03c0\u03b9\u03ba\u03c1\u03b1\u03c4\u03ae\u03c3\u03b5\u03b9 \u03c3\u03c4\u03b9\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c3\u03ae\u03bc\u03b5\u03c1\u03b1. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03ad\u03c7\u03b5\u03b9 \u03bc\u03b5\u03b9\u03bf\u03bd\u03b5\u03ba\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03cc\u03c0\u03c9\u03c2 \u03b7 \u03c5\u03c0\u03b5\u03c1\u03b2\u03bf\u03bb\u03b9\u03ba\u03ae \u03c7\u03c1\u03ae\u03c3\u03b7 global \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03b5\u03b9\u03b4\u03b9\u03ba\u03ac \u03bc\u03b5\u03c4\u03ac \u03b1\u03c0\u03cc \u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03c3\u03b5 \u03c5\u03c0\u03ac\u03c1\u03c7\u03bf\u03bd\u03c4\u03b5\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b5\u03c2.</p>"},{"location":"theory_ch5/#556","title":"5.5.6 \u0394\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1","text":"<p>\u0397 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03b2\u03b1\u03c3\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03b1\u03bb\u03bb\u03b7\u03bb\u03bf\u03c5\u03c7\u03af\u03b1 \u03c4\u03c9\u03bd \u03ba\u03bb\u03ae\u03c3\u03b5\u03c9\u03bd \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd \u03ba\u03b1\u03b9 \u03cc\u03c7\u03b9 \u03c3\u03c4\u03b7 \u03c3\u03c7\u03ad\u03c3\u03b7 \u03c4\u03bf\u03c5\u03c2 \u03c3\u03c4\u03bf \u03c7\u03ce\u03c1\u03bf \u03ba\u03b1\u03b9 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c0\u03c1\u03bf\u03c3\u03b4\u03b9\u03bf\u03c1\u03b9\u03c3\u03c4\u03b5\u03af \u03bc\u03cc\u03bd\u03bf \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7. </p> <p>\u0393\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1: APL, SNOBOL4, \u03b1\u03c1\u03c7\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2 \u03c4\u03b7\u03c2 Lisp.</p> <p>\u0391\u03bd \u03c5\u03c0\u03bf\u03b8\u03ad\u03c3\u03bf\u03c5\u03bc\u03b5 \u03cc\u03c4\u03b9 \u03bf \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b5\u03ba\u03c4\u03b5\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03ba\u03b1\u03bd\u03cc\u03bd\u03b5\u03c2 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae\u03c2 \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1\u03c2 \u03c4\u03cc\u03c4\u03b5 \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03bb\u03ac\u03b2\u03b5\u03b9 \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae y \u03b8\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 7.</p> <pre><code>function big(){\n    function sub1() {\n        var x = 7;\n        sub2();\n    }\n    function sub2() {\n        var y = x;\n    }\n    var x = 3;\n    sub1();\n}\n</code></pre>"},{"location":"theory_ch5/#557","title":"5.5.7 \u0391\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae\u03c2 \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1\u03c2","text":"<p>\u039c\u03b5 \u03c4\u03b7 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03c0\u03c1\u03bf\u03ba\u03cd\u03c0\u03c4\u03bf\u03c5\u03bd \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03b1 \u03b1\u03be\u03b9\u03cc\u03c0\u03b9\u03c3\u03c4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c0\u03cc \u03cc\u03c4\u03b9 \u03bc\u03b5 \u03c4\u03b7 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1. \u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c4\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03c5\u03c3\u03ba\u03bf\u03bb\u03cc\u03c4\u03b5\u03c1\u03b1 \u03c3\u03c4\u03b7\u03bd \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b2\u03c1\u03b1\u03b4\u03cd\u03c4\u03b5\u03c1\u03b1.</p>"},{"location":"theory_ch5/#56","title":"5.6 \u0395\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03ba\u03b1\u03b9 \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03b6\u03c9\u03ae\u03c2","text":"<p>\u0397 \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03ba\u03b1\u03b9 \u03b7 \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03b6\u03c9\u03ae\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03b1\u03bd \u03ba\u03b1\u03b9 \u03c3\u03c7\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03ad\u03bd\u03bd\u03bf\u03b9\u03b5\u03c2 \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03b1\u03c5\u03c4\u03cc\u03c3\u03b7\u03bc\u03b5\u03c2. H \u03bc\u03b5\u03bd \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03bd\u03b1 \u03ba\u03ac\u03bd\u03b5\u03b9 \u03bc\u03b5 \u03c4\u03bf \u03c7\u03ce\u03c1\u03bf \u03b5\u03bd\u03ce \u03b7 \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03b6\u03c9\u03ae\u03c2 \u03ad\u03c7\u03b5\u03b9 \u03bd\u03b1 \u03ba\u03ac\u03bd\u03b5\u03b9 \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c7\u03c1\u03cc\u03bd\u03bf.</p> <p>\u039c\u03b9\u03b1 static \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03c3\u03b5 \u03bc\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 C \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03cc \u03c4\u03c1\u03cc\u03c0\u03bf \u03bc\u03b5 \u03c4\u03b7\u03bd \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2, \u03b1\u03bb\u03bb\u03ac \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03b3\u03b9\u03b1 \u03cc\u03bb\u03b7 \u03c4\u03b7 \u03b4\u03b9\u03ac\u03c1\u03ba\u03b5\u03b9\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2.</p> static1.cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid fun() {\n  static int x = 0;\n  x++;\n  cout &lt;&lt; x &lt;&lt; endl;\n}\n\nint main() {\n  for (int i = 0; i &lt; 10; i++) {\n    fun();\n  }\n}\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ g++ static1.cpp\n$ ./a.out\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</code></pre></p> static2cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint adder(int list[], int listlen) {\n  static int sum = 0; // \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\n  int count; // \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae-\u03c3\u03c4\u03bf\u03af\u03b2\u03b1\u03c2\n  for (count = 0; count &lt; listlen; count++) {\n    sum += list[count];\n  }\n  return sum;\n}\n\nint main() {\n  int a[] = {1, 2, 3};    // \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03c4\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 6\n  int b[] = {4, 5, 6, 7}; // -&gt; \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03c4\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 22\n  cout &lt;&lt; adder(a, 3) &lt;&lt; endl; // \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 6\n  cout &lt;&lt; adder(b, 4) &lt;&lt; endl; // \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 28\n}\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ g++ static2.cpp\n$ ./a.out\n6\n28\n</code></pre></p>"},{"location":"theory_ch5/#57","title":"5.7 \u03a0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03b1 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2","text":"<p>\u03a4\u03bf \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae \u03cc\u03bb\u03c9\u03bd \u03c4\u03c9\u03bd \u03bf\u03bd\u03bf\u03bc\u03ac\u03c4\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03c1\u03b1\u03c4\u03ac \u03c3\u03b5 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7\u03bd \u03b5\u03bd\u03c4\u03bf\u03bb\u03ae.</p>"},{"location":"theory_ch5/#58","title":"5.8 \u0395\u03c0\u03ce\u03bd\u03c5\u03bc\u03b5\u03c2 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ad\u03c2","text":"<p>\u039f\u03b9 \u03b5\u03c0\u03ce\u03bd\u03c5\u03bc\u03b5\u03c2 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ad\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bc\u03cc\u03bd\u03bf \u03c6\u03bf\u03c1\u03ac \u03c3\u03b5 \u03c4\u03b9\u03bc\u03ae. \u0394\u03b9\u03b5\u03c5\u03ba\u03bf\u03bb\u03cd\u03bd\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03b1\u03bd\u03b1\u03b3\u03bd\u03c9\u03c3\u03b9\u03bc\u03cc\u03c4\u03b7\u03c4\u03b1.</p> const1.cpp<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n  int width;\n  cout &lt;&lt; \"Input width: \";\n  cin &gt;&gt; width;\n\n  const int result =\n      2 * width + 1; // \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae \u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03b7 \u03c4\u03b9\u03bc\u03ce\u03bd \u03c3\u03b5 \u03b5\u03c0\u03ce\u03bd\u03c5\u03bc\u03b7 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ac\n\n  cout &lt;&lt; result &lt;&lt; endl;\n}\n</code></pre> <p>\u0388\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2: <pre><code>$ g++ const1.cpp\n$ ./a.out\nInput width: 20   \n41\n</code></pre></p> <ol> <li> <p>\u039c\u03b9\u03b1 \u03c3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03b7 \u03c0\u03c1\u03bf\u03c3\u03ad\u03b3\u03b3\u03b9\u03c3\u03b7 \u03c3\u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 C. \u039a\u03ac\u03bb\u03bb\u03b9\u03c0\u03bf\u03c2, \u0391\u03bd\u03bf\u03b9\u03ba\u03c4\u03ad\u03c2 \u0391\u03ba\u03b1\u03b4\u03b7\u03bc\u03b1\u03ca\u03ba\u03ad\u03c2 \u0395\u03ba\u03b4\u03cc\u03c3\u03b5\u03b9\u03c2 \u21a9</p> </li> </ol>"},{"location":"theory_ch6/","title":"6. \u03a4\u03cd\u03c0\u03bf\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd (Data Types)","text":""},{"location":"theory_ch6/#62","title":"6.2 \u03a0\u03c1\u03c9\u03c4\u03bf\u03b3\u03b5\u03bd\u03b5\u03af\u03c2 (\u03b2\u03b1\u03c3\u03b9\u03ba\u03bf\u03af) \u03c4\u03cd\u03c0\u03bf\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd","text":""},{"location":"theory_ch6/#621","title":"6.2.1 \u0391\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03bf\u03af \u03c4\u03cd\u03c0\u03bf\u03b9","text":""},{"location":"theory_ch6/#6211-integer","title":"6.2.1.1 \u0391\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf\u03b9 (Integer)","text":"ranges_integer_types.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;limits.h&gt;\n\nint main() {\n    printf(\"Ranges for integer types in C:\\n\");\n    printf(\"char: %d to %d\\n\", CHAR_MIN, CHAR_MAX);\n    printf(\"unsigned char: 0 to %u\\n\", UCHAR_MAX);\n    printf(\"short: %d to %d\\n\", SHRT_MIN, SHRT_MAX);\n    printf(\"unsigned short: 0 to %u\\n\", USHRT_MAX);\n    printf(\"int: %d to %d\\n\", INT_MIN, INT_MAX);\n    printf(\"unsigned int: 0 to %u\\n\", UINT_MAX);\n    printf(\"long: %ld to %ld\\n\", LONG_MIN, LONG_MAX);\n    printf(\"unsigned long: 0 to %lu\\n\", ULONG_MAX);\n    printf(\"long long: %lld to %lld\\n\", LLONG_MIN, LLONG_MAX);\n    printf(\"unsigned long long: 0 to %llu\\n\", ULLONG_MAX);\n\n    return 0;\n}\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03c3\u03b5 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03c4\u03ae Apple M2Pro</p> <pre><code>$ gcc --version\nApple clang version 16.0.0 (clang-1600.0.26.6)\nTarget: arm64-apple-darwin24.3.0\nThread model: posix\nInstalledDir: /Library/Developer/CommandLineTools/usr/bin\n$ gcc ranges_integer_types.c &amp;&amp; ./a.out\nRanges for integer types in C:\nchar: -128 to 127\nunsigned char: 0 to 255\nshort: -32768 to 32767\nunsigned short: 0 to 65535\nint: -2147483648 to 2147483647\nunsigned int: 0 to 4294967295\nlong: -9223372036854775808 to 9223372036854775807\nunsigned long: 0 to 18446744073709551615\nlong long: -9223372036854775808 to 9223372036854775807\nunsigned long long: 0 to 18446744073709551615\n</code></pre>"},{"location":"theory_ch6/#6212-floating-point","title":"6.2.1.2 \u039a\u03b9\u03bd\u03b7\u03c4\u03ae\u03c2 \u03a5\u03c0\u03bf\u03b4\u03b9\u03b1\u03c3\u03c4\u03bf\u03bb\u03ae\u03c2 (Floating Point)","text":"<ul> <li>IEEE Floating-Point Standard 754</li> <li>https://0.30000000000000004.com/</li> </ul> floating_point.py<pre><code>import math\n\na = 0.1 + 0.2\nprint(\"0.1 + 0.2 =\", a)\n\nprint(\"Is 0.1 + 0.2 exactly 0.3?\", a == 0.3)\n\nprint(\"Is 0.1 + 0.2 approximately 0.3?\", math.isclose(a, 0.3))\n</code></pre> <pre><code>$ python floating_point.py\n0.1 + 0.2 = 0.30000000000000004\nIs 0.1 + 0.2 exactly 0.3? False\nIs 0.1 + 0.2 approximately 0.3? True\n</code></pre>"},{"location":"theory_ch6/#6213-complex-numbers","title":"6.2.1.3 \u039c\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03bf\u03af \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03af (Complex Numbers)","text":"<p>\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03bc\u03b9\u03b3\u03b1\u03b4\u03b9\u03ba\u03bf\u03cd \u03c4\u03cd\u03c0\u03bf\u03c5 \u03c3\u03c4\u03b7\u03bd Python</p> complex_type_example.py<pre><code>z1 = complex(3, 4)  # 3 + 4j\nz2 = 1 - 2j\n\nsum_z = z1 + z2\ndiff_z = z1 - z2\nprod_z = z1 * z2\nquot_z = z1 / z2\n\nabs_z1 = abs(z1)\n\nconj_z1 = z1.conjugate()\n\nreal_part = z1.real\nimag_part = z1.imag\n\nprint(f\"z1: {z1}, z2: {z2}\")\nprint(f\"Sum: {sum_z}\")\nprint(f\"Difference: {diff_z}\")\nprint(f\"Product: {prod_z}\")\nprint(f\"Quotient: {quot_z}\")\nprint(f\"Absolute value of z1: {abs_z1}\")\nprint(f\"Conjugate of z1: {conj_z1}\")\nprint(f\"Real part of z1: {real_part}, Imaginary part of z1: {imag_part}\")\n</code></pre> <pre><code>$ python complex_type_example.py\nz1: (3+4j), z2: (1-2j)\nSum: (4+2j)\nDifference: (2+6j)\nProduct: (11-2j)\nQuotient: (-1+2j)\nAbsolute value of z1: 5.0\nConjugate of z1: (3-4j)\nReal part of z1: 3.0, Imaginary part of z1: 4.0\n</code></pre>"},{"location":"theory_ch6/#6214-decimal","title":"6.2.1.4 \u0394\u03b5\u03ba\u03b1\u03b4\u03b9\u03ba\u03bf\u03af \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03af (Decimal)","text":"<p>BCD (Binary-Coded Decimal): \u039a\u03ac\u03b8\u03b5 \u03c8\u03b7\u03c6\u03af\u03bf \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03af\u03c3\u03c4\u03b1\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03bf \u03b4\u03b9\u03ba\u03cc \u03c4\u03b7\u03c2 \u03c3\u03cd\u03bd\u03bf\u03bb\u03bf \u03b4\u03c5\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03c8\u03b7\u03c6\u03af\u03c9\u03bd.</p> <p>\u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bf \u03b4\u03b5\u03ba\u03b1\u03b4\u03b9\u03ba\u03cc\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 146 \u03b1\u03bd\u03b1\u03c0\u03b1\u03c1\u03af\u03c3\u03c4\u03b1\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf BCD \u03c9\u03c2 \u03bc\u03b9\u03b1 \u03b1\u03ba\u03bf\u03bb\u03bf\u03c5\u03b8\u03af\u03b1 \u03b1\u03c0\u03cc 3 \u03bf\u03bc\u03ac\u03b4\u03b5\u03c2 4 \u03c8\u03b7\u03c6\u03af\u03c9\u03bd, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03c9\u03c2 0001 0100 0110</p> decimal_example.py\"<pre><code>from decimal import Decimal\n\na = Decimal('0.1')\nb = Decimal('0.2')\nc = a + b\n\nprint(\"0.1 + 0.2 using Decimal:\", c)\nprint(\"Is 0.1 + 0.2 exactly 0.3?\", c == Decimal('0.3'))\n</code></pre> <pre><code>$ python decimal_example.py\n0.1 + 0.2 using Decimal: 0.3\nIs 0.1 + 0.2 exactly 0.3? True\n</code></pre>"},{"location":"theory_ch6/#622-boolean","title":"6.2.2 Boolean \u03a4\u03cd\u03c0\u03bf\u03b9","text":"true_false.cpp<pre><code>#include &lt;iostream&gt;\n\nint main() {\n    bool a = true;\n    bool b = false;\n\n    bool c = 1;  // Equivalent to true\n    bool d = 0;  // Equivalent to false\n\n    std::cout &lt;&lt; \"a (true) = \" &lt;&lt; a &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"b (false) = \" &lt;&lt; b &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"c (1) = \" &lt;&lt; c &lt;&lt; std::endl;\n    std::cout &lt;&lt; \"d (0) = \" &lt;&lt; d &lt;&lt; std::endl;\n\n    // implicit conversion\n    int x = true + false;  // true (1) + false (0) = 1\n    std::cout &lt;&lt; \"true + false = \" &lt;&lt; x &lt;&lt; std::endl;\n\n    bool result = (5 &gt; 3);  // true\n    std::cout &lt;&lt; \"5 &gt; 3 is \" &lt;&lt; result &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <pre><code>$ g++ true_false.cpp &amp;&amp; ./a.out \na (true) = 1\nb (false) = 0\nc (1) = 1\nd (0) = 0\ntrue + false = 1\n5 &gt; 3 is 1\n</code></pre>"},{"location":"theory_ch6/#623","title":"6.2.3 \u03a4\u03cd\u03c0\u03bf\u03b9 \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03c9\u03bd","text":"ascii.c<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n    char ch;\n\n    // Print ASCII values for characters A-Z and a-z\n    printf(\"Character    ASCII Value\\n\");\n    printf(\"------------------------\\n\");\n\n    for (ch = 'A'; ch &lt;= 'Z'; ch++) {\n        printf(\"    %c          %d\\n\", ch, ch);\n    }\n\n    printf(\"\\n\");\n\n    for (ch = 'a'; ch &lt;= 'z'; ch++) {\n        printf(\"    %c          %d\\n\", ch, ch);\n    }\n\n    // Demonstrate ASCII values for digits and special characters\n    printf(\"\\nAdditional ASCII characters:\\n\");\n    printf(\"Space: ASCII %d\\n\", ' ');\n    printf(\"0: ASCII %d\\n\", '0');\n    printf(\"9: ASCII %d\\n\", '9');\n    printf(\"!: ASCII %d\\n\", '!');\n    printf(\"@: ASCII %d\\n\", '@');\n    printf(\"#: ASCII %d\\n\", '#');\n\n    return 0;\n}\n</code></pre> <pre><code>$ gcc ascii.c &amp;&amp; ./a.out\nCharacter    ASCII Value\n------------------------\n    A          65\n    B          66\n    C          67\n    D          68\n    E          69\n    F          70\n    G          71\n    H          72\n    I          73\n    J          74\n    K          75\n    L          76\n    M          77\n    N          78\n    O          79\n    P          80\n    Q          81\n    R          82\n    S          83\n    T          84\n    U          85\n    V          86\n    W          87\n    X          88\n    Y          89\n    Z          90\n\n    a          97\n    b          98\n    c          99\n    d          100\n    e          101\n    f          102\n    g          103\n    h          104\n    i          105\n    j          106\n    k          107\n    l          108\n    m          109\n    n          110\n    o          111\n    p          112\n    q          113\n    r          114\n    s          115\n    t          116\n    u          117\n    v          118\n    w          119\n    x          120\n    y          121\n    z          122\n\nAdditional ASCII characters:\nSpace: ASCII 32\n0: ASCII 48\n9: ASCII 57\n!: ASCII 33\n@: ASCII 64\n#: ASCII 35\n</code></pre>"},{"location":"theory_ch6/#63","title":"6.3 \u03a4\u03cd\u03c0\u03bf\u03b9 \u03c3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03c3\u03b5\u03b9\u03c1\u03ce\u03bd \u03c7\u03b1\u03c1\u03b1\u03ba\u03c4\u03ae\u03c1\u03c9\u03bd","text":"string_example.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nint main() {\n  char str[] = \"Hello, C!\";\n\n  int length = strlen(str);\n\n  printf(\"String: %s\\n\", str);\n  printf(\"Length of the string: %d\\n\", length);\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc string_example.c &amp;&amp; ./a.out\nString: Hello, C!\nLength of the string: 9\n</code></pre> string_example.cpp<pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;  \n\nint main() {\n    std::string str1 = \"Hello\";\n    std::string str2 = \"World\";\n\n    // Concatenation\n    std::string result = str1 + \", \" + str2 + \"!\";  // No need for strcat\n    std::cout &lt;&lt; \"Concatenated string: \" &lt;&lt; result &lt;&lt; std::endl;\n\n    // Getting string length\n    std::cout &lt;&lt; \"Length of result: \" &lt;&lt; result.length() &lt;&lt; std::endl;\n\n    // Substring extraction\n    std::string sub = result.substr(0, 5);  // Extract \"Hello\"\n    std::cout &lt;&lt; \"Substring: \" &lt;&lt; sub &lt;&lt; std::endl;\n\n    // Finding a substring\n    size_t pos = result.find(\"World\");\n    if (pos != std::string::npos) {\n        std::cout &lt;&lt; \"'World' found at position: \" &lt;&lt; pos &lt;&lt; std::endl;\n    }\n\n    // Replacing a substring\n    result.replace(pos, 5, \"C++\");\n    std::cout &lt;&lt; \"After replace: \" &lt;&lt; result &lt;&lt; std::endl;\n\n    // Comparing strings\n    if (str1 == \"Hello\") {\n        std::cout &lt;&lt; \"str1 is 'Hello'\" &lt;&lt; std::endl;\n    }\n\n    // Converting a string to C-style string\n    const char* cstr = result.c_str();\n    std::cout &lt;&lt; \"C-style string: \" &lt;&lt; cstr &lt;&lt; std::endl;\n\n    return 0;\n}\n</code></pre> <pre><code>$ g++ string_example.cpp &amp;&amp; ./a.out\nConcatenated string: Hello, World!\nLength of result: 13\nSubstring: Hello\n'World' found at position: 7\nAfter replace: Hello, C++!\nstr1 is 'Hello'\nC-style string: Hello, C++!\n</code></pre>"},{"location":"theory_ch6/#64-enumeration-types","title":"6.4 \u03a4\u03cd\u03c0\u03bf\u03c2 \u0391\u03c0\u03b1\u03c1\u03af\u03b8\u03bc\u03b7\u03c3\u03b7\u03c2 (Enumeration Types)","text":"enum_example.c<pre><code>#include &lt;stdio.h&gt;\n\nenum Day { SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY };\n\nint main() {\n  enum Day today;\n\n  today = WEDNESDAY;\n\n  printf(\"Today is WEDNESDAY, which has an integer value of: %d\\n\", today);\n\n  switch (today) {\n    case MONDAY:\n      printf(\"Start of the workweek!\\n\");\n      break;\n    case FRIDAY:\n      printf(\"Weekend is near!\\n\");\n      break;\n    case SUNDAY:\n    case SATURDAY:\n      printf(\"It's the weekend!\\n\");\n      break;\n    default:\n      printf(\"A regular weekday.\\n\");\n      break;\n  }\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc enum_example.c &amp;&amp; ./a.out\nToday is WEDNESDAY, which has an integer value of: 3\nA regular weekday.\n</code></pre>"},{"location":"theory_ch6/#65-array-types","title":"6.5 \u03a4\u03cd\u03c0\u03bf\u03b9 \u0394\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03c9\u03bd (Array Types)","text":"ragged.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n  int rows = 3;\n  int* arr[rows];\n\n  // Allocate different lengths for each row\n  arr[0] = (int*)malloc(3 * sizeof(int));\n  arr[1] = (int*)malloc(5 * sizeof(int));\n  arr[2] = (int*)malloc(2 * sizeof(int));\n\n  arr[0][0] = 1;\n  arr[0][1] = 2;\n  arr[0][2] = 3;\n  arr[1][0] = 4;\n  arr[1][1] = 5;\n  arr[1][2] = 6;\n  arr[1][3] = 7;\n  arr[1][4] = 8;\n  arr[2][0] = 9;\n  arr[2][1] = 10;\n\n  for (int i = 0; i &lt; rows; i++) {\n    printf(\"Row %d: \", i + 1);\n    for (int j = 0; j &lt; (i == 0 ? 3 : (i == 1 ? 5 : 2)); j++) {\n      printf(\"%d \", arr[i][j]);\n    }\n    printf(\"\\n\");\n  }\n\n  for (int i = 0; i &lt; rows; i++) {\n    free(arr[i]);\n  }\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc ragged.c &amp;&amp; ./a.out\nRow 1: 1 2 3 \nRow 2: 4 5 6 7 8 \nRow 3: 9 10 \n</code></pre>"},{"location":"theory_ch6/#66-associative-arrays","title":"6.6 \u03a3\u03c5\u03c3\u03c7\u03b5\u03c4\u03b9\u03c3\u03c4\u03b9\u03ba\u03bf\u03af \u03c0\u03af\u03bd\u03b1\u03ba\u03b5\u03c2 (Associative Arrays)","text":"associative_array.cpp<pre><code>#include &lt;iostream&gt;\n#include &lt;map&gt;\n#include &lt;string&gt;\n\nint main() {\n  std::map&lt;std::string, int&gt; associativeArray;\n\n  associativeArray[\"apple\"] = 3;\n  associativeArray[\"banana\"] = 5;\n  associativeArray[\"orange\"] = 2;\n\n  std::cout &lt;&lt; \"apple: \" &lt;&lt; associativeArray[\"apple\"] &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"banana: \" &lt;&lt; associativeArray[\"banana\"] &lt;&lt; std::endl;\n  std::cout &lt;&lt; \"orange: \" &lt;&lt; associativeArray[\"orange\"] &lt;&lt; std::endl;\n\n  for (const auto&amp; pair : associativeArray) {\n    std::cout &lt;&lt; pair.first &lt;&lt; \": \" &lt;&lt; pair.second &lt;&lt; std::endl;\n  }\n\n  return 0;\n}\n</code></pre> <pre><code>$ g++ assiative_array.cpp &amp;&amp; ./a.out\napple: 3\nbanana: 5\norange: 2\napple: 3\nbanana: 5\norange: 2\n</code></pre> associative_array.py<pre><code># Creating an associative array using a dictionary\nassociative_array = {}\n\nassociative_array[\"apple\"] = 3\nassociative_array[\"banana\"] = 5\nassociative_array[\"orange\"] = 2\n\nprint(f\"apple: {associative_array['apple']}\")\nprint(f\"banana: {associative_array['banana']}\")\nprint(f\"orange: {associative_array['orange']}\")\n\nfor key, value in associative_array.items():\n    print(f\"{key}: {value}\")\n</code></pre> <pre><code>$ python associate_array.py\napple: 3\nbanana: 5\norange: 2\napple: 3\nbanana: 5\norange: 2\n</code></pre>"},{"location":"theory_ch6/#67-record-types","title":"6.7 \u03a4\u03cd\u03c0\u03bf\u03b9 \u03b5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ce\u03bd (Record Types)","text":"record_example.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\nstruct Student {\n  int id;\n  char name[50];\n  float grade;\n};\n\nint main() {\n  struct Student student1;\n  student1.id = 1;\n  strcpy(student1.name, \"John Doe\");\n  student1.grade = 92.5;\n\n  struct Student student2 = {2, \"Jane Smith\", 88.0};\n\n  printf(\"Student 1:\\n\");\n  printf(\"ID: %d\\n\", student1.id);\n  printf(\"Name: %s\\n\", student1.name);\n  printf(\"Grade: %.2f\\n\\n\", student1.grade);\n\n  printf(\"Student 2:\\n\");\n  printf(\"ID: %d\\n\", student2.id);\n  printf(\"Name: %s\\n\", student2.name);\n  printf(\"Grade: %.2f\\n\", student2.grade);\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc record_example.c &amp;&amp; ./a.out\nStudent 1:\nID: 1\nName: John Doe\nGrade: 92.50\n\nStudent 2:\nID: 2\nName: Jane Smith\nGrade: 88.00\n</code></pre> named_tuple.py<pre><code>from collections import namedtuple\n\nStudent = namedtuple(\"Student\", [\"id\", \"name\", \"grade\"])\n\nstudent1 = Student(1, \"John Doe\", 92.5)\nstudent2 = Student(2, \"Jane Smith\", 88.0)\n\nprint(\"Student 1:\")\nprint(f\"ID: {student1.id}\")\nprint(f\"Name: {student1.name}\")\nprint(f\"Grade: {student1.grade}\\n\")\n\n\nprint(\"Student 2:\")\nprint(f\"ID: {student2.id}\")\nprint(f\"Name: {student2.name}\")\nprint(f\"Grade: {student2.grade}\")\n</code></pre> <pre><code>$ python named_tuple.py\nStudent 1:\nID: 1\nName: John Doe\nGrade: 92.5\n\nStudent 2:\nID: 2\nName: Jane Smith\nGrade: 88.0\n</code></pre>"},{"location":"theory_ch6/#68-tuple-types","title":"6.8 \u03a4\u03cd\u03c0\u03bf\u03b9 \u03a0\u03bb\u03b5\u03b9\u03ac\u03b4\u03b1\u03c2 (Tuple Types)","text":"tuple_example.py<pre><code># 1. Creating Tuples\ntuple1 = (1, 2, 3, 4)  # A tuple of integers\ntuple2 = (\"apple\", \"banana\", \"cherry\")  # A tuple of strings\ntuple3 = (1, \"banana\", 3.14, True)  # A tuple with mixed data types\ntuple4 = ()  # An empty tuple\ntuple5 = (1,)  # A tuple with a single element (note the comma)\n\n# 2. Accessing Tuple Elements (Indexing and Slicing)\nprint(\"First element of tuple1:\", tuple1[0])  # Indexing\nprint(\"Last element of tuple2:\", tuple2[-1])  # Negative indexing\nprint(\"Slicing tuple3 (from index 1 to 3):\", tuple3[1:3])  # Slicing\n\n# 3. Tuple Immutability (Can't modify elements)\n# tuple1[0] = 100  # This would raise an error since tuples are immutable\n\n# 4. Concatenating Tuples\ntuple6 = tuple1 + tuple2  # Concatenating two tuples\nprint(\"\\nConcatenated tuple6:\", tuple6)\n\n# 5. Repeating Tuples\ntuple7 = tuple2 * 2  # Repeating tuple2 twice\nprint(\"\\nRepeated tuple7:\", tuple7)\n\n# 6. Length of a Tuple\nprint(\"\\nLength of tuple1:\", len(tuple1))\n\n# 7. Checking Membership\nprint(\"\\nIs 'apple' in tuple2?\", \"apple\" in tuple2)  # Membership test\nprint(\"Is 10 in tuple1?\", 10 in tuple1)\n\n# 8. Iterating through a Tuple\nprint(\"\\nIterating through tuple3:\")\nfor item in tuple3:\n    print(item)\n\n# 9. Nested Tuples\nnested_tuple = (1, 2, (3, 4, 5))  # Tuple within a tuple\nprint(\"\\nNested tuple:\", nested_tuple)\nprint(\"Accessing element in nested tuple:\", nested_tuple[2][1])  # Accessing inner tuple element\n\n# 10. Tuple Unpacking\nx, y, z = (10, 20, 30)  # Unpacking a tuple\nprint(\"\\nTuple unpacking:\")\nprint(\"x =\", x, \"y =\", y, \"z =\", z)\n\n# 11. Counting Occurrences of an Element\ntuple8 = (1, 2, 2, 3, 4, 2)\nprint(\"\\nCount of '2' in tuple8:\", tuple8.count(2))\n\n# 12. Finding the Index of an Element\nprint(\"Index of '3' in tuple8:\", tuple8.index(3))\n</code></pre> <pre><code>$ python named_tuple.py\nFirst element of tuple1: 1\nLast element of tuple2: cherry\nSlicing tuple3 (from index 1 to 3): ('banana', 3.14)\n\nConcatenated tuple6: (1, 2, 3, 4, 'apple', 'banana', 'cherry')\n\nRepeated tuple7: ('apple', 'banana', 'cherry', 'apple', 'banana', 'cherry')\n\nLength of tuple1: 4\n\nIs 'apple' in tuple2? True\nIs 10 in tuple1? False\n\nIterating through tuple3:\n1\nbanana\n3.14\nTrue\n\nNested tuple: (1, 2, (3, 4, 5))\nAccessing element in nested tuple: 4\n\nTuple unpacking:\nx = 10 y = 20 z = 30\n\nCount of '2' in tuple8: 3\nIndex of '3' in tuple8: 3\n</code></pre>"},{"location":"theory_ch6/#69-list-types","title":"6.9 \u03a4\u03cd\u03c0\u03bf\u03b9 \u039b\u03af\u03c3\u03c4\u03b1\u03c2 (List Types)","text":"list_example.py<pre><code># 1. Creating Lists\nlist1 = [1, 2, 3, 4]  # A list of integers\nlist2 = [\"apple\", \"banana\", \"cherry\"]  # A list of strings\nlist3 = [1, \"banana\", 3.14, True]  # A list with mixed data types\nlist4 = []  # An empty list\nlist5 = [1]  # A list with a single element\n\n# 2. Accessing List Elements (Indexing and Slicing)\nprint(\"First element of list1:\", list1[0])  # Indexing\nprint(\"Last element of list2:\", list2[-1])  # Negative indexing\nprint(\"Slicing list3 (from index 1 to 3):\", list3[1:3])  # Slicing\n\n# 3. Modifying List Elements\nlist1[0] = 100  # Modify an element at a specific index\nprint(\"\\nAfter modifying list1:\", list1)\n\n# 4. Adding Elements to a List\nlist2.append(\"orange\")  # Adding an element to the end of the list\nprint(\"\\nAfter appending 'orange' to list2:\", list2)\n\nlist2.insert(1, \"grape\")  # Inserting an element at a specific position (index 1)\nprint(\"After inserting 'grape' at index 1:\", list2)\n\n# 5. Removing Elements from a List\nlist2.remove(\"banana\")  # Removing an element by value\nprint(\"\\nAfter removing 'banana' from list2:\", list2)\n\nremoved_element = list2.pop(1)  # Removing and returning an element by index\nprint(\"After popping index 1:\", list2)\nprint(\"Removed element:\", removed_element)\n\n# 6. Concatenating Lists\nlist6 = list1 + list2  # Concatenating two lists\nprint(\"\\nConcatenated list6:\", list6)\n\n# 7. Repeating Lists\nlist7 = list2 * 2  # Repeating list2 twice\nprint(\"\\nRepeated list7:\", list7)\n\n# 8. Length of a List\nprint(\"\\nLength of list1:\", len(list1))\n\n# 9. Checking Membership\nprint(\"\\nIs 'apple' in list2?\", \"apple\" in list2)  # Membership test\nprint(\"Is 10 in list1?\", 10 in list1)\n\n# 10. Iterating through a List\nprint(\"\\nIterating through list3:\")\nfor item in list3:\n    print(item)\n\n# 11. Nested Lists\nnested_list = [1, 2, [3, 4, 5]]  # List within a list\nprint(\"\\nNested list:\", nested_list)\nprint(\"Accessing element in nested list:\", nested_list[2][1])  # Accessing inner list element\n\n# 12. List Unpacking\nx, y, z = [10, 20, 30]  # Unpacking a list\nprint(\"\\nList unpacking:\")\nprint(\"x =\", x, \"y =\", y, \"z =\", z)\n\n# 13. Counting Occurrences of an Element\nlist8 = [1, 2, 2, 3, 4, 2]\nprint(\"\\nCount of '2' in list8:\", list8.count(2))\n\n# 14. Finding the Index of an Element\nprint(\"Index of '3' in list8:\", list8.index(3))\n</code></pre> <pre><code>$ python list_example.py\nFirst element of list1: 1\nLast element of list2: cherry\nSlicing list3 (from index 1 to 3): ['banana', 3.14]\n\nAfter modifying list1: [100, 2, 3, 4]\n\nAfter appending 'orange' to list2: ['apple', 'banana', 'cherry', 'orange']\nAfter inserting 'grape' at index 1: ['apple', 'grape', 'banana', 'cherry', 'orange']\n\nAfter removing 'banana' from list2: ['apple', 'grape', 'cherry', 'orange']\nAfter popping index 1: ['apple', 'cherry', 'orange']\nRemoved element: grape\n\nConcatenated list6: [100, 2, 3, 4, 'apple', 'cherry', 'orange']\n\nRepeated list7: ['apple', 'cherry', 'orange', 'apple', 'cherry', 'orange']\n\nLength of list1: 4\n\nIs 'apple' in list2? True\nIs 10 in list1? False\n\nIterating through list3:\n1\nbanana\n3.14\nTrue\n\nNested list: [1, 2, [3, 4, 5]]\nAccessing element in nested list: 4\n\nList unpacking:\nx = 10 y = 20 z = 30\n\nCount of '2' in list8: 3\nIndex of '3' in list8: 3\n</code></pre>"},{"location":"theory_ch6/#610-union-types","title":"6.10 \u03a4\u03cd\u03c0\u03bf\u03b9 \u0395\u03bd\u03ce\u03c3\u03b5\u03c9\u03bd (Union Types)","text":"union_example.c<pre><code>#include &lt;stdio.h&gt;\n\nunion Data {\n  int intVal;\n  float floatVal;\n  char charVal;\n};\n\nint main() {\n  union Data data;\n\n  data.intVal = 10;\n  printf(\"data.intVal = %d\\n\", data.intVal);\n\n  data.floatVal = 3.14;\n  printf(\"data.floatVal = %.2f\\n\", data.floatVal);\n\n  data.charVal = 'A';\n  printf(\"data.charVal = %c\\n\", data.charVal);\n\n  printf(\"After overwriting, data.intVal = %d\\n\", data.intVal);\n  printf(\"After overwriting, data.floatVal = %.2f\\n\", data.floatVal);\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc union_example.c &amp;&amp; ./a.out\ndata.intVal = 10\ndata.floatVal = 3.14\ndata.charVal = A\nAfter overwriting, data.intVal = 1078523201\nAfter overwriting, data.floatVal = 3.14\n</code></pre>"},{"location":"theory_ch6/#611-pointer-types-and-reference-types","title":"6.11 \u03a4\u03cd\u03c0\u03bf\u03b9 \u0394\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd \u03ba\u03b1\u03b9 \u03a4\u03cd\u03c0\u03bf\u03b9 \u0391\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2 (Pointer Types and Reference Types)","text":"pointer_vs_reference.cpp<pre><code>#include &lt;iostream&gt;\n\n// Function that uses a reference to modify the original value\nvoid modifyByReference(int &amp;x) {\n    x = x * 2; // Modifying the original value by reference\n}\n\n// Function that uses a pointer to modify the original value\nvoid modifyByPointer(int *x) {\n    if (x != nullptr) { // Check if the pointer is not null\n        *x = *x * 2; // Dereferencing the pointer and modifying the value\n    }\n}\n\nint main() {\n    int a = 5;\n    int b = 10;\n\n    std::cout &lt;&lt; \"Original values:\\n\";\n    std::cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; \", b = \" &lt;&lt; b &lt;&lt; std::endl;\n\n    // Call function with reference\n    modifyByReference(a);\n    std::cout &lt;&lt; \"\\nAfter modifyByReference:\\n\";\n    std::cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; \", b = \" &lt;&lt; b &lt;&lt; std::endl;  // a is modified by reference\n\n    // Call function with pointer\n    modifyByPointer(&amp;b);\n    std::cout &lt;&lt; \"\\nAfter modifyByPointer:\\n\";\n    std::cout &lt;&lt; \"a = \" &lt;&lt; a &lt;&lt; \", b = \" &lt;&lt; b &lt;&lt; std::endl;  // b is modified by pointer\n\n    return 0;\n}\n</code></pre> <pre><code>$ g++ pointer_vs_reference.cpp &amp;&amp; ./a.out\nOriginal values:\na = 5, b = 10\n\nAfter modifyByReference:\na = 10, b = 10\n\nAfter modifyByPointer:\na = 10, b = 20\n</code></pre>"},{"location":"theory_ch6/#6112","title":"6.11.2 \u039b\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b5\u03c2 \u03b4\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd","text":"<p>\u0391\u03bd\u03ac\u03b8\u03b5\u03c3\u03b7 (assignment) \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac (dereference)</p> pointer_operations.c<pre><code>#include &lt;stdio.h&gt;\n\nvoid swap(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n\nint main() {\n    int x = 10, y = 20;\n    int *ptr1 = &amp;x, *ptr2 = &amp;y;\n\n    printf(\"Before swapping: x = %d, y = %d\\n\", x, y);\n    swap(ptr1, ptr2);\n    printf(\"After swapping: x = %d, y = %d\\n\", x, y);\n\n    return 0;\n}\n</code></pre> <pre><code>Before swapping: x = 10, y = 20\nAfter swapping: x = 20, y = 10\n</code></pre>"},{"location":"theory_ch6/#6113","title":"6.11.3 \u03a0\u03c1\u03bf\u03b2\u03bb\u03ae\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5 \u03b4\u03b5\u03af\u03ba\u03c4\u03b5\u03c2","text":""},{"location":"theory_ch6/#61131-dangling-pointers","title":"6.11.3.1 \u0391\u03b9\u03c9\u03c1\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf\u03b9 \u0394\u03b5\u03af\u03ba\u03c4\u03b5\u03c2 (Dangling Pointers)","text":"dangling_pointer1.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nint main() {\n  int *p1 = (int *)malloc(sizeof(int));\n  if (p1 == NULL) {\n    printf(\"Memory allocation failed!\\n\");\n    return -1;\n  }\n  *p1 = 42;\n  printf(\"Value in allocated memory: %d\\n\", *p1);\n  int *p2 = p1;\n  free(p1);\n  printf(\"Memory has been freed.\\n\");\n\n  printf(\"Value in dangling pointer: %d\\n\", *p2);  // Undefined behavior!\n}\n</code></pre> <pre><code>$ gcc dangling_pointer1.c &amp;&amp; ./a.out\nValue in allocated memory: 42\nMemory has been freed.\nValue in dangling pointer: 0\n</code></pre>"},{"location":"theory_ch6/#61132","title":"6.11.3.2 \u03a7\u03b1\u03bc\u03ad\u03bd\u03b5\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae\u03c2 \u03b4\u03ad\u03c3\u03bc\u03b5\u03c5\u03c3\u03b7\u03c2 \u03c3\u03c9\u03c1\u03bf\u03cd","text":"memory_leakage.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\nvoid createMemoryLeak(int iteration) {\n    int *ptr = (int *)malloc(5 * sizeof(int)); // Allocating memory for 5 integers\n    if (ptr == NULL) {\n        printf(\"Memory allocation failed\\n\");\n        return;\n    }\n\n    // Assigning values\n    for (int i = 0; i &lt; 5; i++) {\n        ptr[i] = i * 10;\n    }\n\n    // Printing values\n    printf(\"Allocated memory region %d: \", iteration);\n    for (int i = 0; i &lt; 5; i++) {\n        printf(\"%d \", ptr[i]);\n    }\n    printf(\"\\n\");\n\n    // Memory leak occurs because we forget to free(ptr)\n    printf(\"Memory at address %p is not freed.\\n\", (void*)ptr);\n}\n\nvoid memoryLeak() {\n    for (int i = 0; i &lt; 3; i++) {\n        createMemoryLeak(i + 1);\n    }\n}\n\nint main() {\n    memoryLeak();\n    return 0;\n}\n</code></pre> <pre><code>$ gcc memory_leakage.c &amp;&amp; ./a.out\nAllocated memory region 1: 0 10 20 30 40 \nMemory at address 0x144605e40 is not freed.\nAllocated memory region 2: 0 10 20 30 40 \nMemory at address 0x144605dc0 is not freed.\nAllocated memory region 3: 0 10 20 30 40 \nMemory at address 0x144605de0 is not freed.\n</code></pre>"},{"location":"theory_ch6/#61133-c-c","title":"6.11.3.3 \u0394\u03b5\u03af\u03ba\u03c4\u03b5\u03c2 \u03c3\u03c4\u03b7 C \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7 C++","text":"<p>\u0391\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ae \u03b4\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd \u03c3\u03c4\u03b7 C</p> pointer_arithmetic.c<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n  int arr[] = {1, 2, 3, 4, 5};\n  int *ptr = arr;\n\n  printf(\"Array elements using pointer arithmetic:\\n\");\n  for (int i = 0; i &lt; 5; i++) {\n    printf(\"%d \", *(ptr + i));\n  }\n  printf(\"\\n\");\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc pointer_arithmetic.c &amp;&amp; ./a.out\nArray elements using pointer arithmetic:\n1 2 3 4 5 \n</code></pre> <p>void \u03b4\u03b5\u03af\u03ba\u03c4\u03b5\u03c2</p> void_pointers.c<pre><code>#include &lt;stdio.h&gt;\n\nvoid printValue(void *ptr, char type) {\n  switch (type) {\n    case 'i':\n      printf(\"Integer: %d\\n\", *(int *)ptr);\n      break;\n    case 'f':\n      printf(\"Float: %.2f\\n\", *(float *)ptr);\n      break;\n    case 'c':\n      printf(\"Character: %c\\n\", *(char *)ptr);\n      break;\n    default:\n      printf(\"Unknown type\\n\");\n  }\n}\n\nint main() {\n  int a = 10;\n  float b = 5.5;\n  char c = 'A';\n\n  void *ptr;\n\n  ptr = &amp;a;\n  printValue(ptr, 'i');\n\n  ptr = &amp;b;\n  printValue(ptr, 'f');\n\n  ptr = &amp;c;\n  printValue(ptr, 'c');\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc void_pointers.c &amp;&amp; ./a.out\nInteger: 10\nFloat: 5.50\nCharacter: A\n</code></pre>"},{"location":"theory_ch6/#61173","title":"6.11.7.3 \u0394\u03b9\u03b1\u03c7\u03b5\u03af\u03c1\u03b9\u03c3\u03b7 \u03a3\u03c9\u03c1\u03bf\u03cd","text":"<ul> <li>Reference counter</li> <li>Mark and Sweep</li> </ul> <p>Garbage Collection (Mark &amp; Sweep) - Computerphile</p>"},{"location":"theory_ch7/","title":"7. \u0395\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2","text":""},{"location":"theory_ch7/#72","title":"7.2 \u0391\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2","text":"<p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 \u03bc\u03b5\u03b3\u03ac\u03bb\u03bf\u03c5\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03c3\u03c4\u03b7 Python</p> large_numbers.py<pre><code>import math\n\ndef factorial(n):\n    return math.factorial(n)\n\n# Calculate factorial of 100\nlarge_factorial = factorial(100)\nprint(f\"The factorial of 100 is: {large_factorial}\")\n</code></pre> <pre><code>$ python large_numbers.py \nThe factorial of 100 is: 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 \u03bc\u03b5\u03b3\u03ac\u03bb\u03bf\u03c5\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03cd\u03c2 \u03c3\u03c4\u03b7 C</p> large_numbers.c<pre><code>#include &lt;stdio.h&gt;\n#include &lt;gmp.h&gt;\n\nvoid factorial(mpz_t result, unsigned long n) {\n    mpz_t temp;\n    mpz_init_set_ui(result, 1);\n    mpz_init_set_ui(temp, 1);\n\n    for (unsigned long i = 2; i &lt;= n; i++) {\n        mpz_mul_ui(temp, temp, i);\n        mpz_set(result, temp);\n    }\n\n    mpz_clear(temp);\n}\n\nint main(void) {\n    mpz_t large_factorial;\n    mpz_init(large_factorial);\n\n    factorial(large_factorial, 100);\n    gmp_printf(\"The factorial of 100 is: %Zd\\n\", large_factorial);\n\n    mpz_clear(large_factorial);\n    return 0;\n}\n</code></pre> <p>\u0395\u03b3\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7\u03c2 GMP \u03c3\u03b5 Linux <pre><code>$ sudo apt update\n$ sudo apt install libgmp-dev\n</code></pre></p> <pre><code>$ gcc -o factorial factorial.c -lgmp &amp; ./a.out\nThe factorial of 100 is: 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000\n</code></pre>"},{"location":"theory_ch7/#721","title":"7.2.1 \u03a3\u03b5\u03b9\u03c1\u03ac \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd","text":"expressions.py<pre><code>print(3 / 2)  # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 1.5\nprint(3 // 2)  # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 1\nprint(-7 // 2)  # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 -4 (\u03c3\u03c4\u03c1\u03bf\u03b3\u03c5\u03bb\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c0\u03c1\u03bf\u03c2 \u03bc\u03b9\u03ba\u03c1\u03cc\u03c4\u03b5\u03c1\u03bf \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc)\n\n\nprint(2 + -3 * 4)  # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 -10 (\u03c5\u03c8\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7 \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03bf\u03c5 \u03bc\u03bf\u03bd\u03b1\u03b4\u03b9\u03b1\u03af\u03bf\u03c5 - \u03b1\u03c0\u03cc \u03c4\u03bf *)\n\n# fmt:off\nprint(2 * 3 * 4) # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 24 (\u03b1\u03c0\u03cc \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03ac \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b1 \u03b4\u03b5\u03be\u03b9\u03ac \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae *, \u03cc\u03c0\u03c9\u03c2 \u03ba\u03b1\u03b9 \u03b3\u03b9\u03b1 +, -, /)\nprint(2**3**2) # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 512 (\u03b1\u03c0\u03cc \u03b4\u03b5\u03be\u03b9\u03ac \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b1 \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03ac \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae **)\nprint(-2**4)  # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 -16 (\u03c5\u03c8\u03b7\u03bb\u03cc\u03c4\u03b5\u03c1\u03b7 \u03c0\u03c1\u03bf\u03c4\u03b5\u03c1\u03b1\u03b9\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c4\u03bf\u03c5 ** \u03b1\u03c0\u03cc \u03c4\u03bf \u03bc\u03bf\u03bd\u03b1\u03b4\u03b9\u03b1\u03af\u03bf -)\n# fmt: on\n\nprint(2 &lt; 3 and 3 &lt; 4)  # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 True\nprint(2 &lt; 3 &lt; 4)  # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 True (\u03b9\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03bf \u03bc\u03b5 \u03c4\u03bf \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9)\n\n# fmt:off\nprint(3 &amp; 5) # \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 1, \u03b4\u03b9\u03cc\u03c4\u03b9 \u03bf\u03b9 \u03b1\u03c1\u03b9\u03b8\u03bc\u03bf\u03af \u03bc\u03b5\u03c4\u03b1\u03c4\u03c1\u03ad\u03c0\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b4\u03c5\u03b1\u03b4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03ba\u03b1\u03b9 \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03c0\u03c1\u03ac\u03be\u03b7 bitwise AND\n# fmt: on\n</code></pre> expressions.c<pre><code>#include &lt;limits.h&gt;\n#include &lt;stdio.h&gt;\n\nint main() {\n  printf(\"%d\\n\", 3 / 2);  // 1 (\u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b1 \u03b4\u03b9\u03b1\u03af\u03c1\u03b5\u03c3\u03b7)\n  printf(\"%d\\n\",\n         -7 / 2);  // -3 (\u03c3\u03c4\u03c1\u03bf\u03b3\u03b3\u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c0\u03c1\u03bf\u03c2 \u03c4\u03bf \u03bc\u03b7\u03b4\u03ad\u03bd, \u03cc\u03c7\u03b9 -4 \u03cc\u03c0\u03c9\u03c2 \u03b7 Python)\n\n  printf(\"%d\\n\", 2 &lt; 3 &lt; 4);  // \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 1, \u03b4\u03b9\u03cc\u03c4\u03b9 (2 &lt; 3) -&gt; 1,  (1 &lt; 4) -&gt; 1\n  printf(\"%d\\n\",\n         2 &lt; (3 &lt; 4));  // \u03b5\u03ba\u03c4\u03c5\u03c0\u03ce\u03bd\u03b5\u03b9 0, \u03b4\u03b9\u03cc\u03c4\u03b9 (3 &lt; 4) -&gt; 1,  (2 &lt; 1) -&gt; 0\n\n  printf(\"%d\\n\",\n         INT_MAX + 1);  // undefined behavior (\u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03c4\u03b9\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5)\n\n  printf(\"%d\\n\", 'a' * 'b');  // 97 * 98 = 9506 (\u03b1\u03bd\u03b1\u03b2\u03ac\u03b8\u03bc\u03b9\u03c3\u03b7 \u03c3\u03b5 \u03b1\u03ba\u03b5\u03c1\u03b1\u03af\u03bf\u03c5\u03c2)\n\n  int i = 10;\n  printf(\"%d\\n\", i++ + i++);  // undefined behavior (\u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03c4\u03b9\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5)\n}\n</code></pre>"},{"location":"theory_ch7/#7216-conditional-expressions","title":"7.2.1.6 \u0395\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2 \u03c5\u03c0\u03cc \u03c3\u03c5\u03bd\u03b8\u03ae\u03ba\u03b7 (conditional expressions)","text":"conditional_expression.c<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n  int x = 10, y = 20;\n\n  int max = (x &gt; y) ? x : y;\n  printf(\"The maximum value is: %d\\n\", max);\n\n  int num = 15;\n  printf(\"%d is %s\\n\", num, (num % 2 == 0) ? \"even\" : \"odd\");\n\n  int a = -5;\n  printf(\"%d is %s\\n\", a, (a &gt; 0) ? \"positive\" : (a &lt; 0) ? \"negative\" : \"zero\");\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc conditional_expression.c &amp;&amp; ./a.out\nThe maximum value is: 20\n15 is odd\n-5 is negative\n</code></pre>"},{"location":"theory_ch7/#722","title":"7.2.2 \u03a3\u03b5\u03b9\u03c1\u03ac \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c9\u03bd","text":""},{"location":"theory_ch7/#7221-side-effects","title":"7.2.2.1 \u03a0\u03b1\u03c1\u03b5\u03bd\u03ad\u03c1\u03b3\u03b5\u03b9\u03b5\u03c2 (side-effects)","text":"side_effects.c<pre><code>#include &lt;stdio.h&gt;\n\nint a = 5;\nint fun1() {\n  a = 17;\n  return 3;\n}\n\nint main() {\n  a = a + fun1(); // udefined behavior\n  printf(\"Result: %d\\n\", a);\n  return 0;\n}\n</code></pre>"},{"location":"theory_ch7/#7222-referential-transparency","title":"7.2.2.2 \u0391\u03bd\u03b1\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae \u03b4\u03b9\u03b1\u03c6\u03ac\u03bd\u03b5\u03b9\u03b1 (referential transparency)","text":"<p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c0\u03b1\u03c1\u03b1\u03b2\u03af\u03b1\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03b9\u03ba\u03ae\u03c2 \u03b4\u03b9\u03b1\u03c6\u03ac\u03bd\u03b5\u03b9\u03b1\u03c2 \u03c3\u03c4\u03b7 C</p> no_referential_transparency.c<pre><code>#include &lt;stdio.h&gt;\n\nint counter = 0; // Global variable affecting function behavior\n\nint nonReferentialTransparentFunction(int x) {\n    counter++; // Side effect: modifies global state\n    return x + counter;\n}\n\nint main() {\n    int a = 5;\n\n    // Calling the function multiple times with the same argument\n    printf(\"First call: %d\\n\", nonReferentialTransparentFunction(a));\n    printf(\"Second call: %d\\n\", nonReferentialTransparentFunction(a));\n    printf(\"Third call: %d\\n\", nonReferentialTransparentFunction(a));\n\n    return 0;\n}\n</code></pre> <pre><code>$ gcc no_referential_transparency.c &amp;&amp; ./a.out\nFirst call: 6\nSecond call: 7\nThird call: 8\n</code></pre>"},{"location":"theory_ch7/#73","title":"7.3 \u03a5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03c9\u03bc\u03ad\u03bd\u03bf\u03b9 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2","text":"<p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03b5 Python</p> operator_overload.py<pre><code>class Point:\n    def __init__(self, x, y):\n        self.x = x\n        self.y = y\n\n    # Overload the + operator\n    def __add__(self, other):\n        return Point(self.x + other.x, self.y + other.y)\n\n    # Overload the string representation\n    def __str__(self):\n        return f\"({self.x}, {self.y})\"\n\n\np1 = Point(1, 2)\np2 = Point(3, 4)\np3 = p1 + p2\n\nprint(p3)\n</code></pre> <pre><code>$ python operator_overload.py\n(4,6)\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03b5 C++</p> operator_overload.cpp<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass Point {\npublic:\n    int x, y;\n\n    Point(int x, int y) : x(x), y(y) {}\n\n    Point operator+(const Point&amp; other) {\n        return Point(x + other.x, y + other.y);\n    }\n\n    friend ostream&amp; operator&lt;&lt;(ostream&amp; os, const Point&amp; p) {\n        os &lt;&lt; \"(\" &lt;&lt; p.x &lt;&lt; \", \" &lt;&lt; p.y &lt;&lt; \")\";\n        return os;\n    }\n};\n\nint main() {\n    Point p1(1, 2);\n    Point p2(3, 4);\n    Point p3 = p1 + p2;  \n\n    cout &lt;&lt; p3 &lt;&lt; endl;  \n    return 0;\n}\n</code></pre> <pre><code>$ g++ operator_overload.cpp &amp;&amp; ./a.out\n(4,6)\n</code></pre>"},{"location":"theory_ch7/#74","title":"7.4 \u039c\u03b5\u03c4\u03b1\u03c4\u03c1\u03bf\u03c0\u03ad\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd","text":"widening_narrowing.c<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n  // Widening Conversions (\u03b1\u03c3\u03c6\u03b1\u03bb\u03ae\u03c2)\n  int smallInt = 100;\n  float wideFloat = smallInt;     // int -&gt; float\n  double wideDouble = wideFloat;  // float -&gt; double\n\n  printf(\"Widening Conversions:\\n\");\n  printf(\"int to float: %d \u2192 %f\\n\", smallInt, wideFloat);\n  printf(\"float to double: %f \u2192 %lf\\n\\n\", wideFloat, wideDouble);\n\n  // Narrowing Conversions (\u03b5\u03c0\u03b9\u03ba\u03af\u03bd\u03b4\u03c5\u03bd\u03bf)\n  double largeDouble = 123456.789;\n  float narrowFloat =\n      largeDouble;              // double -&gt; float (\u03c0\u03b9\u03b8\u03bd\u03b1\u03ae \u03b1\u03c0\u03ce\u03bb\u03b5\u03b9\u03b1 \u03b1\u03ba\u03c1\u03af\u03b2\u03b5\u03b9\u03b1\u03c2)\n  int narrowInt = narrowFloat;  // float \u2192 int (\u03b1\u03c0\u03bf\u03ba\u03bf\u03c0\u03ae \u03b4\u03b5\u03ba\u03b1\u03b4\u03b9\u03ba\u03ce\u03bd \u03c8\u03b7\u03c6\u03af\u03c9\u03bd)\n\n  printf(\"Narrowing Conversions:\\n\");\n  printf(\"double to float: %lf \u2192 %f\\n\", largeDouble, narrowFloat);\n  printf(\"float to int: %f \u2192 %d\\n\\n\", narrowFloat, narrowInt);\n\n  // Overflow in Narrowing\n  unsigned char narrowChar = 300;  // char (0-255), 300 wraps around\n  printf(\"Overflow in Narrowing:\\n\");\n  printf(\"300 stored in unsigned char: %d\\n\",\n         narrowChar);  // Output: 44 (300 % 256)\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc widening_narrowing.c &amp;&amp; ./a.out\nwidening_narrowing.c:24:30: warning: implicit conversion from 'int' to 'unsigned char' changes value from 300 to 44 [-Wconstant-conversion]\n   24 |   unsigned char narrowChar = 300;  // char (0-255), 300 wraps around\n      |                 ~~~~~~~~~~   ^~~\n1 warning generated.\nWidening Conversions:\nint to float: 100 \u2192 100.000000\nfloat to double: 100.000000 \u2192 100.000000\n\nNarrowing Conversions:\ndouble to float: 123456.789000 \u2192 123456.789062\nfloat to int: 123456.789062 \u2192 123456\n\nOverflow in Narrowing:\n300 stored in unsigned char: 44\n</code></pre>"},{"location":"theory_ch7/#75-boolean","title":"7.5 \u03a3\u03c7\u03b5\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03ba\u03b1\u03b9 Boolean \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03b9\u03c2","text":"equality_vs_identity.py<pre><code># \u0391\u03bd\u03ac\u03b8\u03b5\u03c3\u03b7 (=)\na = [1, 2, 3]  # 'a' \u03b4\u03b5\u03af\u03c7\u03bd\u03b5\u03b9 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03bb\u03af\u03c3\u03c4\u03b1\u03c2\n\n# \u0399\u03c3\u03cc\u03c4\u03b7\u03c4\u03b1 (==)\nb = [1, 2, 3]\nprint(a == b)  # True -&gt; \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03b4\u03cd\u03bf \u03bb\u03af\u03c3\u03c4\u03b5\u03c2 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf\n\n# \u03c4\u03b1\u03c5\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 (is)\nprint(a is b)  # False -&gt; \u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ac \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03c3\u03c4\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7\n\n# \u03a4\u03b1\u03c5\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03c3\u03b5 immutable \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2\nx = 5\ny = 5\nprint(x == y)  # True -&gt; \u03ca\u03b4\u03b9\u03b1 \u03c4\u03b9\u03bc\u03ae\nprint(\n    x is y\n)  # True -&gt; \u039f\u03b9 \u03bc\u03b9\u03ba\u03c1\u03bf\u03af \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03bf\u03b9 \u03b3\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 cache, \u03c3\u03c5\u03bd\u03b5\u03c0\u03ce\u03c2 x, y \u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf\n\n# \u03a4\u03b1\u03c5\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03bc\u03b5 mutable \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2\nc = a  #  \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae c \u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03af\u03b4\u03b9\u03b1 \u03bb\u03af\u03c3\u03c4\u03b1 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae a\nprint(a is c)  # True -&gt; \u03b7 c \u03ba\u03b1\u03b9 \u03b7 a \u03b5\u03af\u03bd\u03b1\u03b9 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c3\u03c4\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7\n\n# \u039f\u03b9 \u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03c3\u03c4\u03bf a \u03b5\u03c0\u03b7\u03c1\u03b5\u03ac\u03b6\u03bf\u03c5\u03bd \u03ba\u03b1\u03b9 \u03c4\u03bf c\na.append(4)\nprint(c)  # [1, 2, 3, 4]\n\n# \u03a7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 is \u03c3\u03b5 strings\ns1 = \"hello\"\ns2 = \"hello\"\nprint(s1 == s2)  # True -&gt; \u038a\u03b4\u03b9\u03b1 \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03b1\nprint(\n    s1 is s2\n)  # True -&gt; \u03a4\u03b1 \u03bc\u03b9\u03ba\u03c1\u03ac strings \u03b3\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 cache, \u03c3\u03c5\u03bd\u03b5\u03c0\u03ce\u03c2 s1, s2 \u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf\n\n# \u0391\u03bb\u03bb\u03ac \u03bc\u03b5 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 (\u03c0\u03bf \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03bc\u03b7 \u03b3\u03af\u03bd\u03bf\u03c5\u03bd interned)\ns3 = \"hello world, this is a long string\" * 1000\ns4 = \"hello world, this is a long string\" * 1000\nprint(s3 == s4)  # True -&gt; \u03af\u03b4\u03b9\u03bf \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03bf\nprint(s3 is s4)  # \u039c\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 False -&gt; \u0394\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ac \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03c3\u03c4\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7\n</code></pre>"},{"location":"theory_ch7/#76","title":"7.6 \u0395\u03c3\u03c0\u03b5\u03c5\u03c3\u03bc\u03ad\u03bd\u03b7 \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7 \u03b5\u03ba\u03c6\u03c1\u03ac\u03c3\u03b5\u03c9\u03bd","text":"short_circuit.c<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n  int arr[] = {10, 20, 30, 40, 50};\n  int size = sizeof(arr) / sizeof(arr[0]);\n  int i = 0;\n\n  // \u0391\u03bd\u03b1\u03b6\u03ae\u03c4\u03b7\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf\u03c5 \u03bc\u03b5 short-circuit \u03c3\u03b5 \u03b5\u03c0\u03b1\u03bd\u03ac\u03bb\u03b7\u03c8\u03b7\n  while (i &lt; size &amp;&amp; arr[i] != 30) {\n    i++;\n  }\n\n  if (i &lt; size) {\n    printf(\"Found 30 at index %d\\n\", i);\n  } else {\n    printf(\"30 not found\\n\");\n  }\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc short_circuit.c &amp;&amp; ./a.out\nFound 30 at index 2\n</code></pre>"},{"location":"theory_ch7/#77","title":"7.7 \u03a0\u03c1\u03bf\u03c4\u03ac\u03c3\u03b5\u03b9\u03c2 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7\u03c2","text":"assignment_operators.c<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n  // \u0391\u03bd\u03ac\u03b8\u03b5\u03c3\u03b7 (=)\n  int a = 5;\n  printf(\"Assignment: a = %d\\n\", a);\n\n  // \u0388\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03b9\u03c3\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 (==)\n  int b = 5;\n  if (a == b) {\n    printf(\"Equality: a == b is true\\n\");\n  } else {\n    printf(\"Equality: a == b is false\\n\");\n  }\n\n  // \u0391\u03c0\u03cc \u03b4\u03b5\u03be\u03b9\u03ac \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b1 \u03b1\u03c1\u03b9\u03c3\u03c4\u03b5\u03c1\u03ac \u03b1\u03c0\u03bf\u03c4\u03af\u03bc\u03b7\u03c3\u03b7\n  a = b = 7;\n\n  // \u0391\u03bd\u03ac\u03b8\u03b5\u03c3\u03b7 \u03bc\u03b5 \u03c0\u03c1\u03cc\u03c3\u03b8\u03b5\u03c3\u03b7 (+=), \u03bf\u03bc\u03bf\u03af\u03c9\u03c2 \u03b3\u03b9\u03b1 -=, *=, /=, %=\n  a += 10;  // \u0399\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03bf \u03bc\u03b5: a = a + 10;\n  printf(\"Addition Assignment: a += 10 -&gt; a = %d\\n\", a);\n\n  // \u03a4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ae\u03c2 \u03bc\u03bf\u03bd\u03b1\u03b4\u03b9\u03b1\u03af\u03b1\u03c2 \u03b1\u03cd\u03be\u03b7\u03c3\u03b7\u03c2 (++)\n  int x = 3;\n  printf(\"Initial x = %d\\n\", x);\n\n  // Pre-increment (++x)\n  printf(\"Pre-increment: ++x = %d\\n\", ++x);  // \u03a0\u03ce\u03c4\u03b1 \u03b1\u03cd\u03be\u03b7\u03c3\u03b7, \u03bc\u03b5\u03c4\u03ac \u03b5\u03ba\u03c4\u03cd\u03c0\u03c9\u03c3\u03b7\n\n  // Post-increment (x++)\n  printf(\"Post-increment: x++ = %d\\n\", x++);  // \u0395\u03ba\u03c4\u03cd\u03c0\u03c9\u03c3\u03b7 \u03c0\u03c1\u03ce\u03c4\u03b1, \u03bc\u03b5\u03c4\u03ac \u03b1\u03cd\u03be\u03b7\u03c3\u03b7\n  printf(\"After post-increment, x = %d\\n\", x);\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc assignment_operators.c &amp;&amp; ./a.out\nAssignment: a = 5\nEquality: a == b is true\nAddition Assignment: a += 10 -&gt; a = 17\nInitial x = 3\nPre-increment: ++x = 4\nPost-increment: x++ = 4\nAfter post-increment, x = 5\n</code></pre>"},{"location":"theory_ch7/#775","title":"7.7.5 \u0397 \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7 \u03c9\u03c2 \u03ad\u03ba\u03c6\u03c1\u03b1\u03c3\u03b7","text":"assignment_as_expression.c<pre><code>#include &lt;stdio.h&gt;\n\nint main() {\n  int sum = 0, num;\n  while ((num = 3)) {\n    sum += num;\n    if (sum &gt; 10) break;\n  }\n  printf(\"Sum after loop: %d\\n\", sum);\n\n  return 0;\n}\n</code></pre> <pre><code>$ gcc assignment_as_expression.c &amp;&amp; ./a.out\nSum after loop: 12\n</code></pre>"},{"location":"theory_ch7/#78-","title":"7.8 \u0391\u03bd\u03b1\u03b8\u03ad\u03c3\u03b5\u03b9\u03c2 \u03bc\u03b5\u03b9\u03ba\u03c4\u03bf\u03cd-\u03c4\u03cd\u03c0\u03bf\u03c5","text":"mixed_types_assignments.py<pre><code># Integer to float (widening)\ni = 10\nf = float(i)  # Explicit conversion (optional, as Python allows direct assignment)\nprint(f\"Widening: i (int) = {i}, f (float) = {f:.2f}\")\n\n# Float to int (narrowing)\npi = 3.14159\nx = int(pi)  # Explicit conversion, truncates decimal part\nprint(f\"Narrowing: pi (float) = {pi}, x (int) = {x}\")\n\n# String to int (valid case)\ns = \"42\"\nnum = int(s)  # Converts string to integer\nprint(f\"String to int: s = '{s}', num = {num}\")\n\n# Invalid string to int (error)\ntry:\n    invalid_s = \"9\"\n    num = int(invalid_s)  # Will raise ValueError\nexcept ValueError:\n    print(f\"Cannot convert '{invalid_s}' to int!\")\n\n# Integer to string\nn = 123\ns = str(n)  # Converts int to string\nprint(f\"Int to string: n = {n}, s = '{s}'\")\n\n# Float to string\nf = 99.99\ns = str(f)  # Converts float to string\nprint(f\"Float to string: f = {f}, s = '{s}'\")\n\n# Boolean to int\nb = True\nnum = int(b)  # True \u2192 1, False \u2192 0\nprint(f\"Boolean to int: b = {b}, num = {num}\")\n\n# Int to boolean\nnum = 0\nb = bool(num)  # 0 \u2192 False, nonzero \u2192 True\nprint(f\"Int to boolean: num = {num}, b = {b}\")\n\n# Implicit conversion (int to float in expression)\nresult = 5 + 2.5  # Python automatically promotes int to float\nprint(f\"Implicit conversion: 5 + 2.5 = {result} (type: {type(result)})\")\n</code></pre> <pre><code>$ python mixed_types_assignments.py\nWidening: i (int) = 10, f (float) = 10.00\nNarrowing: pi (float) = 3.14159, x (int) = 3\nString to int: s = '42', num = 42\nInt to string: n = 123, s = '123'\nFloat to string: f = 99.99, s = '99.99'\nBoolean to int: b = True, num = 1\nInt to boolean: num = 0, b = False\nImplicit conversion: 5 + 2.5 = 7.5 (type: &lt;class 'float'&gt;)\n</code></pre>"},{"location":"theory_ch9/","title":"9. \u03a5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1","text":"<ul> <li>\u03a3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03cc\u03c2 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd</li> <li>\u039c\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd</li> <li>\u03a4\u03bf\u03c0\u03b9\u03ba\u03ac \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03b1 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2</li> <li>\u03a5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03c9\u03bc\u03ad\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1</li> <li>\u0393\u03b5\u03bd\u03b9\u03ba\u03ac \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1</li> <li>\u03a8\u03b5\u03c5\u03b4\u03c9\u03bd\u03c5\u03bc\u03af\u03b1</li> <li>\u0388\u03bc\u03bc\u03b5\u03c3\u03b7 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd</li> <li>\u039a\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2</li> <li>\u03a3\u03c5\u03c1\u03c1\u03bf\u03c5\u03c4\u03af\u03bd\u03b5\u03c2</li> </ul>"},{"location":"theory_ch9/#91","title":"9.1 \u0395\u03b9\u03c3\u03b1\u03b3\u03c9\u03b3\u03ae","text":"<p>\u03a4\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd \u03b1\u03c6\u03b1\u03b9\u03c1\u03ad\u03c3\u03b5\u03b9\u03c2 \u03b4\u03b9\u03b5\u03c1\u03b3\u03b1\u03c3\u03b9\u03ce\u03bd. \u039f\u03b9 \u03bb\u03b5\u03c0\u03c4\u03bf\u03bc\u03ad\u03c1\u03b5\u03b9\u03b5\u03c2 \u03bc\u03b9\u03b1\u03c2 \u03b4\u03b9\u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b1\u03b8\u03af\u03c3\u03c4\u03b1\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03ba\u03bb\u03ae\u03c3\u03b7 \u03b5\u03bd\u03cc\u03c2 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2. \u0388\u03c4\u03c3\u03b9 \u03b4\u03b9\u03b5\u03c5\u03ba\u03bf\u03bb\u03cd\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03b1\u03bd\u03ac\u03b3\u03bd\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1, \u03b5\u03be\u03bf\u03b9\u03ba\u03bf\u03bd\u03bf\u03bc\u03b5\u03af\u03c4\u03b1\u03b9 \u03c7\u03ce\u03c1\u03bf\u03c2 \u03bc\u03bd\u03ae\u03bc\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03c7\u03c1\u03cc\u03bd\u03bf\u03c2 \u03ba\u03c9\u03b4\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2.</p>"},{"location":"theory_ch9/#92","title":"9.2 \u0392\u03b1\u03c3\u03b9\u03ba\u03ac \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd","text":""},{"location":"theory_ch9/#921","title":"9.2.1 \u0393\u03b5\u03bd\u03b9\u03ba\u03ac \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd","text":"<ul> <li>\u039a\u03ac\u03b8\u03b5 \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03ad\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03c3\u03b7\u03bc\u03b5\u03af\u03bf \u03b5\u03b9\u03c3\u03cc\u03b4\u03bf\u03c5.</li> <li>\u039c\u03cc\u03bd\u03bf \u03ad\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03b5\u03ba\u03c4\u03b5\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03b1\u03bd\u03ac \u03c0\u03ac\u03c3\u03b1 \u03c3\u03c4\u03b9\u03b3\u03bc\u03ae (\u03b4\u03b5\u03bd \u03b9\u03c3\u03c7\u03cd\u03b5\u03b9 \u03c3\u03c4\u03b1 \u03c4\u03b1\u03c5\u03c4\u03cc\u03c7\u03c1\u03bf\u03bd\u03b1 \u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1).</li> <li>\u039f \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c3\u03c4\u03bf \u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03ba\u03b1\u03bb\u03b5\u03af \u03ad\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03cc\u03c4\u03b1\u03bd \u03bf\u03bb\u03bf\u03ba\u03bb\u03b7\u03c1\u03ce\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5.</li> </ul>"},{"location":"theory_ch9/#922","title":"9.2.2 \u0392\u03b1\u03c3\u03b9\u03ba\u03bf\u03af \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03af","text":"<p>\u0392\u03b1\u03c3\u03b9\u03ba\u03ac \u03b5\u03af\u03b4\u03b7 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd: \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b5\u03c2,  \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2</p> <p>\u039a\u03b5\u03c6\u03b1\u03bb\u03af\u03b4\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2</p> <p>\u0397 \u03ba\u03b5\u03c6\u03b1\u03bb\u03af\u03b4\u03b1 \u03b5\u03bd\u03cc\u03c2 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03bf \u03b5\u03af\u03b4\u03bf\u03c2 \u03c4\u03bf\u03c5, \u03c4\u03bf \u03cc\u03bd\u03bf\u03bc\u03ac \u03c4\u03bf\u03c5 (\u03b1\u03bd \u03ad\u03c7\u03b5\u03b9) \u03ba\u03b1\u03b9 \u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03c4\u03bf\u03c5. </p> <p>\u03a3\u03ce\u03bc\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2</p> <p>\u03a4\u03bf \u03c3\u03ce\u03bc\u03b1 \u03b5\u03bd\u03cc\u03c2 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03b9\u03c2 \u03b5\u03bd\u03ad\u03c1\u03b3\u03b5\u03b9\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b5\u03ba\u03c4\u03b5\u03bb\u03b5\u03af \u03c4\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1.</p> <p>\u0399\u03b4\u03b9\u03b1\u03af\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c0\u03c4\u03ce\u03c3\u03b5\u03b9\u03c2</p> <p>\u03a3\u03c4\u03b7\u03bd Python \u03bf\u03b9 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03af \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b5\u03ba\u03c4\u03b5\u03bb\u03ad\u03c3\u03b9\u03bc\u03bf\u03b9. \u039f\u03c0\u03cc\u03c4\u03b5 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b3\u03c1\u03b1\u03c6\u03b5\u03af \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03c4\u03b7\u03c2 \u03bc\u03bf\u03c1\u03c6\u03ae\u03c2:</p> <pre><code>x = 1\nif x == 1:\n    def foo():\n        print(\"A\")\nelse:\n    def foo():\n        print(\"B\")\nfoo()\n</code></pre> <p>\u0397 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9 A</p> <p>\u03a3\u03c4\u03b7\u03bd Ruby \u03b1\u03bd \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03ae\u03b8\u03c9\u03c2 \u03bf\u03b9 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2, \u03c9\u03c3\u03c4\u03cc\u03c3\u03bf \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03bf\u03c1\u03b9\u03c3\u03c4\u03bf\u03cd\u03bd \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03cc\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b5\u03c9\u03bd \u03bf\u03c0\u03cc\u03c4\u03b5 \u03b8\u03b5\u03c9\u03c1\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03c4\u03b7\u03c2 \u03ba\u03bb\u03ac\u03c3\u03b7\u03c2 Object.</p> <p>\u03a3\u03c4\u03b7\u03bd Lua \u03bf\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b5\u03c2, \u03b1\u03bb\u03bb\u03ac \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03bf\u03c1\u03b9\u03c3\u03c4\u03bf\u03cd\u03bd \u03bc\u03b5 \u03c4\u03ad\u03c4\u03bf\u03b9\u03bf \u03c4\u03c1\u03cc\u03c0\u03bf \u03c0\u03bf\u03c5 \u03bd\u03b1 \u03c4\u03bf\u03c5\u03c2 \u03b1\u03c0\u03bf\u03b4\u03af\u03b4\u03b5\u03c4\u03b1\u03b9 \u03cc\u03bd\u03bf\u03bc\u03b1</p> <pre><code>function cube(x) return x * x * x end\n</code></pre> <p>\u03ae (\u03bc\u03b5 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7)</p> <pre><code>cube = function(x) return x * x * x end\n</code></pre> <p>\u03a4\u03bf \u03c0\u03c1\u03c9\u03c4\u03cc\u03ba\u03bf\u03bb\u03bb\u03bf \u03b5\u03bd\u03cc\u03c2 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf\u03bd \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc \u03c4\u03c9\u03bd \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd, \u03c4\u03b7 \u03c3\u03b5\u03b9\u03c1\u03ac \u03bc\u03b5 \u03c4\u03b7\u03bd \u03bf\u03c0\u03bf\u03af\u03b1 \u03c0\u03b1\u03c1\u03b1\u03c4\u03af\u03b8\u03b5\u03bd\u03c4\u03b1\u03b9, \u03c4\u03bf\u03bd \u03c4\u03cd\u03c0\u03bf \u03c4\u03bf\u03c5\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03ac\u03bd \u03c0\u03c1\u03cc\u03ba\u03b5\u03b9\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c4\u03bf\u03bd \u03c4\u03cd\u03c0\u03bf \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae\u03c2 \u03c4\u03b7\u03c2.</p> <p>\u03a3\u03c4\u03b7 C \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7 C++ \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c4\u03b1 \u03c0\u03c1\u03c9\u03c4\u03cc\u03c4\u03c5\u03c0\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b1\u03c0\u03bf\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd \u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03c0\u03c1\u03b9\u03bd \u03c4\u03bf\u03bd \u03bf\u03c1\u03b9\u03c3\u03bc\u03cc \u03c4\u03bf\u03c5\u03c2. \u03a3\u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03ac\u03bb\u03bb\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03b4\u03b5\u03bd \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03be\u03b5\u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03ad\u03c2 \u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9\u03c2 \u03c4\u03c9\u03bd \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c7\u03c9\u03c1\u03af\u03c2 prototype \u03c3\u03c4\u03b7 C</p> prototype0.c<pre><code>#include &lt;stdio.h&gt;\n\nint fun1(int a, int b) { return a + b; }\n\nint main() {\n  int x = 1, y = 2, z;\n  z = fun1(x, y);\n  printf(\"z=%d\\n\", z);\n}\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 prototype \u03c3\u03c4\u03b7 C</p> prototype1.c<pre><code>#include &lt;stdio.h&gt;\n\n// prototype \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 fun\nint fun1(int a, int b);\n\nint main() {\n  int x = 1, y = 2, z;\n  z = fun1(x, y);\n  printf(\"z=%d\\n\", z);\n}\n\nint fun1(int a, int b) { return a + b; }\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 prototype \u03c3\u03b5 header \u03c3\u03c4\u03b7 C</p> prototype2.h<pre><code>// prototype \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 fun\nint fun1(int, int);\n\nint fun1(int a, int b)\n{\n  return a + b;\n}\n</code></pre> prototype2.c<pre><code>#include \"prototype2.h\"\n#include &lt;stdio.h&gt;\n\nint main() {\n  int x = 1, y = 2, z;\n  z = fun1(x, y);\n  printf(\"z=%d\\n\", z);\n}\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 prototype \u03c3\u03b5 header \u03c3\u03c4\u03b7 C \u03ba\u03b1\u03b9 \u03be\u03b5\u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03cc \u03b1\u03c1\u03c7\u03b5\u03af\u03bf \u03c0\u03b7\u03b3\u03b1\u03af\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03b4\u03b7\u03bb\u03ce\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf header \u03b1\u03c1\u03c7\u03b5\u03af\u03bf</p> my_functions.h<pre><code>// prototype \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 fun\nint fun1(int, int);\n</code></pre> my_functions.c<pre><code>int fun1(int a, int b) { return a + b; }\n</code></pre> prototype3.c<pre><code>#include \"my_functions.h\"\n\n#include &lt;stdio.h&gt;\n\nint main() {\n  int x = 1, y = 2, z;\n  z = fun1(x, y);\n  printf(\"z=%d\\n\", z);\n}\n</code></pre> <p>\u0397 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7 \u03c3\u03b5 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03af\u03c0\u03c4\u03c9\u03c3\u03b7 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b3\u03af\u03bd\u03b5\u03b9 \u03c9\u03c2 \u03b5\u03be\u03ae\u03c2:</p> <pre><code>$ gcc my_functions.c prototype3.c -o prototype3\n$ ./prototype3\n</code></pre>"},{"location":"theory_ch9/#923","title":"9.2.3 \u03a0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9","text":"<p>\u039f\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03c3\u03c4\u03b7\u03bd \u03ba\u03b5\u03c6\u03b1\u03bb\u03af\u03b4\u03b1 \u03c4\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ad\u03c2 \u03ae \u03b5\u03c0\u03af\u03c3\u03b7\u03bc\u03b5\u03c2 (formal) \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03ae \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1, \u03b5\u03bd\u03ce \u03bf\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03c3\u03c4\u03b7\u03bd \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 (actual) \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03ae \u03b1\u03c0\u03bb\u03ac \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03b8\u03ad\u03c3\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03ba\u03bb\u03b5\u03b9\u03b4\u03b9\u03ce\u03bd</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7\u03bd Python \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03bb\u03ad\u03be\u03b5\u03c9\u03bd \u03ba\u03bb\u03b5\u03b9\u03b4\u03b9\u03ce\u03bd (keywords)</p> <pre><code>def fun(x, y, z):\n    print(\n        f\"\u03a4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 {x}, \u03c4\u03bf \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 {y}, \u03c4\u03bf \u03c4\u03c1\u03af\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 {z}\"\n    )\n\n\nfun(1, 2, 3) \nfun(x=1, y=2, z=3) # \u03ba\u03bb\u03ae\u03c3\u03b7 \u03bc\u03b5 keywords\nfun(y=2, x=1, z=3) # \u03ba\u03bb\u03ae\u03c3\u03b7 \u03bc\u03b5 keywords\nfun(1, z=3, y=2) # \u03ba\u03bb\u03ae\u03c3\u03b7 \u03bc\u03b5 \u03b1\u03c0\u03bb\u03ac \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 \u03ba\u03b1\u03b9 keywords\n</code></pre> <p>\u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9</p> <pre><code>\u03a4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 1, \u03c4\u03bf \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 2, \u03c4\u03bf \u03c4\u03c1\u03af\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 3\n\u03a4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 1, \u03c4\u03bf \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 2, \u03c4\u03bf \u03c4\u03c1\u03af\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 3\n\u03a4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 1, \u03c4\u03bf \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 2, \u03c4\u03bf \u03c4\u03c1\u03af\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 3\n\u03a4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 1, \u03c4\u03bf \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 2, \u03c4\u03bf \u03c4\u03c1\u03af\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 3\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7 C++ \u03bc\u03b5 \"named arguments\" \u03c0\u03bf\u03c5 \u03ba\u03ac\u03bd\u03b5\u03b9 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03b1\u03c1\u03c7\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03b4\u03bf\u03bc\u03ce\u03bd \u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03bf\u03bd\u03bf\u03bc\u03ac\u03c4\u03c9\u03bd \u03c0\u03b5\u03b4\u03af\u03c9\u03bd:</p> struct_initialization.cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstruct name\n{\n    string first;\n    string last;\n};\n\nint main()\n{\n    struct name r1 = {\"John\", \"Doe\"};\n    struct name r2 = {.first = \"John\", .last = \"Doe\"};\n    struct name r3 = {.first = \"John\", \"Doe\"};\n    struct name r4 = {\"John\", .last = \"Doe\"};\n\n    cout &lt;&lt; r1.first &lt;&lt; \" \" &lt;&lt; r1.last &lt;&lt; endl;\n    cout &lt;&lt; r2.first &lt;&lt; \" \" &lt;&lt; r2.last &lt;&lt; endl;\n    cout &lt;&lt; r3.first &lt;&lt; \" \" &lt;&lt; r3.last &lt;&lt; endl;\n    cout &lt;&lt; r4.first &lt;&lt; \" \" &lt;&lt; r4.last &lt;&lt; endl;\n}\n\n// John Doe\n// John Doe\n// John Doe\n// John Doe\n</code></pre> named_args.cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nstruct name\n{\n    string first;\n    string last;\n};\n\nvoid display_full_name(name args)\n{\n    cout &lt;&lt; args.first &lt;&lt; \" \" &lt;&lt; args.last &lt;&lt; endl;\n}\n\nint main()\n{\n    display_full_name({.first = \"John\", .last = \"Doe\"});\n}\n\n// John Doe\n</code></pre> <p>\u03a0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 (default) \u03c4\u03b9\u03bc\u03ad\u03c2</p> <p>\u03a3\u03b5 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03bf\u03b9 Python, Ruby, C++, PHP \u03bf\u03b9 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03ad\u03c7\u03bf\u03c5\u03bd \u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7\u03bd Python \u03bc\u03b5 \u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd</p> <pre><code>def fun(x=1, y=2):\n    print(x, y)\n\n\nfun() # \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 fun \u03c7\u03c9\u03c1\u03af\u03c2 \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 (\u03c4\u03bf x \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 1 \u03ba\u03b1\u03b9 \u03c4\u03bf y \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 2)\nfun(5) # \u03c4\u03bf x \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 5 \u03ba\u03b1\u03b9 \u03c4\u03bf y \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b7 \u03c4\u03b9\u03bc\u03ae 2)\nfun(x=5) # \u03c4\u03bf x \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 5 \u03ba\u03b1\u03b9 \u03c4\u03bf y \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b7 \u03c4\u03b9\u03bc\u03ae 2)\nfun(y=10) # \u03c4\u03bf x \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b7 \u03c4\u03b9\u03bc\u03ae 1 \u03ba\u03b1\u03b9 \u03c4\u03bf y \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 10)\nfun(5, 10) # \u03c4\u03bf x \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 5 \u03ba\u03b1\u03b9 \u03c4\u03bf y \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 10)\nfun(5, y=10) # \u03c4\u03bf x \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 5 \u03ba\u03b1\u03b9 \u03c4\u03bf y \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae 10)\n</code></pre> <p>\u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9:</p> <pre><code>1 2\n5 2\n5 2\n1 10\n5 10\n5 10\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7 C++ \u03bc\u03b5 \u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd (\u03bf\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03bc\u03b5 \u03c0\u03c1\u03bf\u03ba\u03b1\u03b8\u03bf\u03c1\u03b9\u03c3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03bf \u03c4\u03ad\u03bb\u03bf\u03c2 \u03c3\u03c4\u03b7 \u03bb\u03af\u03c3\u03c4\u03b1 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2)</p> default_args.cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid fun(int x, int y = 1, int z = 2)\n{\n    cout &lt;&lt; \"x=\" &lt;&lt; x &lt;&lt; \" y=\" &lt;&lt; y &lt;&lt; \" z=\" &lt;&lt; z &lt;&lt; endl;\n}\n\nint main()\n{\n    fun(10);\n    fun(10, 20);\n    fun(10, 20, 30);\n}\n\n/*\nx=10 y=1 z=2\nx=10 y=20 z=2\nx=10 y=20 z=30\n*/\n</code></pre> <p>\u039c\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03cc\u03c2 \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7\u03bd Python</p> <pre><code>def fun(*args, **kwargs):\n    print(args)\n    print(kwargs)\n\n\nfun(1, 2, 3, a=\"data1\", b=\"data2\")\n</code></pre> <p>\u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9:</p> <pre><code>(1, 2, 3)\n{'a': 'data1', 'b': 'data2'}\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c7\u03c1\u03ae\u03c3\u03b7\u03c2 \u03c4\u03bf\u03c5 <code>*args</code> \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03b3\u03af\u03bd\u03bf\u03c5\u03bd \u03b1\u03bb\u03bb\u03b1\u03b3\u03ad\u03c2 \u03c7\u03c9\u03c1\u03af\u03c2 \u03bd\u03b1 \u03b5\u03c0\u03b7\u03c1\u03b5\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c0\u03b1\u03bb\u03b9\u03cc\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 (backwards compatibility)</p> <pre><code>def fun(a,b):\n    return a + b \n</code></pre> <p>\u0388\u03c3\u03c4\u03c9 \u03cc\u03c4\u03b9 \u03c5\u03c0\u03ac\u03c1\u03c7\u03b5\u03b9 \u03ae\u03b4\u03b7 \u03bf \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 fun \u03b7 \u03bf\u03c0\u03bf\u03af\u03b1 \u03ba\u03b1\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03c3\u03b5 \u03b4\u03b9\u03ac\u03c6\u03bf\u03c1\u03b1 \u03c3\u03b7\u03bc\u03b5\u03af\u03b1 \u03c4\u03b1 \u03bf\u03c0\u03bf\u03af\u03b1 \u03b4\u03b5\u03bd \u03b8\u03ad\u03bb\u03bf\u03c5\u03bc\u03b5 \u03bd\u03b1 \u03b5\u03c0\u03b7\u03c1\u03b5\u03b1\u03c3\u03c4\u03bf\u03cd\u03bd. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b5\u03c0\u03b9\u03b8\u03c5\u03bc\u03bf\u03cd\u03bc\u03b5 \u03bd\u03b1 \u03c0\u03c1\u03bf\u03c3\u03b8\u03ad\u03c3\u03bf\u03c5\u03bc\u03b5 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 fun.</p> <pre><code>def fun(a,b, *args):\n    if args:\n        return a + b + args[0]\n    else:\n        return a + b\n\nprint(fun(1,2)) # \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03c0\u03b1\u03bb\u03b9\u03cc\u03c4\u03b5\u03c1\u03b1\nprint(fun(1,2,3)) # \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03bc\u03b9\u03b1 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf \u03c3\u03b5 \u03c3\u03c7\u03ad\u03c3\u03b7 \u03bc\u03b5 \u03c0\u03c1\u03b9\u03bd\n</code></pre> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c4\u03b7 C</p> <p>H <code>printf</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 variadic \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2. \u0397 \u03b4\u03ae\u03bb\u03c9\u03c3\u03ae \u03c4\u03b7\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7:</p> <pre><code>int printf(const char* format, ...);\n</code></pre> <p>\u0394\u03b5\u03af\u03c4\u03b5 \u03c4\u03b7 \u03c3\u03b5\u03bb\u03af\u03b4\u03b1 \u03c3\u03c4\u03bf cppreference \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 variadic functions \u03c3\u03c4\u03b7 C: https://en.cppreference.com/w/c/variadic</p> variadic_function.c<pre><code>#include &lt;stdarg.h&gt;\n#include &lt;stdio.h&gt;\n\n// \u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03c0\u03c1\u03ce\u03c4\u03bf \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03b1\u03ba\u03ad\u03c1\u03b1\u03b9\u03b5\u03c2 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03ac \u03c4\u03bf\u03c5\u03c2\nint sum_all(int n, ...) {\n  va_list args; // \u03b1\u03c1\u03c7\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b4\u03b5\u03af\u03ba\u03c4\u03b7 \u03c4\u03c9\u03bd \u03bf\u03c1\u03b9\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd\n  va_start(args, n); // \u03c4\u03bf\u03c0\u03bf\u03b8\u03ad\u03c4\u03b7\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b4\u03b5\u03af\u03ba\u03c4\u03b7 \u03c3\u03c4\u03bf \u03c0\u03c1\u03ce\u03c4\u03bf (\u03bc\u03b7 variadic) \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1.\n\n  int sum = 0;\n  for (int i = 0; i &lt; n; i++) {\n    int x = va_arg(args, int); // \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7 \u03c3\u03c4\u03bf \u03b5\u03c0\u03cc\u03bc\u03b5\u03bd\u03bf variadic \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1\n    sum += x;\n  }\n\n  va_end(args); // \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b4\u03b9\u03ac\u03c3\u03c7\u03b9\u03c3\u03b7\u03c2 \u03c4\u03c9\u03bd variadic \u03bf\u03c1\u03b9\u03c3\u03bc\u03ac\u03c4\u03c9\u03bd\n  return sum;\n}\n\nint main() {\n  printf(\"%d\\n\", sum_all(2, 10, 20));\n  printf(\"%d\\n\", sum_all(3, 10, 20, 30));\n  printf(\"%d\\n\", sum_all(4, 10, 20, 30, 40));\n}\n\n/*\n30\n60\n100\n*/\n</code></pre> <p>\u03b9\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03bf\u03c2 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2 \u03c3\u03b5 Python</p> <pre><code>def sum_all(*args):\n    return sum(args)\n\nprint(sum_all(10,20))\nprint(sum_all(10,20,30))\nprint(sum_all(10,20,30,40))\n</code></pre> <p>\u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9:</p> <pre><code>30\n60\n100\n</code></pre>"},{"location":"theory_ch9/#924","title":"9.2.4 \u0394\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2","text":"<p>\u039c\u03cc\u03bd\u03bf \u03ba\u03ac\u03c0\u03bf\u03b9\u03b5\u03c2 \u03c0\u03b1\u03bb\u03b9\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03b7 Ada, Pascal \u03ba\u03b1\u03b9 Fortran \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c4\u03b9\u03c2 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b5\u03c2. \u039f\u03b9 \u03b4\u03b9\u03b1\u03b4\u03b9\u03ba\u03b1\u03c3\u03af\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ad\u03c2 \u03b5\u03bd\u03c4\u03bf\u03bb\u03ce\u03bd \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd\u03c2 \u03c0\u03bf\u03c5 \u03ba\u03b1\u03b8\u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03b2\u03ac\u03c3\u03b7 \u03c4\u03b9\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2. \u039f\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b1\u03c6\u03b1\u03af\u03c1\u03b5\u03c3\u03b7 \u03c4\u03c9\u03bd \u03bc\u03b1\u03b8\u03b7\u03bc\u03b1\u03c4\u03b9\u03ba\u03ce\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf \u03bf\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03c0\u03c1\u03bf\u03ba\u03b1\u03bb\u03bf\u03cd\u03bd side-effects, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03bd\u03b1 \u03b1\u03bb\u03bb\u03ac\u03b6\u03bf\u03c5\u03bd \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03ae \u03c4\u03b9\u03bc\u03ad\u03c2 \u03ac\u03bb\u03bb\u03c9\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ce\u03bd \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b5\u03ba\u03c4\u03cc\u03c2 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd.</p>"},{"location":"theory_ch9/#93","title":"9.3 \u0396\u03b7\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd \u03b3\u03b9\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1","text":"<p>\u03a5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03c9\u03bc\u03ad\u03bd\u03bf \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03cc\u03bd\u03bf\u03bc\u03b1 \u03bc\u03b5 \u03ad\u03bd\u03b1 \u03ac\u03bb\u03bb\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c3\u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2.</p> <p>\u0393\u03b5\u03bd\u03b9\u03ba\u03cc \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03ba\u03bb\u03b7\u03b8\u03b5\u03af \u03bc\u03b5 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u03c4\u03cd\u03c0\u03c9\u03bd \u03b1\u03c0\u03cc \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c3\u03b5 \u03ba\u03bb\u03ae\u03c3\u03b7.</p> <p>\u039a\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03ad\u03bd\u03b8\u03b5\u03c4\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03c4\u03bf \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2 \u03c4\u03bf\u03c5.</p>"},{"location":"theory_ch9/#94","title":"9.4 \u03a4\u03bf\u03c0\u03b9\u03ba\u03ac \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03b1 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2","text":""},{"location":"theory_ch9/#941","title":"9.4.1 \u03a4\u03bf\u03c0\u03b9\u03ba\u03ad\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2","text":"<p>\u03a4\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03bf\u03c1\u03af\u03b6\u03bf\u03c5\u03bd  \u03c4\u03b9\u03c2 \u03b4\u03b9\u03ba\u03ad\u03c2 \u03c4\u03bf\u03c5\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2, \u03bf\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03c2 \u03bc\u03b5 \u03b1\u03c5\u03c4\u03cc\u03bd \u03c4\u03bf\u03bd \u03c4\u03c1\u03cc\u03c0\u03bf \u03c4\u03bf\u03c0\u03b9\u03ba\u03ac \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd\u03c4\u03b1 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 \u03c4\u03bf\u03c0\u03b9\u03ba\u03ad\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 (\u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03ba\u03b1\u03b9 \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae-\u03c3\u03c4\u03bf\u03af\u03b2\u03b1\u03c2) \u03c3\u03c4\u03b7 C++</p> static2.cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nint adder(int list[], int listlen) {\n  static int sum = 0; // \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\n  int count; // \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae \u03b4\u03c5\u03bd\u03b1\u03bc\u03b9\u03ba\u03ae-\u03c3\u03c4\u03bf\u03af\u03b2\u03b1\u03c2\n  for (count = 0; count &lt; listlen; count++) {\n    sum += list[count];\n  }\n  return sum;\n}\n\nint main() {\n  int a[] = {1, 2, 3};    // \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03c4\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 6\n  int b[] = {4, 5, 6, 7}; // -&gt; \u03c4\u03bf \u03ac\u03b8\u03c1\u03bf\u03b9\u03c3\u03bc\u03b1 \u03c4\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 22\n  cout &lt;&lt; adder(a, 3) &lt;&lt; endl; // \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 6\n  cout &lt;&lt; adder(b, 4) &lt;&lt; endl; // \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 28\n}\n</code></pre>"},{"location":"theory_ch9/#942","title":"9.4.2 \u0388\u03bd\u03b8\u03b5\u03c4\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1","text":"<p>\u0397 \u03c0\u03c1\u03ce\u03c4\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 \u03c0\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c3\u03c4\u03ae\u03c1\u03b9\u03be\u03b5 \u03c4\u03b7\u03bd \u03ad\u03bd\u03b8\u03b5\u03c3\u03b7 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd, \u03b4\u03b7\u03bb\u03b1\u03b4\u03ae \u03c4\u03bf\u03bd \u03bf\u03c1\u03b9\u03c3\u03bc\u03cc \u03b5\u03bd\u03cc\u03c2 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03bc\u03ad\u03c3\u03b1 \u03c3\u03b5 \u03ad\u03bd\u03b1 \u03ac\u03bb\u03bb\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03ae\u03c4\u03b1\u03bd \u03b7 Algol 60. \u0386\u03bb\u03bb\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03c0\u03bf\u03c5 \u03b5\u03c0\u03af\u03c3\u03b7\u03c2 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03ad\u03bd\u03b8\u03b5\u03c3\u03b7 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 Ada, Pascal, Python, JavaScript, Ruby \u03ba\u03b1\u03b9 Lua.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03ad\u03bd\u03b8\u03b5\u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c3\u03c4\u03b7\u03bd Python:</p> <pre><code>def outer_fun():\n    a = 1\n    print(f\"\u03b1\u03c1\u03c7\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 outer_fun, a={a}\")\n    def inner_fun(x):\n        print(f\"\u03ba\u03bb\u03ae\u03c3\u03b7 \u03ad\u03bd\u03b8\u03b5\u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 inner_fun, x={x}, a={a}\")\n\n    inner_fun(2)\n    print(f\"\u03c4\u03ad\u03bb\u03bf\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 outer_fun, a={a}\")\n\nouter_fun()\n</code></pre> <p>\u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9:</p> <pre><code>\u03b1\u03c1\u03c7\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 outer_fun, a=1\n\u03ba\u03bb\u03ae\u03c3\u03b7 \u03ad\u03bd\u03b8\u03b5\u03c4\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 inner_fun, x=2, a=1\n\u03c4\u03ad\u03bb\u03bf\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 outer_fun, a=1\n</code></pre>"},{"location":"theory_ch9/#95","title":"9.5 \u039c\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd","text":"<p>\u039c\u03ad\u03b8\u03bf\u03b4\u03bf\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03bc\u03b5 \u03c4\u03bf\u03bd \u03bf\u03c0\u03bf\u03af\u03bf \u03bf\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b4\u03af\u03b4\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c2 \u03ba\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b1 \u03ba\u03b1\u03bb\u03bf\u03cd\u03bc\u03b5\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1.</p>"},{"location":"theory_ch9/#951","title":"9.5.1 \u039c\u03bf\u03bd\u03c4\u03ad\u03bb\u03b1 \u03c3\u03b7\u03bc\u03b1\u03c3\u03b9\u03bf\u03bb\u03bf\u03b3\u03af\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd","text":"<ul> <li>\u039b\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03b5\u03b9\u03c3\u03cc\u03b4\u03bf\u03c5: \u03b7 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf</li> <li>\u039b\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03b5\u03be\u03cc\u03b4\u03bf\u03c5: \u03b7 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c3\u03c4\u03b7\u03bd \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf</li> <li>\u0394\u03b9\u03c0\u03bb\u03ae \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b1: \u03b7 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03b1\u03c0\u03bf \u03c4\u03b7\u03bd \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c3\u03c4\u03b7\u03bd \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf</li> </ul> <p>\u03a5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03b4\u03cd\u03bf \u03b5\u03bd\u03bd\u03bf\u03b9\u03bf\u03bb\u03bf\u03b3\u03b9\u03ba\u03ac \u03bc\u03bf\u03bd\u03c4\u03ad\u03bb\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03bf\u03bd \u03c4\u03c1\u03cc\u03c0\u03bf \u03bc\u03b5\u03c4\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd \u03c3\u03c4\u03b9\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2</p> <ul> <li>\u03b1\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03b7\u03c2 \u03c4\u03b9\u03bc\u03ae\u03c2</li> <li>\u03bc\u03b5\u03c4\u03ac\u03b4\u03bf\u03c3\u03b7 \u03bc\u03b9\u03b1\u03c2 \u03b4\u03b9\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae\u03c2 \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2 (\u03b4\u03b5\u03af\u03ba\u03c4\u03b7\u03c2 \u03ae \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac)</li> </ul>"},{"location":"theory_ch9/#952","title":"9.5.2 \u039c\u03bf\u03bd\u03c4\u03ad\u03bb\u03b1 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd","text":""},{"location":"theory_ch9/#9521-pass-by-value","title":"9.5.2.1 \u039c\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae \u03ae \u03ba\u03b1\u03c4' \u03b1\u03be\u03af\u03b1 (pass by value)","text":"<p>\u0397 \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03b3\u03b9\u03b1 \u03c4\u03b7\u03bd \u03b1\u03c1\u03c7\u03b9\u03ba\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b7\u03c2 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ae\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5 (\u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03b5\u03b9\u03c3\u03cc\u03b4\u03bf\u03c5).</p>"},{"location":"theory_ch9/#9522-pass-by-result","title":"9.5.2.2 \u039c\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4' \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 (pass by result)","text":"<p>\u0394\u03b5\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03b9\u03b2\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03ba\u03b1\u03bc\u03af\u03b1 \u03c4\u03b9\u03bc\u03ae \u03c3\u03c4\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03ba\u03bb\u03ae\u03c3\u03b7. \u0397 \u03c4\u03b5\u03bb\u03b9\u03ba\u03ae \u03c4\u03b9\u03bc\u03ae \u03c4\u03b7\u03c2 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ae\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5 \u03bc\u03b5\u03c4\u03b1\u03b4\u03af\u03b4\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b7 \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae. </p>"},{"location":"theory_ch9/#9523-pass-by-value-result","title":"9.5.2.3 \u039c\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1 (pass by value-result) \u03ae \u03bc\u03b5 \u03b1\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae","text":"<p>\u03a3\u03c5\u03bd\u03b4\u03c5\u03b1\u03c3\u03bc\u03cc\u03c2 \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae \u03ba\u03b1\u03b9 \u03c4\u03b7\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03ba\u03b1\u03c4\u03ac \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1. \u0397 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 \u03b1\u03bd\u03c4\u03b9\u03b3\u03c1\u03ac\u03c6\u03b5\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd  \u03c4\u03c5\u03c0\u03b9\u03ba\u03ae \u03cc\u03c4\u03b1\u03bd \u03be\u03b5\u03ba\u03b9\u03bd\u03ac \u03c4\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c4\u03ac \u03b1\u03bd\u03c4\u03b9\u03b3\u03c1\u03ac\u03c6\u03b5\u03c4\u03b1\u03b9 \u03be\u03b1\u03bd\u03ac \u03c0\u03af\u03c3\u03c9 \u03cc\u03c4\u03b1\u03bd \u03c4\u03b5\u03c1\u03bc\u03b1\u03c4\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c4\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1.</p>"},{"location":"theory_ch9/#9524-pass-by-reference","title":"9.5.2.4 \u039c\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac (pass by reference)","text":"<p>\u0394\u03b5\u03bd \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b1\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03ad\u03c2 \u03c4\u03b9\u03bc\u03ce\u03bd \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03c0\u03c1\u03bf\u03c2 \u03c4\u03b9\u03c2 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03ba\u03b1\u03b9 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03c1\u03bf\u03c6\u03b1, \u03cc\u03c0\u03c9\u03c2 \u03c3\u03c4\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae \u03ba\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03b1\u03c0\u03bf\u03c4\u03ad\u03bb\u03b5\u03c3\u03bc\u03b1, \u03b1\u03bb\u03bb\u03ac \u03bc\u03b5\u03c4\u03b1\u03b4\u03af\u03b4\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03b4\u03b9\u03b1\u03b4\u03c1\u03bf\u03bc\u03ae \u03c0\u03c1\u03cc\u03c3\u03b2\u03b1\u03c3\u03b7\u03c2, \u03c3\u03c5\u03bd\u03ae\u03b8\u03c9\u03c2 \u03b1\u03c0\u03bb\u03ac \u03bc\u03b9\u03b1 \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7 \u03c3\u03c4\u03bf \u03ba\u03b1\u03bb\u03bf\u03cd\u03bc\u03b5\u03bd\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1.</p>"},{"location":"theory_ch9/#9525-pass-by-name","title":"9.5.2.5 \u039c\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03cc\u03bd\u03bf\u03bc\u03b1 (pass by name)","text":"<p>\u0395\u03af\u03bd\u03b1\u03b9 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03b4\u03b9\u03c0\u03bb\u03ae\u03c2 \u03bb\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03af\u03b1\u03c2. \u039b\u03b5\u03b9\u03c4\u03bf\u03c5\u03c1\u03b3\u03b5\u03af \u03bc\u03b5 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b1\u03c4\u03ac\u03c3\u03c4\u03b1\u03c3\u03b7 \u03c3\u03c4\u03bf \u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c4\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03bf\u03bd\u03cc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c4\u03bf\u03c5 \u03bf\u03c1\u03af\u03c3\u03bc\u03b1\u03c4\u03bf\u03c2 (\u03c0\u03b1\u03c1\u03cc\u03bc\u03bf\u03b9\u03b1 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03bc\u03b1\u03ba\u03c1\u03bf\u03b5\u03bd\u03c4\u03bf\u03bb\u03ad\u03c2 \u03c4\u03b7\u03c2 C). \u0394\u03b5\u03bd \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03c0\u03bb\u03ad\u03bf\u03bd \u03c3\u03b5 \u03ba\u03ac\u03c0\u03bf\u03b9\u03b1 \u03b4\u03b9\u03b1\u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b7 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1.</p> <p>\u0394\u03b5\u03af\u03c4\u03b5 \u03c3\u03c7\u03b5\u03c4\u03b9\u03ba\u03ac \u03c3\u03c4\u03bf https://stackoverflow.com/questions/838079/what-is-pass-by-name-and-how-does-it-work-exactly</p>"},{"location":"theory_ch9/#953","title":"9.5.3 \u03a5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03bc\u03b5\u03b8\u03cc\u03b4\u03c9\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd","text":"<p>\u03a3\u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2, \u03b7 \u03b5\u03c0\u03b9\u03ba\u03bf\u03b9\u03bd\u03c9\u03bd\u03af\u03b1 \u03bc\u03b5\u03c4\u03b1\u03be\u03cd \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03ad\u03c3\u03c9 \u03c4\u03b7\u03c2 \u03c3\u03c4\u03bf\u03af\u03b2\u03b1\u03c2 \u03c7\u03c1\u03cc\u03bd\u03bf\u03c5 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2.</p>"},{"location":"theory_ch9/#954","title":"9.5.4 \u039c\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03c3\u03b5 \u03b3\u03bd\u03c9\u03c3\u03c4\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2","text":"<p>C</p> <p>\u03a3\u03c4\u03b7 C \u03cc\u03bb\u03b5\u03c2 \u03bf\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03b9\u03b2\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae. \u039c\u03b5 \u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b4\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac, \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03bc\u03b5 \u03c4\u03b7 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 const \u03c3\u03c4\u03b9\u03c2 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03b7 \u03bc\u03bf\u03bd\u03cc\u03b4\u03c1\u03bf\u03bc\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac.</p> pass_by_value.c<pre><code>#include &lt;stdio.h&gt;\n\n// x \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae\n// y \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\n// z \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac (\u03bc\u03bf\u03bd\u03cc\u03b4\u03c1\u03bf\u03bc\u03b7)\nvoid fun1(int x, int *y, const int *z) {\n  x++;\n  (*y)++;\n  //   (*z)++; // error: increment of read-only location '*z'\n  printf(\"fun1: x=%d, y=%d, z=%d\\n\", x, *y, *z);\n}\n\nint main() {\n  int a = 1, b = 1, c = 1;\n  fun1(a, &amp;b, &amp;c);\n  printf(\"main: a=%d, b=%d, c=%d\\n\", a, b, c);\n}\n\n/*\nfun1: x=2, y=2, z=1\nmain: a=1, b=2, c=1\n*/\n</code></pre> <p>C++</p> <p>\u03a3\u03c4\u03b7 C++ \u03cc\u03bb\u03b5\u03c2 \u03bf\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03b9\u03b2\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae. H C++ \u03c0\u03b5\u03c1\u03b9\u03ad\u03c7\u03b5\u03b9 \u03ad\u03bd\u03b1 \u03b5\u03b9\u03b4\u03b9\u03ba\u03cc \u03b4\u03b5\u03af\u03ba\u03c4\u03b7, \u03c4\u03b7\u03bd \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b9\u03c2 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03ad\u03c4\u03c3\u03b9 \u03ce\u03c3\u03c4\u03b5 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03b4\u03b7\u03bb\u03ce\u03c3\u03b5\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03bc\u03b5 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac.</p> pass_by_value.cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\n// x \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae\n// y \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\n// z \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac (\u03bc\u03bf\u03bd\u03cc\u03b4\u03c1\u03bf\u03bc\u03b7)\nvoid fun1(int x, int &amp;y, const int &amp;z)\n{\n    x++;\n    y++;\n    // z++; // error: increment of read-only reference 'z'\n    cout &lt;&lt; \"fun1: x=\" &lt;&lt; x &lt;&lt; \" y=\" &lt;&lt; y &lt;&lt; \" z=\" &lt;&lt; z &lt;&lt; endl;\n}\n\nint main()\n{\n    int a = 1, b = 1, c = 1;\n    fun1(a, b, c);\n    cout &lt;&lt; \"main: a=\" &lt;&lt; a &lt;&lt; \" b=\" &lt;&lt; b &lt;&lt; \" c=\" &lt;&lt; c &lt;&lt; endl;\n}\n\n/*\nfun1: x=2 y=2 z=1\nmain: a=1 b=2 c=1\n*/\n</code></pre> <p>Java</p> <p>\u03a3\u03c4\u03b7 Java \u03cc\u03bb\u03b5\u03c2 \u03bf\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03b9\u03b2\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03af\u03c9\u03c3\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd.</p> Example1.java<pre><code>public class Example1 {\n    public static void foo(int x) {\n        x++;\n    }\n\n    public static void bar(MyClass obj) {\n        obj.a++;\n        obj = new MyClass(77); // \u03c4\u03c1\u03bf\u03c0\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 \u03c4\u03bf\u03c0\u03b9\u03ba\u03ae\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae\u03c2 obj (\u03c9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b4\u03b5\u03bd \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03b5\u03c4\u03b1\u03b9 \u03b7\n                               // \u03b5\u03c0\u03b1\u03bd\u03b1\u03c0\u03c1\u03cc\u03c3\u03b4\u03b5\u03c3\u03ae \u03c4\u03b7\u03c2)\n        System.out.println(obj.a);\n    }\n\n    public static void main(String[] args) {\n        int x = 5;\n        // \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae\n        foo(x);\n        System.out.println(x); // \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 5\n\n        MyClass obj = new MyClass(5);\n        // \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03af\u03c9\u03c3\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\n        bar(obj);\n        System.out.println(obj.a); // \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03b6\u03b5\u03b9 6 \u03ba\u03b1\u03b9 \u03cc\u03c7\u03b9 77\n    }\n\n}\n\nclass MyClass {\n    public int a;\n\n    public MyClass(int a) {\n        this.a = a;\n    }\n}\n</code></pre> <p>Python</p> <p>\u03a3\u03c4\u03b7\u03bd Python \u03cc\u03bb\u03b5\u03c2 \u03bf\u03b9 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03b9\u03b2\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03b7. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b5\u03c0\u03b9\u03c4\u03c5\u03b3\u03c7\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 \u03c0\u03c1\u03bf\u03c3\u03bf\u03bc\u03bf\u03af\u03c9\u03c3\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03c9\u03bd.</p> pass_by_assignment.py<pre><code>def foo(x):\n    x += 1\n\n\na = 5\n# \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae\nfoo(a)\nprint(a) # 5\n\nprint(\"#\" * 40)\n\n\ndef fun(x):\n    x[0] = 99\n\n\na_list = [1, 2, 3, 4, 5]\nfun(a_list)\nprint(a_list) # [99, 2, 3, 4, 5]\n\nprint(\"#\" * 40)\n\n\nclass MyClass:\n    def __init__(self, a):\n        self.a = a\n\n\ndef bar(x):\n    x.a += 1\n\n\nobj = MyClass(5)\n# \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\nbar(obj)\nprint(obj.a) # 6\n</code></pre>"},{"location":"theory_ch9/#955","title":"9.5.5 \u0388\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd","text":"<p>\u03a3\u03c4\u03b7\u03bd C (\u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7 C99 \u03ba\u03b1\u03b9 \u03bc\u03b5\u03c4\u03ac), C++, Java \u03ba\u03b1\u03b9 C# \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd. \u03a3\u03c4\u03b7\u03bd Python \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7\u03bd Ruby \u03b4\u03b5\u03bd \u03b3\u03af\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bb\u03b5\u03b3\u03c7\u03bf\u03c2 \u03c4\u03cd\u03c0\u03c9\u03bd \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd.</p>"},{"location":"theory_ch9/#956","title":"9.5.6 \u0394\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03ce\u03bd \u03b4\u03b9\u03b1\u03c3\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd \u03c9\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9","text":"<p>\u039f\u03b9 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 \u03b4\u03cd\u03bf \u03b4\u03b9\u03b1\u03c3\u03c4\u03ac\u03c3\u03b5\u03c9\u03bd \u03c3\u03c4\u03b7 C \u03b5\u03af\u03bd\u03b1\u03b9 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03c9\u03bd \u03ba\u03b1\u03b9 \u03b1\u03c0\u03bf\u03b8\u03b7\u03ba\u03b5\u03cd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03ba\u03b1\u03c4\u03ac \u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03c2 \u03c3\u03c4\u03b7 \u03bc\u03bd\u03ae\u03bc\u03b7.</p> <p>\u0391\u03bd\u03c4\u03b9\u03c3\u03c4\u03bf\u03af\u03c7\u03b9\u03c3\u03b7 \u03b4\u03b9\u03c3\u03b4\u03b9\u03ac\u03c3\u03c4\u03b1\u03c4\u03bf\u03c5 \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 M x N (M \u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03c2 \u03ba\u03b1\u03b9 N \u03c3\u03c4\u03ae\u03bb\u03b5\u03c2) \u03c3\u03b5 \u03bc\u03bf\u03bd\u03bf\u03b4\u03b9\u03ac\u03c3\u03c4\u03b1\u03c4\u03bf \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03c3\u03c4\u03b7 C.</p> <pre><code>\u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7(mat[i][j]) -&gt; \u03b4\u03b9\u03b5\u03cd\u03b8\u03c5\u03bd\u03c3\u03b7(mat[0][0])  +  (i * N + j) * \u03bc\u03ad\u03b3\u03b5\u03b8\u03bf\u03c2_\u03c4\u03cd\u03c0\u03bf\u03c5_\u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd_\u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd_\u03c4\u03bf\u03c5_mat)\n</code></pre> <p>\u038c\u03c4\u03b1\u03bd \u03ad\u03bd\u03b1\u03c2 \u03c0\u03af\u03bd\u03b1\u03ba\u03b1\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03b9\u03b2\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2, \u03b7 \u03c4\u03c5\u03c0\u03b9\u03ba\u03ae \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 \u03b8\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03c0\u03b5\u03c1\u03b9\u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03b5\u03b9 \u03c4\u03bf \u03c0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03c4\u03c9\u03bd \u03c3\u03c4\u03b7\u03bb\u03ce\u03bd \u03c3\u03c4\u03bf \u03b4\u03b5\u03cd\u03c4\u03b5\u03c1\u03bf \u03b6\u03b5\u03cd\u03b3\u03bf\u03c2 \u03b1\u03b3\u03ba\u03c5\u03bb\u03ce\u03bd (\u03bb\u03cc\u03b3\u03c9 \u03c4\u03b7\u03c2 \u03b4\u03c5\u03bd\u03b1\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03be\u03b5\u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03ae\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2 \u03c4\u03c9\u03bd \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd). \u03a3\u03c5\u03bd\u03b5\u03c0\u03ce\u03c2, \u03b4\u03b5\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03b7 \u03af\u03b4\u03b9\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b3\u03b9\u03b1 \u03b4\u03b9\u03c3\u03b4\u03b9\u03ac\u03c3\u03c4\u03b1\u03c4\u03bf \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03bc\u03b5 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03cc \u03b1\u03c1\u03b9\u03b8\u03bc\u03cc \u03c3\u03c4\u03b7\u03bb\u03ce\u03bd.</p> matrix1.c<pre><code>#include &lt;stdio.h&gt;\n\nvoid fun1(int matrix[4][3]) {\n  for (int i = 0; i &lt; 4; i++) {\n    for (int j = 0; j &lt; 3; j++) {\n      printf(\"%3d\", matrix[i][j]);\n    }\n    printf(\"\\n\");\n  }\n}\n\nvoid fun2(int matrix[][3]) {\n  for (int i = 0; i &lt; 4; i++) {\n    for (int j = 0; j &lt; 3; j++) {\n      printf(\"%3d\", matrix[i][j]);\n    }\n    printf(\"\\n\");\n  }\n}\n\nint main() {\n  int mat[4][3] = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}, {10, 11, 12}};\n  fun1(mat);\n  printf(\"\\n\");\n  fun2(mat);\n}\n\n/*\n  1  2  3\n  4  5  6\n  7  8  9\n 10 11 12\n\n  1  2  3\n  4  5  6\n  7  8  9\n 10 11 12\n*/\n</code></pre> <p>\u039c\u03b9\u03b1 \u03bb\u03cd\u03c3\u03b7 \u03c3\u03c4\u03bf \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03c0\u03c1\u03cc\u03b2\u03bb\u03b7\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03c9\u03c2 \u03b4\u03b5\u03af\u03ba\u03c4\u03b7 \u03ba\u03b1\u03b8\u03ce\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03c9\u03bd \u03b4\u03b9\u03b1\u03c3\u03c4\u03ac\u03c3\u03b5\u03ce\u03bd \u03c4\u03bf\u03c5.</p> matrix2.c<pre><code>#include &lt;stdio.h&gt;\n\nvoid fun(int *mat_ptr, int M, int N) {\n  for (int i = 0; i &lt; M; i++) {\n    for (int j = 0; j &lt; N; j++) {\n      printf(\"%3d\", *(mat_ptr + (i * N) + j));\n    }\n    printf(\"\\n\");\n  }\n}\n\nint main() {\n  int a[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};\n  fun(a, 4, 3);\n  printf(\"\\n\");\n  fun(a, 3, 4);\n}\n\n/*\n  1  2  3\n  4  5  6\n  7  8  9\n 10 11 12\n\n  1  2  3  4\n  5  6  7  8\n  9 10 11 12\n*/\n</code></pre> <p>\u03ae \u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03bc\u03b1\u03ba\u03c1\u03bf\u03b5\u03bd\u03c4\u03bf\u03bb\u03ae\u03c2 \u03b3\u03b9\u03b1 \"\u03ba\u03b1\u03b8\u03b1\u03c1\u03cc\u03c4\u03b5\u03c1\u03bf\" \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1.</p> matrix2b.c<pre><code>#include &lt;stdio.h&gt;\n\n#define mat_ptr(r, c) (*(mat_ptr + ((r) * N) + c)))\n\nvoid fun(int *mat_ptr, int M, int N) {\n  for (int i = 0; i &lt; M; i++) {\n    for (int j = 0; j &lt; N; j++) {\n      printf(\"%3d\", mat_ptr(i,j);\n    }\n    printf(\"\\n\");\n  }\n}\n\nint main() {\n  int a[] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};\n  fun(a, 4, 3);\n  printf(\"\\n\");\n  fun(a, 3, 4);\n}\n\n/*\n  1  2  3\n  4  5  6\n  7  8  9\n 10 11 12\n\n  1  2  3  4\n  5  6  7  8\n  9 10 11 12\n*/\n</code></pre> <p>Java</p> <p>\u03a3\u03c4\u03b7 Java \u03bf\u03b9 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1. \u039a\u03ac\u03b8\u03b5 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7 \u03b4\u03b9\u03b1\u03b8\u03ad\u03c4\u03b5\u03b9 \u03bc\u03b9\u03b1 \u03c3\u03c4\u03b1\u03b8\u03b5\u03c1\u03ac length \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03af\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03bf \u03bc\u03ae\u03ba\u03bf\u03c2 \u03c4\u03b7\u03c2 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7\u03c2 \u03ba\u03b1\u03b9 \u03b7 \u03bf\u03c0\u03bf\u03af\u03b1 \u03b1\u03c1\u03c7\u03b9\u03ba\u03bf\u03c0\u03bf\u03b9\u03b5\u03af\u03c4\u03b1\u03b9 \u03cc\u03c4\u03b1\u03bd \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af\u03c4\u03b1\u03b9 \u03b7 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7. \u039a\u03ac\u03b8\u03b5 \u03c3\u03c4\u03bf\u03b9\u03c7\u03b5\u03af\u03bf \u03bc\u03b9\u03b1\u03c2 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03ac\u03bb\u03bb\u03b7 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7.</p> Example1.java<pre><code>class Example1 {\n\n    static void fun(int mat[][]) {\n        for (int i = 0; i &lt; mat.length; i++) {\n            for (int j = 0; j &lt; mat[i].length; j++) {\n                System.out.format(\"%3d\", mat[i][j]);\n            }\n            System.out.println();\n        }\n    }\n\n    public static void main(String[] args) {\n        int a[][] = { { 1, 2, 3 }, { 4, 5, 6 }, { 7, 8, 9 } };\n        fun(a);\n\n        System.out.println();\n\n        int b[][] = { { 1, 2 }, { 3, 4 }, { 5, 6 }, { 7, 8 } };\n        fun(b);\n    }\n}\n\n// 1 2 3\n// 4 5 6\n// 7 8 9\n\n// 1 2\n// 3 4\n// 5 6\n// 7 8\n</code></pre> <p>Python</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1\u03bd \u03b4\u03b9\u03c3\u03b4\u03b9\u03ac\u03c3\u03c4\u03b1\u03c4\u03bf \u03c0\u03af\u03bd\u03b1\u03ba\u03b1 \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf\u03bd \u03b1\u03bd\u03ac\u03c3\u03c4\u03c1\u03bf\u03c6\u03cc \u03c4\u03bf\u03c5 (\u03bf\u03b9 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03c2 \u03b3\u03af\u03bd\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03ae\u03bb\u03b5\u03c2 \u03ba\u03b1\u03b9 \u03bf \u03c3\u03c4\u03ae\u03bb\u03b5\u03c2 \u03b3\u03c1\u03b1\u03bc\u03bc\u03ad\u03c2).</p> transpose_matrix.py<pre><code>def transpose_matrix(matrix):\n    if not matrix or not matrix[0]:\n        return []\n\n    rows = len(matrix)\n    cols = len(matrix[0])\n\n    transposed = [[0] * rows for _ in range(cols)]\n\n    for i in range(rows):\n        for j in range(cols):\n            transposed[j][i] = matrix[i][j]\n\n    return transposed\n\n\nmatrix = [[1, 2, 3], [4, 5, 6]]\n\ntransposed = transpose_matrix(matrix)\nprint(\"Original matrix:\")\nfor row in matrix:\n    print(row)\n\nprint(\"\\nTransposed matrix:\")\nfor row in transposed:\n    print(row)\n</code></pre> <pre><code>$ python traspose_matrix.py\nOriginal matrix:\n[1, 2, 3]\n[4, 5, 6]\n\nTransposed matrix:\n[1, 4]\n[2, 5]\n[3, 6]\n</code></pre>"},{"location":"theory_ch9/#957","title":"9.5.7 \u0398\u03ad\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd","text":"<p>\u03a3\u03c4\u03b7 C++ (\u03b1\u03bb\u03bb\u03ac \u03ba\u03b1\u03b9 \u03c3\u03b5 \u03ac\u03bb\u03bb\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd) \u03bf\u03b9 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 \u03bc\u03b5\u03c4\u03b1\u03b2\u03b9\u03b2\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c3\u03c4\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac  \u03c0\u03c1\u03bf\u03ba\u03b5\u03b9\u03bc\u03ad\u03bd\u03bf\u03c5 \u03bd\u03b1 \u03b1\u03c0\u03bf\u03c6\u03b5\u03c5\u03c7\u03b8\u03b5\u03af \u03b7 \u03b5\u03c0\u03b9\u03b2\u03ac\u03c1\u03c5\u03bd\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03c0\u03c1\u03bf\u03ba\u03b1\u03bb\u03bf\u03cd\u03c3\u03b5 \u03b7 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae \u03ba\u03b1\u03b8\u03ce\u03c2 \u03c3\u03b5 \u03b1\u03c5\u03c4\u03ae \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03af\u03c0\u03c4\u03c9\u03c3\u03b7 \u03b8\u03b1 \u03c7\u03c1\u03b5\u03b9\u03b1\u03b6\u03cc\u03c4\u03b1\u03bd \u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03b3\u03c1\u03b1\u03c6\u03bf\u03cd\u03bd \u03cc\u03bb\u03b1 \u03c4\u03b1 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03b1 \u03c4\u03b7\u03c2 \u03b4\u03b9\u03ac\u03c4\u03b1\u03be\u03b7\u03c2, \u03ba\u03ac\u03c4\u03b9 \u03c0\u03bf\u03c5 \u03b8\u03b1 \u03b1\u03c0\u03b1\u03b9\u03c4\u03bf\u03cd\u03c3\u03b5 \u03b5\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd \u03c7\u03c1\u03cc\u03bd\u03bf \u03b1\u03bb\u03bb\u03ac \u03ba\u03b1\u03b9 \u03c7\u03ce\u03c1\u03bf.</p>"},{"location":"theory_ch9/#958","title":"9.5.8 \u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd","text":"<p>\u0397 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b4\u03b5\u03bd \u03c0\u03c1\u03b1\u03b3\u03bc\u03b1\u03c4\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03c3\u03c9\u03c3\u03c4\u03ae \u03b1\u03bd\u03c4\u03b9\u03bc\u03b5\u03c4\u03ac\u03b8\u03b5\u03c3\u03b7 \u03c4\u03c9\u03bd \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03c9\u03bd \u03c0\u03bf\u03c5 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9. \u0391\u03bd \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 <code>a</code> \u03ba\u03b1\u03b9 <code>b</code> \u03b1\u03bd\u03c4\u03b1\u03bb\u03bb\u03ac\u03c3\u03c3\u03bf\u03c5\u03bd \u03c4\u03b9\u03bc\u03ad\u03c2, \u03bf\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c4\u03c9\u03bd <code>c</code> \u03ba\u03b1\u03b9 <code>d</code> \u03b4\u03b5\u03bd \u03b1\u03bb\u03bb\u03ac\u03b6\u03bf\u03c5\u03bd \u03b4\u03b9\u03cc\u03c4\u03b9 \u03b4\u03b5\u03bd \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03c4\u03b1\u03b9 \u03ba\u03ac\u03c4\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7.</p> <pre><code>void swap1(int a, int b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n...\nswap1(c,d);\n</code></pre> <p>\u03a3\u03c9\u03c3\u03c4\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03bc\u03b5\u03c4\u03ac\u03b8\u03b5\u03c3\u03b7 (\u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b4\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd):</p> <pre><code>void swap2(int *a, int *b) {\n    int temp = *a;\n    *a = *b;\n    *b = temp;\n}\n...\nswap1(&amp;c,&amp;d);\n</code></pre> <p>\u03a3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03b1\u03bd\u03c4\u03b9\u03bc\u03b5\u03c4\u03ac\u03b8\u03b5\u03c3\u03b7\u03c2 \u03c3\u03c4\u03b7 C++ (\u03bc\u03b5 \u03c7\u03c1\u03ae\u03c3\u03b7 \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ce\u03bd):</p> <pre><code>void swap3(int&amp; a, int&amp; b) {\n    int temp = a;\n    a = b;\n    b = temp;\n}\n...\nswap1(c,d);\n</code></pre>"},{"location":"theory_ch9/#96","title":"9.6 \u03a0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03c0\u03bf\u03c5 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1","text":"<p>\u03a3\u03c4\u03b7 C \u03ba\u03b1\u03b9 \u03c3\u03c4\u03b7 C++ \u03bf\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b4\u03b5\u03bd \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03b9\u03b2\u03b1\u03c3\u03c4\u03bf\u03cd\u03bd \u03c9\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9, \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03cc\u03bc\u03c9\u03c2 \u03bf\u03b9 \u03b4\u03b5\u03af\u03ba\u03c4\u03b5\u03c2 \u03c3\u03b5 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2.</p>"},{"location":"theory_ch9/#97","title":"9.7 \u0388\u03bc\u03bc\u03b5\u03c3\u03b7 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd","text":"<p>\u03a5\u03c0\u03ac\u03c1\u03c7\u03bf\u03c5\u03bd \u03c0\u03b5\u03c1\u03b9\u03c0\u03c4\u03ce\u03c3\u03b5\u03b9\u03c2 \u03c0\u03bf\u03c5 \u03c4\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03ba\u03b1\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03ad\u03bc\u03bc\u03b5\u03c3\u03b1 \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03ae\u03b8\u03c9\u03c2 \u03b1\u03c5\u03c4\u03cc \u03c3\u03c5\u03bc\u03b2\u03b1\u03af\u03bd\u03b5\u03b9 \u03cc\u03c4\u03b1\u03bd \u03c4\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03ba\u03bb\u03b7\u03b8\u03b5\u03af \u03b4\u03b5\u03bd \u03b5\u03af\u03bd\u03b1\u03b9 \u03b3\u03bd\u03c9\u03c3\u03c4\u03cc \u03c0\u03b1\u03c1\u03ac \u03bc\u03cc\u03bd\u03bf \u03c3\u03c4\u03b7\u03bd \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7.</p> function_pointer.c<pre><code>#include &lt;stdio.h&gt;\n\ndouble foo(int x) {\n  printf(\"double foo(int)\\n\");\n  return 3.14;\n}\n\ndouble bar(int x) {\n  printf(\"double bar(int)\\n\");\n  return 2.718;\n}\n\nint main() {\n  double (*f)(int) = &amp;foo;\n  double r = f(1);\n  printf(\"%f\\n\", r);\n\n  f = &amp;bar;\n  r = f(2);\n  printf(\"%f\\n\", r);\n}\n\n/*\ndouble foo(int)\n3.140000\ndouble bar(int)\n2.718000\n*/\n</code></pre> function_pointer2.c<pre><code>#include &lt;stdio.h&gt;\n\nint fun(int a, int b) { return a + b; }\n\nint main() {\n  int (*ptr)(int, int);\n  ptr = &amp;fun; // \u03ae ptr = fun;\n\n  int result;\n  result = (*ptr)(1, 2); // \u03ae ptr(1,2); \u03ae fun(1,2);\n\n  printf(\"%d\\n\", result);\n}\n</code></pre> <p>\u0391\u03c1\u03b9\u03b8\u03bc\u03b7\u03c4\u03b9\u03ba\u03cc\u03c2 \u03c4\u03c1\u03cc\u03c0\u03bf\u03c2 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd \u03bf\u03bb\u03bf\u03ba\u03bb\u03b7\u03c1\u03c9\u03bc\u03ac\u03c4\u03c9\u03bd \u03c3\u03c4\u03bf \u03b4\u03b9\u03ac\u03c3\u03c4\u03b7\u03bc\u03b1 \\([0, 10]\\) \u03b3\u03b9\u03b1 \u03c4\u03b9\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2:</p> <ul> <li>\\(f_1(x)=x\\)</li> <li>\\(f_2(x)=x^2\\)</li> <li>\\(f_3(x)=x^3\\)</li> <li>\\(f_4(c)=e^x\\)</li> <li>\\(f_5(c)=\\sqrt x\\)</li> </ul> <p>\u03a3\u03b5 \u03ba\u03ac\u03b8\u03b5 \u03c0\u03b5\u03c1\u03af\u03c0\u03c4\u03c9\u03c3\u03b7 \u03b7 \u03ba\u03b1\u03c4\u03ac\u03bb\u03bb\u03b7\u03bb\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03b5\u03c1\u03bd\u03ac \u03c9\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c5\u03c4\u03ac\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03c2 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c5\u03c0\u03bf\u03bb\u03bf\u03b3\u03b9\u03c3\u03bc\u03bf\u03cd <code>trapezio</code>.</p> trapezoid_rule.c<pre><code>#include &lt;math.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n\ndouble f1(double x) { return x; }\ndouble f2(double x) { return x * x; }\ndouble f3(double x) { return x * x * x; }\n\ndouble trapezio(double a, double b, int n, double (*fp)(double)) {\n  double x_i, approx;\n  int i;\n  double h = (b - a) / n;\n  approx = (fp(a) + fp(b)) / 2.0;\n  for (i = 1; i &lt;= n - 1; i++) {\n    x_i = a + i * h;\n    approx += fp(x_i);\n  }\n  approx *= h;\n  return approx;\n}\n\nint main(int argc, char **argv) {\n  double global_result = 0.0;\n\n  int n = 1000000;\n  double approx;\n  double a = 0.0, b = 10.0;\n\n  approx = trapezio(a, b, n, f1);\n  printf(\"result: %.5f\\n\", approx);\n  approx = trapezio(a, b, n, f2);\n  printf(\"result: %.5f\\n\", approx);\n  approx = trapezio(a, b, n, f3);\n  printf(\"result: %.5f\\n\", approx);\n  approx = trapezio(a, b, n, exp);\n  printf(\"result: %.5f\\n\", approx);\n  approx = trapezio(a, b, n, sqrt);\n  printf(\"result: %.5f\\n\", approx);\n\n  return 0;\n}\n\n// result: 50.00000\n// result: 333.33333\n// result: 2500.00000\n// result: 22025.46579\n// result: 21.08185\n</code></pre> <p>\u0399\u03c3\u03bf\u03b4\u03cd\u03bd\u03b1\u03bc\u03bf\u03c2 \u03bc\u03b5 \u03c4\u03bf\u03bd \u03c0\u03b1\u03c1\u03b1\u03c0\u03ac\u03bd\u03c9 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c3\u03b5 Python:</p> trapezoid_rule.py<pre><code>import math\n\n\ndef f1(x):\n    return x\n\n\ndef f2(x):\n    return x * x\n\n\ndef f3(x):\n    return x * x * x\n\n\ndef trapezio(a, b, n, fp):\n    h = (b - a) / n\n    approx = (fp(a) + fp(b)) / 2.0\n    for i in range(1, n):\n        x_i = a + i * h\n        approx += fp(x_i)\n    approx *= h\n    return approx\n\n\ndef main():\n    n = 1000000\n    a, b = 0.0, 10.0\n\n    approx = trapezio(a, b, n, f1)\n    print(f\"result: {approx:.5f}\")\n    approx = trapezio(a, b, n, f2)\n    print(f\"result: {approx:.5f}\")\n    approx = trapezio(a, b, n, f3)\n    print(f\"result: {approx:.5f}\")\n    approx = trapezio(a, b, n, math.exp)\n    print(f\"result: {approx:.5f}\")\n    approx = trapezio(a, b, n, math.sqrt)\n    print(f\"result: {approx:.5f}\")\n\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>$ python trapezoid_rule.py\nresult: 50.00000\nresult: 333.33333\nresult: 2500.00000\nresult: 22025.46579\nresult: 21.08185\n</code></pre>"},{"location":"theory_ch9/#98","title":"9.8 \u0396\u03b7\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c7\u03b5\u03b4\u03b9\u03b1\u03c3\u03bc\u03bf\u03cd \u03b3\u03b9\u03b1 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2","text":""},{"location":"theory_ch9/#981","title":"9.8.1 \u03a3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03ac\u03c0\u03bb\u03b5\u03c5\u03c1\u03b5\u03c2 \u03c3\u03c5\u03bd\u03ad\u03c0\u03b5\u03b9\u03b5\u03c2","text":"<p>\u039f\u03b9 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03b5\u03c6\u03b1\u03c1\u03bc\u03cc\u03b6\u03bf\u03c5\u03bd \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03c4\u03b9\u03bc\u03ae \u03ae \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac. \u0397 \u03bc\u03b5\u03c4\u03b1\u03b2\u03af\u03b2\u03b1\u03c3\u03b7 \u03ba\u03b1\u03c4\u03ac \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c0\u03c1\u03bf\u03ba\u03b1\u03bb\u03b5\u03af \u03c0\u03b1\u03c1\u03ac\u03c0\u03bb\u03b5\u03c5\u03c1\u03b5\u03c2 \u03c3\u03c5\u03bd\u03ad\u03c0\u03b5\u03b9\u03b5\u03c2. \u0391\u03c0\u03cc \u03c4\u03b7\u03bd \u03ac\u03bb\u03bb\u03b7 \u03bc\u03b5\u03c1\u03b9\u03ac \u03bf\u03b9 \u03b1\u03bc\u03b9\u03b3\u03b5\u03af\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ad\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03b4\u03b5\u03bd \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03bf\u03c5\u03bd \u03c0\u03b1\u03c1\u03ac\u03c0\u03bb\u03b5\u03c5\u03c1\u03b5\u03c2 \u03c3\u03c5\u03bd\u03ad\u03c0\u03b5\u03b9\u03b5\u03c2.</p>"},{"location":"theory_ch9/#982","title":"9.8.2 \u03a4\u03cd\u03c0\u03bf\u03b9 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03b5\u03c6\u03cc\u03bc\u03b5\u03bd\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd","text":"<p>\u039f\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c4\u03b7 C \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03bf\u03c5\u03bd \u03c4\u03b9\u03bc\u03ad\u03c2 \u03bf\u03c0\u03bf\u03b9\u03bf\u03c5\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c4\u03cd\u03c0\u03bf\u03c5 \u03b5\u03ba\u03c4\u03cc\u03c2 \u03b1\u03c0\u03cc \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03c4\u03cc\u03c3\u03bf \u03bf\u03b9 \u03b4\u03b9\u03b1\u03c4\u03ac\u03be\u03b5\u03b9\u03c2 \u03b1\u03bb\u03bb\u03ac \u03ba\u03b1\u03b9 \u03bf\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03bc\u03ad\u03c3\u03c9 \u03b4\u03b5\u03b9\u03ba\u03c4\u03ce\u03bd.</p>"},{"location":"theory_ch9/#983","title":"9.8.3 \u03a0\u03bb\u03ae\u03b8\u03bf\u03c2 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03b5\u03c6\u03cc\u03bc\u03b5\u03bd\u03c9\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd","text":"<p>\u03a3\u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd \u03bf\u03b9 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03bf\u03c5\u03bd \u03bc\u03cc\u03bd\u03bf \u03bc\u03b9\u03b1 \u03c4\u03b9\u03bc\u03ae. \u03a9\u03c3\u03c4\u03cc\u03c3\u03bf, \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03cc\u03c0\u03c9\u03c2 \u03b7 Ruby \u03ba\u03b1\u03b9 \u03b7 Python \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae \u03c0\u03bf\u03bb\u03bb\u03ce\u03bd \u03c4\u03b9\u03bc\u03ce\u03bd.</p> <pre><code>def fun(x):\n    return x, 2*x, 3*x\n\na,b,c = fun(10) # \u03bf\u03b9 \u03c4\u03b9\u03bc\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03bb\u03b1\u03bc\u03b2\u03ac\u03bd\u03bf\u03c5\u03bd \u03bf\u03b9 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2 a, b, c \u03b5\u03af\u03bd\u03b1\u03b9 10, 20 \u03ba\u03b1\u03b9 30 \u03b1\u03bd\u03c4\u03af\u03c3\u03c4\u03bf\u03b9\u03c7\u03b1.\n</code></pre>"},{"location":"theory_ch9/#99","title":"9.9. \u03a5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03c9\u03bc\u03ad\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1","text":"<p>\u0388\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03c9\u03bc\u03ad\u03bd\u03bf \u03b1\u03bd \u03ad\u03c7\u03b5\u03b9 \u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03cc\u03bd\u03bf\u03bc\u03b1 \u03bc\u03b5 \u03ac\u03bb\u03bb\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c4\u03bf \u03af\u03b4\u03b9\u03bf \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2. </p> overload_example.cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid foo(int x)\n{\n    cout &lt;&lt; \"int \" &lt;&lt; x &lt;&lt; endl;\n}\n\nvoid foo(float x)\n{\n    cout &lt;&lt; \"float \" &lt;&lt; x &lt;&lt; endl;\n}\n\nvoid foo(int x, float y, char z)\n{\n    cout &lt;&lt; \"another overloaded function\" &lt;&lt; endl;\n}\n\nint main()\n{\n    foo(4);\n    foo(4.5f);\n    foo(45, 6.7f, 'a');\n}\n</code></pre> <p>\u03a3\u03c4\u03b9\u03c2 C++, Java, C# \u03bf \u03c4\u03cd\u03c0\u03bf\u03c2 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae\u03c2 \u03c4\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03b4\u03b5\u03bd \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b7\u03b8\u03b5\u03af \u03b3\u03b9\u03b1 \u03c4\u03b7 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03bc\u03b5\u03c4\u03b1\u03be\u03cd \u03c5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03c9\u03bc\u03ad\u03bd\u03c9\u03bd \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd.</p> <p>\u0393\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bf\u03b9 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf\u03b9 \u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03af \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd \u03c3\u03c4\u03b7 C++ \u03b8\u03b1 \u03bf\u03b4\u03b7\u03b3\u03ae\u03c3\u03bf\u03c5\u03bd \u03c3\u03b5 \u03b1\u03b4\u03c5\u03bd\u03b1\u03bc\u03af\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2.</p> <pre><code>int fun(int x) {\n  return 0;\n}\n\nfloat fun(int x) {\n  return 0.0;\n}\n</code></pre> overload_error.cpp<pre><code>#include &lt;iostream&gt;\n\nint fun(int x)\n{\n    // dummy\n    return 0;\n}\n\nfloat fun(int x) //  error: ambiguating new declaration of 'float fun(int)'\n{\n    // dummy\n    return 0.0;\n}\n\nint main() {}\n</code></pre> <p>\u0395\u03c0\u03b9\u03c0\u03bb\u03ad\u03bf\u03bd, \u03c5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03c9\u03bc\u03ad\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03bc\u03b5 \u03c0\u03c1\u03bf\u03b5\u03c0\u03b9\u03bb\u03b5\u03b3\u03bc\u03ad\u03bd\u03b5\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03bc\u03c0\u03bf\u03c1\u03b5\u03af \u03bd\u03b1 \u03bf\u03b4\u03b7\u03b3\u03ae\u03c3\u03bf\u03c5\u03bd \u03c3\u03b5 \u03b1\u03c3\u03ac\u03c6\u03b5\u03b9\u03b1 \u03b3\u03b9\u03b1 \u03c4\u03bf \u03c0\u03bf\u03b9\u03bf \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03ba\u03b1\u03bb\u03b5\u03af\u03c4\u03b1\u03b9. \u0394\u03b5\u03af\u03c4\u03b5 \u03b3\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c4\u03bf\u03bd \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03bf \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03c3\u03b5 C++.</p> <pre><code>void fun(float b = 0.0)\n{\n    cout &lt;&lt; \"Calling function fun(float)\" &lt;&lt; endl;\n}\n\nvoid fun()\n{\n    cout &lt;&lt; \"Calling function fun()\" &lt;&lt; endl;\n}\n</code></pre> overload_problem.cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\nvoid fun(float b = 0.0)\n{\n    cout &lt;&lt; \"Calling function fun(float)\" &lt;&lt; endl;\n}\n\nvoid fun()\n{\n    cout &lt;&lt; \"Calling function fun()\" &lt;&lt; endl;\n}\n\nint main()\n{\n    fun(1.5); // ok\n    // fun(); // error: call of overloaded 'fun()' is ambiguous\n}\n</code></pre> <p>\u0397 \u03ba\u03bb\u03ae\u03c3\u03b7 <code>fun();</code> \u03b5\u03af\u03bd\u03b1\u03b9 \u03b1\u03c3\u03b1\u03c6\u03ae\u03c2 (ambiguous) \u03ba\u03b1\u03b9 \u03c0\u03c1\u03bf\u03ba\u03b1\u03bb\u03b5\u03af \u03c3\u03c6\u03ac\u03bb\u03bc\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\u03c2.</p> <p>\u0397 C \u03b4\u03b5\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03c5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd. \u0394\u03b5\u03af\u03c4\u03b5 \u03b3\u03b9\u03b1 \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1:</p> no_overload_support.c<pre><code>// \u0397 C \u03b4\u03b5\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03c5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03c9\u03bd\n\n#include &lt;stdio.h&gt;\n\nint fun(int x) {\n  // dummy\n  return 0;\n}\n\nint fun(char x) { // error: conflicting types for 'fun'\n  // dummy\n  return 0;\n}\n\nint main() {}\n</code></pre>"},{"location":"theory_ch9/#910","title":"9.10 \u0393\u03b5\u03bd\u03b9\u03ba\u03ac \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1","text":"<p>\u0388\u03bd\u03b1 \u03c0\u03bf\u03bb\u03c5\u03bc\u03bf\u03c1\u03c6\u03b9\u03ba\u03cc \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ce\u03bd \u03c4\u03cd\u03c0\u03c9\u03bd \u03c3\u03b5 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b5\u03bd\u03b5\u03c1\u03b3\u03bf\u03c0\u03bf\u03b9\u03ae\u03c3\u03b5\u03b9\u03c2. \u039f \u03c0\u03b1\u03c1\u03b1\u03bc\u03b5\u03c4\u03c1\u03b9\u03ba\u03cc\u03c2 \u03c0\u03bf\u03bb\u03c5\u03bc\u03bf\u03c1\u03c6\u03b9\u03c3\u03bc\u03cc\u03c2 \u03b1\u03c6\u03bf\u03c1\u03ac \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03c0\u03bf\u03c5 \u03b4\u03ad\u03c7\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03b1\u03bc\u03ad\u03c4\u03c1\u03bf\u03c5\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1 \u03b1\u03c5\u03c4\u03ac \u03c3\u03c5\u03c7\u03bd\u03ac \u03b1\u03c0\u03bf\u03ba\u03b1\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ac \u03ae \u03b3\u03b5\u03bd\u03b5\u03c1\u03b9\u03ba\u03ac.</p>"},{"location":"theory_ch9/#9101-c","title":"9.10.1 \u0393\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c4\u03b7 C++","text":"<p>\u039f\u03b9 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c4\u03b7 C++ \u03bf\u03bd\u03bf\u03bc\u03ac\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c0\u03c1\u03cc\u03c4\u03c5\u03c0\u03b5\u03c2 (templates) \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c3\u03cd\u03b3\u03ba\u03c1\u03b9\u03c3\u03b7\u03c2 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ae\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03bc\u03b5 \u03bc\u03b1\u03ba\u03c1\u03bf\u03b5\u03bd\u03c4\u03bf\u03bb\u03ae.</p> template1.cpp<pre><code>#include &lt;iostream&gt;\n\n#define MAX(a, b) ((a) &gt; (b) ? (a) : (b))\n\ntemplate &lt;class T&gt;\nT max(T first, T second)\n{\n    return first &gt; second ? first : second;\n}\n\nvoid test1()\n{\n    std::cout &lt;&lt; \"Using template\" &lt;&lt; std::endl;\n    int a = 2, b = 1, c;\n    char d = 'B', e = 'A', f;\n\n    c = max(a, b);\n    f = max(d, e);\n\n    std::cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b &lt;&lt; \" \" &lt;&lt; c &lt;&lt; std::endl;\n    std::cout &lt;&lt; d &lt;&lt; \" \" &lt;&lt; e &lt;&lt; \" \" &lt;&lt; f &lt;&lt; std::endl;\n}\n\nvoid test2()\n{\n    std::cout &lt;&lt; \"Using macro\" &lt;&lt; std::endl;\n    int a = 2, b = 1, c;\n    char d = 'B', e = 'A', f;\n\n    c = MAX(a, b);\n    f = MAX(d, e);\n\n    std::cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b &lt;&lt; \" \" &lt;&lt; c &lt;&lt; std::endl;\n    std::cout &lt;&lt; d &lt;&lt; \" \" &lt;&lt; e &lt;&lt; \" \" &lt;&lt; f &lt;&lt; std::endl;\n}\n\n// \u03b7 test3 \u03ba\u03b1\u03b9 \u03b7 test4 \u03c0\u03b1\u03c1\u03bf\u03c5\u03c3\u03b9\u03ac\u03b6\u03bf\u03c5\u03bd \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ae \u03c3\u03c5\u03bc\u03c0\u03b5\u03c1\u03b9\u03c6\u03bf\u03c1\u03ac \u03bb\u03cc\u03b3\u03c9 side-effects\nvoid test3()\n{\n    std::cout &lt;&lt; \"Using template\" &lt;&lt; std::endl;\n    int a = 2, b = 1, c;\n    char d = 'B', e = 'A', f;\n\n    c = max(a++, b);\n    f = max(d++, e);\n\n    std::cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b &lt;&lt; \" \" &lt;&lt; c &lt;&lt; std::endl;\n    std::cout &lt;&lt; d &lt;&lt; \" \" &lt;&lt; e &lt;&lt; \" \" &lt;&lt; f &lt;&lt; std::endl;\n}\n\n// \u03b5\u03c0\u03b5\u03b9\u03b4\u03ae \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 a \u03b5\u03af\u03bd\u03b1\u03b9 \u03bc\u03b5\u03b3\u03b1\u03bb\u03cd\u03c4\u03b5\u03c1\u03b7 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 b, \u03b7 \u03c4\u03b9\u03bc\u03ae \u03c4\u03bf\u03c5 a, \u03bb\u03cc\u03b3\u03c9 macro, \u03b1\u03c5\u03be\u03ac\u03bd\u03b5\u03c4\u03b1\u03b9 2 \u03c6\u03bf\u03c1\u03ad\u03c2\nvoid test4()\n{\n    std::cout &lt;&lt; \"Using macro\" &lt;&lt; std::endl;\n    int a = 2, b = 1, c;\n    char d = 'B', e = 'A', f;\n\n    c = MAX(a++, b);\n    f = MAX(d++, e);\n\n    std::cout &lt;&lt; a &lt;&lt; \" \" &lt;&lt; b &lt;&lt; \" \" &lt;&lt; c &lt;&lt; std::endl;\n    std::cout &lt;&lt; d &lt;&lt; \" \" &lt;&lt; e &lt;&lt; \" \" &lt;&lt; f &lt;&lt; std::endl;\n}\n\nint main()\n{\n    test1();\n    test2();\n    test3();\n    test4();\n}\n\n/*\nUsing template\n2 1 2\nB A B\nUsing macro\n2 1 2\nB A B\nUsing template\n3 1 2\nC A B\nUsing macro\n4 1 3\nD A C\n*/\n</code></pre> <p>\u039c\u03b9\u03b1 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ae \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c4\u03b1\u03be\u03b9\u03bd\u03cc\u03bc\u03b7\u03c3\u03b7\u03c2.</p> generic_sort.cpp<pre><code>#include &lt;iostream&gt;\n\nusing namespace std;\n\ntemplate &lt;class Type&gt;\nvoid generic_sort(Type list[], int len)\n{\n    int top, bottom;\n    Type temp;\n    for (top = 0; top &lt; len - 2; top++)\n        for (bottom = top + 1; bottom &lt; len - 1; bottom++)\n            if (list[top] &gt; list[bottom])\n            {\n                temp = list[top];\n                list[top] = list[bottom];\n                list[bottom] = temp;\n            }\n}\n\nint main()\n{\n    int a[] = {3, 2, 1, 4, 5};\n    generic_sort(a, 5);\n    for (int i = 0; i &lt; 5; i++)\n    {\n        cout &lt;&lt; a[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n\n    int b[] = {'b', 'e', 'c', 'a', 'd', 'f'};\n    generic_sort(b, 6);\n    for (int i = 0; i &lt; 6; i++)\n    {\n        cout &lt;&lt; (char)b[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n}\n\n/*\n1 2 3 4 5 \na b c d e f\n*/\n</code></pre>"},{"location":"theory_ch9/#9102-java-50","title":"9.10.2 \u0393\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03c3\u03c4\u03b7 Java 5.0","text":"<p>H Java \u03be\u03b5\u03ba\u03af\u03bd\u03b7\u03c3\u03b5 \u03bd\u03b1 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03b3\u03b5\u03bd\u03b9\u03ba\u03bf\u03cd\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2 \u03ba\u03b1\u03b9 \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5\u03c2 \u03c3\u03c4\u03b7\u03bd \u03ad\u03ba\u03b4\u03bf\u03c3\u03b7 5.0. \u0397 \u03b4\u03b5 \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c3\u03c4\u03b7 Java \u03b4\u03b9\u03b1\u03c6\u03ad\u03c1\u03b5\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd \u03c5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c4\u03b7\u03c2 C++. \u03a3\u03b7\u03bc\u03b1\u03bd\u03c4\u03b9\u03ba\u03ad\u03c2 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03ad\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03bf\u03b9 \u03b1\u03ba\u03cc\u03bb\u03bf\u03c5\u03b8\u03b5\u03c2: 1. \u03a3\u03c4\u03b7 Java \u03bf\u03b9 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9 \u03c0\u03c1\u03ad\u03c0\u03b5\u03b9 \u03bd\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03ba\u03bb\u03ac\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03cc\u03c7\u03b9 \u03b2\u03b1\u03c3\u03b9\u03ba\u03bf\u03af \u03c4\u03cd\u03c0\u03bf\u03b9. 2. \u03a3\u03c4\u03b7 Java \u03ba\u03b1\u03c4\u03b1\u03c3\u03ba\u03b5\u03c5\u03ac\u03b6\u03b5\u03c4\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03bc\u03cc\u03bd\u03bf \u03b1\u03bd\u03c4\u03af\u03b3\u03c1\u03b1\u03c6\u03bf \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 (raw \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1\u03c2) \u03b1\u03ba\u03cc\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03b1\u03bd \u03b7 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ae \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03c2 \u03ba\u03b1\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2 \u03b4\u03b5\u03b4\u03bf\u03bc\u03ad\u03bd\u03c9\u03bd (\u03c3\u03c4\u03b7 C++ \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03b5\u03af\u03c4\u03b1\u03b9, \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7 \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7, \u03be\u03b5\u03c7\u03c9\u03c1\u03b9\u03c3\u03c4\u03cc \u03b1\u03bd\u03c4\u03af\u03b3\u03c1\u03b1\u03c6\u03bf \u03c4\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 \u03b3\u03b9\u03b1 \u03ba\u03ac\u03b8\u03b5 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03bf\u03c2 \u03c0\u03bf\u03c5 \u03c7\u03c1\u03b7\u03c3\u03b9\u03bc\u03bf\u03c0\u03bf\u03b9\u03b5\u03af \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03bf\u03cd\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2). 3. \u03a3\u03c4\u03b7 Java \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03bf\u03c1\u03b9\u03c3\u03c4\u03bf\u03cd\u03bd \u03c0\u03b5\u03c1\u03b9\u03bf\u03c1\u03b9\u03c3\u03bc\u03bf\u03af (bounds) \u03b3\u03b9\u03b1 \u03c4\u03bf \u03b5\u03cd\u03c1\u03bf\u03c2 \u03c4\u03c9\u03bd \u03ba\u03bb\u03ac\u03c3\u03b5\u03c9\u03bd \u03c0\u03bf\u03c5 \u03bc\u03c0\u03bf\u03c1\u03bf\u03cd\u03bd \u03bd\u03b1 \u03bc\u03b5\u03c4\u03b1\u03b2\u03b9\u03b2\u03b1\u03c3\u03c4\u03bf\u03cd\u03bd \u03c3\u03c4\u03b7 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ae \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf \u03c9\u03c2 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf\u03b9. 4. H Java \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03c4\u03cd\u03c0\u03bf\u03c5\u03c2 \u03bc\u03c0\u03b1\u03bb\u03b1\u03bd\u03c4\u03ad\u03c1, \u03c0.\u03c7. Collection&lt;?&gt; \u03c3\u03b7\u03bc\u03b1\u03af\u03bd\u03b5\u03b9 \u03bf\u03c0\u03bf\u03b9\u03bf\u03c3\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03c4\u03cd\u03c0\u03bf\u03c2 \u03c3\u03c5\u03bb\u03bb\u03bf\u03b3\u03ae\u03c2 \u03bc\u03b5 \u03c0\u03b5\u03c1\u03b9\u03b5\u03c7\u03cc\u03bc\u03b5\u03bd\u03b1 \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03b1 \u03bf\u03c0\u03bf\u03b9\u03b1\u03c3\u03b4\u03ae\u03c0\u03bf\u03c4\u03b5 \u03ba\u03bb\u03ac\u03c3\u03b7\u03c2 (collection of unknown).</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 1 \u03bc\u03b5 generics \u03c3\u03c4\u03b7 Java </p> generics1.Example.java<pre><code>public class Example {\n\n    public static &lt;T&gt; void doIt(T[] list) {\n        for (T elem : list) {\n            System.out.println(elem);\n        }\n    }\n\n    public static void main(String[] args) {\n        Integer a[] = new Integer[] { 1, 2, 3, 4, 5 };\n        doIt(a);\n\n        System.out.println();\n\n        String b[] = new String[] { \"Arta\", \"Ioannina\", \"Preveza\", \"Igoumenitsa\" };\n        doIt(b);\n\n        System.out.println();\n\n        MyClass c[] = new MyClass[] { new MyClass(1), new MyClass(2), new MyClass(3) };\n        doIt(c);\n    }\n}\n\nclass MyClass {\n    private int x;\n\n    public MyClass(int x) {\n        this.x = x;\n    }\n\n    public String toString() {\n        return String.format(\"Object:%d value: %d\", this.hashCode(), x);\n    }\n\n}\n\n// 1\n// 2\n// 3\n// 4\n// 5\n\n// Arta\n// Ioannina\n// Preveza\n// Igoumenitsa\n\n// Object:617901222 value: 1\n// Object:1149319664 value: 2\n// Object:2093631819 value: 3\n</code></pre> generics2.ExampleBounds.java<pre><code>import java.util.Arrays;   \nimport java.util.Collections;\n\npublic class ExampleBounds {\n\n    public static &lt;T extends Comparable&gt; void doIt(T[] list) {\n        Arrays.sort(list, Collections.reverseOrder());\n        for (T elem : list) {\n            System.out.println(elem);\n        }\n    }\n\n    public static void main(String[] args) {\n        Integer a[] = new Integer[] { 1, 2, 3, 4, 5 };\n        doIt(a);\n\n        System.out.println();\n\n        String b[] = new String[] { \"Arta\", \"Ioannina\", \"Preveza\", \"Igoumenitsa\" };\n        doIt(b);\n\n        System.out.println();\n\n        // MyClass c[] = new MyClass[] { new MyClass(1), new MyClass(2), new MyClass(3) };\n        // doIt(c); // error: method doIt in class Example cannot be applied to given types;\n    }\n}\n\nclass MyClass {\n    private int x;\n\n    public MyClass(int x) {\n        this.x = x;\n    }\n\n    public String toString() {\n        return String.format(\"Object:%d value: %d\", this.hashCode(), x);\n    }\n\n}\n\n// 1\n// 2\n// 3\n// 4\n// 5\n\n// Arta\n// Ioannina\n// Preveza\n// Igoumenitsa\n</code></pre> generics3.ExampleWildcards.java<pre><code>import java.util.Collection;\nimport java.util.ArrayList;\n\npublic class ExampleWildcards {\n\n    static void printCollection(Collection&lt;?&gt; c) {\n        for (Object e : c) {\n            System.out.println(e);\n        }\n    }\n\n    public static void main(String[] args) {\n        Collection&lt;String&gt; c = new ArrayList&lt;String&gt;();\n        c.add(\"Arta\");\n        c.add(\"Ioannina\");\n        c.add(\"Preveza\");\n        c.add(\"Igoumenitsa\");\n\n        printCollection(c);\n    }\n\n}\n\n// Arta\n// Ioannina\n// Preveza\n// Igoumenitsa\n</code></pre>"},{"location":"theory_ch9/#9103-c-2005","title":"9.10.3 \u0393\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03c3\u03c4\u03b7 C# 2005","text":"<p>\u039f\u03b9 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03bc\u03ad\u03b8\u03bf\u03b4\u03bf\u03b9 \u03c3\u03c4\u03b7 C# \u03b5\u03af\u03bd\u03b1\u03b9 \u03c0\u03b1\u03c1\u03cc\u03bc\u03bf\u03b9\u03b5\u03c2 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03bc\u03b5\u03b8\u03cc\u03b4\u03bf\u03c5\u03c2 \u03c3\u03c4\u03b7 Java, \u03b1\u03bb\u03bb\u03ac \u03b4\u03b5\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03c4\u03cd\u03c0\u03bf\u03b9 \u03bc\u03c0\u03b1\u03bb\u03b1\u03bd\u03c4\u03ad\u03c1.</p>"},{"location":"theory_ch9/#9104-f","title":"9.10.4 \u0393\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c3\u03c4\u03b7 F#","text":"<p>H \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1 F# \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03b5\u03b9 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2, \u03b1\u03bb\u03bb\u03ac \u03b5\u03af\u03bd\u03b1\u03b9 \u03bb\u03b9\u03b3\u03cc\u03c4\u03b5\u03c1\u03bf \u03c7\u03c1\u03ae\u03c3\u03b9\u03bc\u03b5\u03c2 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03b3\u03b5\u03bd\u03b9\u03ba\u03ad\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03c4\u03c9\u03bd C++, Java \u03ba\u03b1\u03b9 C#.</p>"},{"location":"theory_ch9/#911","title":"9.11 \u03a5\u03c0\u03b5\u03c1\u03c6\u03bf\u03c1\u03c4\u03c9\u03bc\u03ad\u03bd\u03bf\u03b9 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ad\u03c2 \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03b5\u03b9 \u03bf \u03c7\u03c1\u03ae\u03c3\u03c4\u03b7\u03c2","text":"<p>\u03a5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03c5\u03bd \u03bf\u03b9 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2: Ada, C++, Python, Ruby.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03c5\u03c0\u03b5\u03c1\u03c6\u03cc\u03c1\u03c4\u03c9\u03c3\u03b7\u03c2 \u03c4\u03b5\u03bb\u03b5\u03c3\u03c4\u03ce\u03bd \u03c3\u03c4\u03b7\u03bd Python. \u03a5\u03bb\u03bf\u03c0\u03bf\u03af\u03b7\u03c3\u03b7 \u03c0\u03c1\u03ac\u03be\u03b5\u03c9\u03bd +, -, * \u03b3\u03b9\u03b1  \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c4\u03b9\u03bc\u03ce\u03bd (intervals). \u0394\u03b5\u03af\u03c4\u03b5 \u03c4\u03b7\u03bd \u03c0\u03b5\u03c1\u03b9\u03b3\u03c1\u03b1\u03c6\u03ae \u03c4\u03c9\u03bd \u03c0\u03c1\u03ac\u03be\u03b5\u03c9\u03bd \u03bc\u03b5 \u03b4\u03b9\u03b1\u03c3\u03c4\u03ae\u03bc\u03b1\u03c4\u03b1 \u03c3\u03c4\u03bf https://en.wikipedia.org/wiki/Interval_arithmetic.</p> interval.py<pre><code>class Interval:\n    def __init__(self, start, end):\n        self.start = start\n        self.end = end\n\n    def __str__(self):\n        return f\"({self.start},{self.end})\"\n\n    def __add__(self, other):\n        return Interval(self.start + other.start, self.end + other.end)\n\n    def __sub__(self, other):\n        return Interval(self.start - other.end, self.end - other.start)\n\n    def __mul__(self, other):\n        minimum = min(\n            [\n                self.start * other.start,\n                self.start * other.end,\n                self.end * other.start,\n                self.end * other.end,\n            ]\n        )\n        maximum = max(\n            [\n                self.start * other.start,\n                self.start * other.end,\n                self.end * other.start,\n                self.end * other.end,\n            ]\n        )\n        return Interval(minimum, maximum)\n\n\ni1 = Interval(1, 5)\ni2 = Interval(4, 6)\nprint(i1 + i2)\nprint(i1 - i2)\nprint(i2 - i1)\nprint(i1 * i2)\n</code></pre> <p>\u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9:</p> <pre><code>(5,11)\n(-5,1)\n(-1,5)\n(4,30)\n</code></pre>"},{"location":"theory_ch9/#912","title":"9.12 \u039a\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2","text":"<p>\u039a\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 (closure) \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03ba\u03b1\u03b9 \u03c4\u03bf \u03c0\u03b5\u03c1\u03b9\u03b2\u03ac\u03bb\u03bb\u03bf\u03bd \u03b1\u03bd\u03b1\u03c6\u03bf\u03c1\u03ac\u03c2 \u03c3\u03c4\u03bf \u03bf\u03c0\u03bf\u03af\u03bf \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9. \u039f\u03b9 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 \u03b5\u03af\u03bd\u03b1\u03b9 \u03c7\u03c1\u03ae\u03c3\u03b9\u03bc\u03b5\u03c2 \u03c3\u03b5 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03bf\u03c5\u03bd \u03ad\u03bd\u03b8\u03b5\u03c4\u03b1 \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03ac\u03bc\u03bc\u03b1\u03c4\u03b1, \u03ad\u03c7\u03bf\u03c5\u03bd \u03c3\u03c4\u03b1\u03c4\u03b9\u03ba\u03ae \u03b5\u03bc\u03b2\u03ad\u03bb\u03b5\u03b9\u03b1 \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03bf\u03c5\u03bd \u03c4\u03b7\u03bd \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03bf\u03c6\u03ae \u03c5\u03c0\u03bf\u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03ac\u03c4\u03c9\u03bd \u03b1\u03c0\u03cc \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03ae\u03c3\u03b5\u03b9\u03c2 \u03ba\u03b1\u03b9 \u03c4\u03b7\u03bd \u03b5\u03ba\u03c7\u03ce\u03c1\u03b7\u03c3\u03ae \u03c4\u03bf\u03c5\u03c2 \u03c3\u03b5 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ad\u03c2. </p> <p>\u039f\u03b9 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b5\u03c2 \u03c5\u03c0\u03bf\u03c3\u03c4\u03b7\u03c1\u03af\u03b6\u03bf\u03bd\u03c4\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c3\u03c5\u03bd\u03b1\u03c1\u03c4\u03b7\u03c3\u03b9\u03b1\u03ba\u03bf\u03cd \u03c0\u03c1\u03bf\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1\u03c4\u03b9\u03c3\u03bc\u03bf\u03cd, \u03b1\u03c0\u03cc \u03c4\u03b9\u03c2 \u03c0\u03b5\u03c1\u03b9\u03c3\u03c3\u03cc\u03c4\u03b5\u03c1\u03b5\u03c2 \u03b3\u03bb\u03ce\u03c3\u03c3\u03b5\u03c2 \u03c3\u03b5\u03bd\u03b1\u03c1\u03af\u03c9\u03bd \u03ba\u03b1\u03b9 \u03b1\u03c0\u03cc \u03c4\u03b7\u03bd C# (\u03c0\u03c1\u03bf\u03c3\u03c4\u03b1\u03ba\u03c4\u03b9\u03ba\u03ae \u03b3\u03bb\u03ce\u03c3\u03c3\u03b1).</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c3\u03b5 JavaScript</p> sebesta_9_12.js<pre><code>function makeAdder(x) {\n    return function(y) {return x + y;}\n}\n\nvar add10 = makeAdder(10);\nvar add5 = makeAdder(5);\n\nconsole.log(\"Add 10 to 20: \" + add10(20));\nconsole.log(\"Add 5 to 20: \" + add5(20));\n</code></pre> <p>\u03a3\u03b5 \u03b1\u03c5\u03c4\u03cc \u03c4\u03bf \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03b7 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1 \u03b5\u03af\u03bd\u03b1\u03b9 \u03b7 \u03b1\u03bd\u03ce\u03bd\u03c5\u03bc\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03c0\u03bf\u03c5 \u03bf\u03c1\u03af\u03b6\u03b5\u03c4\u03b1\u03b9 \u03bc\u03ad\u03c3\u03b1 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>makeAdder</code>. \u0397 \u03bc\u03b5\u03c4\u03b1\u03b2\u03bb\u03b7\u03c4\u03ae <code>x</code> \u03c0\u03bf\u03c5 \u03b1\u03bd\u03b1\u03c6\u03ad\u03c1\u03b5\u03c4\u03b1\u03b9 \u03bc\u03ad\u03c3\u03b1 \u03c3\u03c4\u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2 \u03c0\u03c1\u03bf\u03c3\u03b4\u03ad\u03bd\u03b5\u03c4\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03b7\u03bd \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf \u03c0\u03bf\u03c5 \u03c3\u03c4\u03ad\u03bb\u03bd\u03b5\u03c4\u03b1\u03b9 \u03ba\u03ac\u03b8\u03b5 \u03c6\u03bf\u03c1\u03ac \u03c3\u03c4\u03b7 <code>makeAdder</code>. \u03a3\u03c4\u03bf \u03c0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1, \u03b7 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7 <code>makeAdder</code> \u03ba\u03b1\u03bb\u03b5\u03af\u03c4\u03b1\u03b9 \u03b4\u03cd\u03bf \u03c6\u03bf\u03c1\u03ad\u03c2, \u03bc\u03b9\u03b1 \u03bc\u03b5 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf 10 \u03ba\u03b1\u03b9 \u03bc\u03b9\u03b1 \u03bc\u03b5 \u03c0\u03b1\u03c1\u03ac\u03bc\u03b5\u03c4\u03c1\u03bf 5. \u039a\u03ac\u03b8\u03b5 \u03ba\u03bb\u03ae\u03c3\u03b7 \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03b4\u03b9\u03b1\u03c6\u03bf\u03c1\u03b5\u03c4\u03b9\u03ba\u03ae \u03b5\u03ba\u03b4\u03bf\u03c7\u03ae \u03c4\u03b7\u03c2 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03cc\u03c4\u03b7\u03c4\u03b1\u03c2.</p> <p>\u03b8\u03b1 \u03b5\u03bc\u03c6\u03b1\u03bd\u03af\u03c3\u03b5\u03b9:</p> <pre><code>Add 10 to 20: 30\nAdd 5 to 20: 25\n</code></pre> <p>\u03a0\u03b1\u03c1\u03b1\u03b4\u03b5\u03af\u03b3\u03bc\u03b1\u03c4\u03b1 \u03ba\u03bb\u03b5\u03b9\u03c3\u03c4\u03bf\u03c4\u03ae\u03c4\u03c9\u03bd \u03bc\u03b5 \u03c4\u03b7\u03bd Python</p> closure1.py<pre><code>def outer_func():\n    message = \"Hi\"\n\n    def inner_function():\n        print(message)  # free variable\n\n    return inner_function()\n\n\nouter_func()\n</code></pre> <pre><code>$ python closure1.py\nHi\n</code></pre> closure2.py<pre><code>def outer_func():\n    message = \"Hi\"\n\n    def inner_function():\n        print(message)  # free variable\n\n    return inner_function  # \u03b1\u03bb\u03bb\u03b1\u03b3\u03ae \u03c3\u03b5 \u03c3\u03c7\u03ad\u03c3\u03b7 \u03bc\u03b5 \u03c4\u03bf closure1.py, \u03b5\u03c0\u03b9\u03c3\u03c4\u03c1\u03ad\u03c6\u03b5\u03b9 \u03c4\u03bf \u03cc\u03bd\u03bf\u03bc\u03b1 \u03c4\u03b7\u03c2 \u03b5\u03bc\u03c6\u03c9\u03bb\u03b5\u03c5\u03bc\u03ad\u03bd\u03b7\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2\n\n\nmy_func = outer_func()\nmy_func()\n</code></pre> <pre><code>$ python closure2.py\nHi\n</code></pre> closure3.py<pre><code>def outer_func(msg):\n    message = msg\n\n    def inner_function():\n        print(message)  # free variable\n\n    return inner_function\n\n\nhi_func = outer_func(\"Hi\")\nhello_func = outer_func(\"hello\")\n\nhi_func()\nhello_func()\n</code></pre> <pre><code>$ python closure3.py\nHi\nhello\n</code></pre> closure4.py<pre><code>import logging\n\nlogging.basicConfig(level=logging.INFO)\n\n\ndef logger(func):\n    def log_func(*args):\n        logging.info(f'Running \"{func.__name__}\" with arguments {args}')\n        print(func(*args))\n\n    return log_func\n\n\ndef add(x, y):\n    return x + y\n\n\ndef sub(x, y):\n    return x - y\n\n\nadd_logger = logger(add)\nsub_logger = logger(sub)\n\nadd_logger(3, 3)\nsub_logger(3, 3)\n</code></pre> <pre><code>$ python closure4.py\nINFO:root:Running \"add\" with arguments (3, 3)\n6\nINFO:root:Running \"sub\" with arguments (3, 3)\n0\n</code></pre> closure5a.py<pre><code># https://www.youtube.com/watch?v=yiSdpYmZA2w\n\ndef enter_number(x):\n    numbers = []\n    numbers.append(x)\n    print(numbers)\n\nenter_number(3)\nenter_number(7)\nenter_number(4)\n\n\n# [3]\n# [7]\n# [4]\n</code></pre> closure5b.py<pre><code># https://www.youtube.com/watch?v=yiSdpYmZA2w\n\nnumbers = []\ndef enter_number(x):\n    numbers.append(x)\n    print(numbers)\n\nenter_number(3)\nenter_number(7)\nenter_number(4)\n\n# [3]\n# [3, 7]\n# [3, 7, 4]\n</code></pre> closure5c.py<pre><code># https://www.youtube.com/watch?v=yiSdpYmZA2w\n\n\ndef enter_numbers_outer():\n    numbers = []\n\n    def enter_number(x):\n        numbers.append(x)\n        print(numbers)\n\n    return enter_number\n\n\nenter_number = enter_numbers_outer()\nenter_number(3)\nenter_number(7)\nenter_number(4)\n\n\n# [3]\n# [3, 7]\n# [3, 7, 4]\n</code></pre>"},{"location":"theory_ch9/#913-coroutines","title":"9.13 \u03a3\u03c5\u03c1\u03c1\u03bf\u03c5\u03c4\u03af\u03bd\u03b5\u03c2 (coroutines)","text":"<p>\u039c\u03b9\u03b1 \u03c3\u03c5\u03c1\u03c1\u03bf\u03c5\u03c4\u03af\u03bd\u03b1 (coroutine) \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1 \u03b5\u03b9\u03b4\u03b9\u03ba\u03cc \u03c5\u03c0\u03bf\u03c0\u03c1\u03cc\u03b3\u03c1\u03b1\u03bc\u03bc\u03b1 \u03c0\u03bf\u03c5 \u03ad\u03c7\u03b5\u03b9 \u03c0\u03bf\u03bb\u03bb\u03b1\u03c0\u03bb\u03ad\u03c2 \u03b5\u03b9\u03c3\u03cc\u03b4\u03bf\u03c5\u03c2.</p> <p>\u0394\u03b5\u03af\u03c4\u03b5 \u03c4\u03bf Coroutines As Threads.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 Python</p> <p>\u039f\u03b9 coroutines \u03b5\u03af\u03bd\u03b1\u03b9 \u03ad\u03bd\u03b1\u03c2 \u03c4\u03cd\u03c0\u03bf\u03c2 \u03c3\u03c5\u03bd\u03ac\u03c1\u03c4\u03b7\u03c3\u03b7\u03c2 \u03c0\u03bf\u03c5 \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03b5\u03b9 \u03c4\u03b7\u03bd \u03c0\u03b1\u03cd\u03c3\u03b7 \u03ba\u03b1\u03b9 \u03c4\u03b7 \u03c3\u03c5\u03bd\u03ad\u03c7\u03b5\u03b9\u03b1 \u03c4\u03b7\u03c2 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2. \u03a3\u03c4\u03b7\u03bd Python \u03bf\u03b9 coroutines \u03c5\u03bb\u03bf\u03c0\u03bf\u03b9\u03bf\u03cd\u03bd\u03b1\u03b9 \u03bc\u03b5 \u03c4\u03b9\u03c2 \u03bb\u03ad\u03be\u03b5\u03b9\u03c2 \u03ba\u03bb\u03b5\u03b9\u03b4\u03b9\u03ac async, await \u03b1\u03c0\u03cc \u03c4\u03b7 \u03b2\u03b9\u03b2\u03bb\u03b9\u03bf\u03b8\u03ae\u03ba\u03b7 asyncio \u03ba\u03b1\u03b9 \u03b5\u03c0\u03b9\u03c4\u03c1\u03ad\u03c0\u03bf\u03c5\u03bd \u03c4\u03b7 \u03c3\u03c5\u03b3\u03b3\u03c1\u03b1\u03c6\u03ae \u03b1\u03c3\u03cd\u03b3\u03c7\u03c1\u03bf\u03bd\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1.</p> <p>\u03a0\u03b1\u03c1\u03ac\u03b4\u03b5\u03b9\u03b3\u03bc\u03b1 \u03bc\u03b5 2 tasks \u03c0\u03bf\u03c5 \u03b5\u03ba\u03c4\u03b5\u03bb\u03bf\u03cd\u03bd\u03c4\u03b1\u03b9 \u03c4\u03b1\u03c5\u03c4\u03cc\u03c7\u03c1\u03bf\u03bd\u03b1 (concurrently). \u03a4\u03bf keyword await \u03c0\u03c1\u03bf\u03ba\u03b1\u03bb\u03b5\u03af \u03c0\u03b1\u03cd\u03c3\u03b7 \u03b5\u03ba\u03c4\u03ad\u03bb\u03b5\u03c3\u03b7\u03c2 \u03c4\u03b7\u03c2 \u03c4\u03c1\u03ad\u03c7\u03bf\u03c5\u03c3\u03b1\u03c2 coroutine \u03bc\u03ad\u03c7\u03c1\u03b9 \u03c4\u03bf \u03b1\u03bd\u03c4\u03b9\u03ba\u03b5\u03af\u03bc\u03b5\u03bd\u03bf \u03c0\u03bf\u03c5 \u03b4\u03ad\u03c7\u03b5\u03c4\u03b1\u03b9 \u03c9\u03c2 \u03cc\u03c1\u03b9\u03c3\u03bc\u03b1 \u03bd\u03b1 \u03bf\u03bb\u03bf\u03ba\u03bb\u03b7\u03c1\u03ce\u03c3\u03b5\u03b9 \u03c4\u03b7\u03bd \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1 \u03c4\u03bf\u03c5.</p> coroutines.py<pre><code>import asyncio\nimport random\n\nasync def task1():\n    delay = random.randint(3, 10)\n    print(f\"Task 1 started (sleeping for {delay} seconds)\")\n    await asyncio.sleep(delay)\n    print(f\"Task 1 finished after {delay} seconds\")\n\nasync def task2():\n    delay = random.randint(3, 10)\n    print(f\"Task 2 started (sleeping for {delay} seconds)\")\n    await asyncio.sleep(delay)\n    print(f\"Task 2 finished after {delay} seconds\")\n\nasync def main():\n    await asyncio.gather(task1(), task2())\n\nasyncio.run(main())\n</code></pre> <pre><code>$ python coroutines.py\nTask 1 started (sleeping for 9 seconds)\nTask 2 started (sleeping for 8 seconds)\nTask 2 finished after 8 seconds\nTask 1 finished after 9 seconds\n</code></pre>"},{"location":"assignments/2024_4/","title":"\u039b\u03cd\u03c3\u03b7 \u03b5\u03c1\u03b3\u03b1\u03c3\u03af\u03b1\u03c2 4","text":""},{"location":"assignments/2024_4/#python","title":"Python","text":"<pre><code>$ python python_plain_timer.py\ninput1000.txt - elapsed time 0.003833\ninput100000.txt - elapsed time 0.358541\ninput1000000.txt - elapsed time 4.434623\n</code></pre>"},{"location":"assignments/2024_4/#linux-macos","title":"\u03a3\u03b5 Linux \u03ae MacOS","text":"<pre><code>$ time python python_plain.py input100000.txt\npython python_plain.py input100000.txt  0.37s user 0.02s system 92% cpu 0.424 total\n$ time python python_plain.py input100000.txt\npython python_plain.py input100000.txt  0.37s user 0.02s system 92% cpu 0.424 total\n$ time python python_plain.py input1000000.txt\npython python_plain.py input1000000.txt  4.44s user 0.10s system 97% cpu 4.631 total\n</code></pre> <pre><code>$ ./time_python_plain.sh\nreal    0m0.045s\nuser    0m0.015s\nsys 0m0.010s\n\nreal    0m0.370s\nuser    0m0.351s\nsys 0m0.011s\n\nreal    0m4.609s\nuser    0m4.449s\nsys 0m0.089s\n</code></pre>"},{"location":"src/c/hello_compilation_steps/","title":"\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7","text":"<p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 \u03c0\u03b7\u03b3\u03b1\u03af\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 hello.c <pre><code>$ gcc hello.c\n$ ./a.out\nHello World!\n</code></pre></p> <p>\u03a3\u03c4\u03b1\u03b4\u03b9\u03b1\u03ba\u03ae \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03b5\u03c3\u03c9\u03bd \u03b1\u03c1\u03c7\u03b5\u03af\u03c9\u03bd \u03ba\u03b1\u03c4\u03ac \u03c4\u03b7\u03bd \u03bc\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 \u03c0\u03b7\u03b3\u03b1\u03af\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 hello.c <pre><code>1. \u03a0\u03c1\u03bf\u03b5\u03c0\u03b5\u03be\u03b5\u03c1\u03b3\u03b1\u03c3\u03c4\u03ae\u03c2\n$ gcc -o hello.i hello.c -E\n\n2. \u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7\n$ gcc -o hello.s hello.i -S\n\n3. \u03a3\u03c5\u03bc\u03b2\u03bf\u03bb\u03bf\u03bc\u03b5\u03c4\u03ac\u03c6\u03c1\u03b1\u03c3\u03b7\n$ as -o hello.o hello.s\n\n4. \u03a3\u03cd\u03bd\u03b4\u03b5\u03c3\u03b7\n$ gcc -o hello hello.o\n</code></pre></p> <p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 \u03c0\u03b7\u03b3\u03b1\u03af\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 hello.c \u03bc\u03b5 \u03b4\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 \u03c4\u03c9\u03bd \u03b5\u03bd\u03b4\u03b9\u03ac\u03bc\u03c3\u03b5\u03c9\u03bd \u03b1\u03c1\u03c7\u03b5\u03af\u03c9\u03bd  <pre><code>$ gcc -o hello hello.c -save-temps\n$ ./hello\nHello World!\n</code></pre></p>"},{"location":"src/c/hello_compilation_steps/#clang","title":"\u0397 \u03c0\u03b5\u03c1\u03af\u03c0\u03c4\u03c9\u03c3\u03b7 \u03c4\u03bf\u03c5 clang","text":"<p>\u039c\u03b5\u03c4\u03b1\u03b3\u03bb\u03ce\u03c4\u03c4\u03b9\u03c3\u03b7 \u03c4\u03bf\u03c5 \u03b1\u03c1\u03c7\u03b5\u03af\u03bf\u03c5 \u03c0\u03b7\u03b3\u03b1\u03af\u03bf\u03c5 \u03ba\u03ce\u03b4\u03b9\u03ba\u03b1 hello.c <pre><code>\u0394\u03b7\u03bc\u03b9\u03bf\u03c5\u03c1\u03b3\u03af\u03b1 llvm bytecode\n$ clang -o hello.bc hello.c -emit-llvm \n</code></pre></p>"},{"location":"src/java/ch12_2_3_ex1/","title":"Index","text":"<p>Cmd + Shift + P: Java -&gt; Configure classpath Cmd + Shift + P: Java -&gt; Configure Java Runtime (21) Cmd + Shift + P: Java -&gt; Clean Java Language Server Workspace</p>"}]}